# compiler: R8
# compiler_version: 3.2.74
# min_api: 24
# common_typos_disable
# {"id":"com.android.tools.r8.mapping","version":"2.0"}
# pg_map_id: 418c50f
# pg_map_hash: SHA-256 418c50f977af5544ed02f997473c11c3dcd8920cf26b2c4bf78f30c50ba35952
android.support.v4.app.RemoteActionCompatParcelizer -> android.support.v4.app.RemoteActionCompatParcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:18:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.graphics.drawable.IconCompatParcelizer -> android.support.v4.graphics.drawable.IconCompatParcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:18:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.activity.ComponentActivity -> androidx.activity.ComponentActivity:
    61:123:void <init>() -> <init>
    50:50:void access$001(androidx.activity.ComponentActivity) -> access$001
    241:241:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    297:297:androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher() -> getOnBackPressedDispatcher
    303:303:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    257:272:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    286:287:void onBackPressed() -> onBackPressed
    149:155:void onCreate(android.os.Bundle) -> onCreate
    208:208:java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    176:196:java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    160:166:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
androidx.activity.ComponentActivity$1 -> androidx.activity.ComponentActivity$1:
    69:69:void <init>(androidx.activity.ComponentActivity) -> <init>
    72:73:void run() -> run
androidx.activity.ComponentActivity$2 -> androidx.activity.ComponentActivity$2:
    94:94:void <init>(androidx.activity.ComponentActivity) -> <init>
    98:105:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.ComponentActivity$3 -> androidx.activity.ComponentActivity$3:
    108:108:void <init>(androidx.activity.ComponentActivity) -> <init>
    112:117:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.ComponentActivity$NonConfigurationInstances -> androidx.activity.ComponentActivity$NonConfigurationInstances:
    56:56:void <init>() -> <init>
androidx.activity.ImmLeaksCleaner -> androidx.activity.ImmLeaksCleaner:
    38:38:void <clinit>() -> <clinit>
    101:112:void initializeReflectiveFields() -> initializeReflectiveFields
    51:96:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.OnBackPressedCallback -> androidx.activity.OnBackPressedCallback:
    46:56:void <init>(boolean) -> <init>
    103:104:void addCancellable(androidx.activity.Cancellable) -> addCancellable
    82:82:boolean isEnabled() -> isEnabled
    91:94:void remove() -> remove
    107:108:void removeCancellable(androidx.activity.Cancellable) -> removeCancellable
    71:72:void setEnabled(boolean) -> setEnabled
androidx.activity.OnBackPressedDispatcher -> androidx.activity.OnBackPressedDispatcher:
    57:77:void <init>(java.lang.Runnable) -> <init>
    145:152:void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback) -> addCallback
    112:115:androidx.activity.Cancellable addCancellableCallback(androidx.activity.OnBackPressedCallback) -> addCancellableCallback
    184:196:void onBackPressed() -> onBackPressed
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable -> androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable:
    220:224:void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback) -> <init>
    243:249:void cancel() -> cancel
    229:239:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable -> androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable:
    200:202:void <init>(androidx.activity.OnBackPressedDispatcher,androidx.activity.OnBackPressedCallback) -> <init>
    206:208:void cancel() -> cancel
androidx.appcompat.app.ActionBar -> androidx.appcompat.app.ActionBar:
    92:92:void <init>() -> <init>
    1074:1074:boolean closeOptionsMenu() -> closeOptionsMenu
    1080:1080:boolean invalidateOptionsMenu() -> invalidateOptionsMenu
    1121:1121:void onDestroy() -> onDestroy
    1086:1086:boolean onMenuKeyEvent(android.view.KeyEvent) -> onMenuKeyEvent
    1068:1068:boolean openOptionsMenu() -> openOptionsMenu
androidx.appcompat.app.ActionBar$LayoutParams -> androidx.appcompat.app.ActionBar$LayoutParams:
    1374:1382:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1374:1387:void <init>(int,int) -> <init>
    1374:1402:void <init>(androidx.appcompat.app.ActionBar$LayoutParams) -> <init>
    1374:1406:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
androidx.appcompat.app.ActionBar$Tab -> androidx.appcompat.app.ActionBar$Tab:
    1171:1171:void <init>() -> <init>
androidx.appcompat.app.ActionBarDrawerToggle -> androidx.appcompat.app.ActionBarDrawerToggle:
    184:186:void <init>(android.app.Activity,androidx.drawerlayout.widget.DrawerLayout,androidx.appcompat.widget.Toolbar,int,int) -> <init>
    120:224:void <init>(android.app.Activity,androidx.appcompat.widget.Toolbar,androidx.drawerlayout.widget.DrawerLayout,androidx.appcompat.graphics.drawable.DrawerArrowDrawable,int,int) -> <init>
    503:503:android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    340:340:boolean isDrawerIndicatorEnabled() -> isDrawerIndicatorEnabled
    444:448:void onDrawerClosed(android.view.View) -> onDrawerClosed
    429:433:void onDrawerOpened(android.view.View) -> onDrawerOpened
    413:418:void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    459:459:void onDrawerStateChanged(int) -> onDrawerStateChanged
    499:500:void setActionBarDescription(int) -> setActionBarDescription
    489:496:void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    507:513:void setPosition(float) -> setPosition
    485:486:void setToolbarNavigationClickListener(android.view.View$OnClickListener) -> setToolbarNavigationClickListener
    236:246:void syncState() -> syncState
    282:289:void toggle() -> toggle
androidx.appcompat.app.ActionBarDrawerToggle$1 -> androidx.appcompat.app.ActionBarDrawerToggle$1:
    198:198:void <init>(androidx.appcompat.app.ActionBarDrawerToggle) -> <init>
    201:206:void onClick(android.view.View) -> onClick
androidx.appcompat.app.ActionBarDrawerToggle$FrameworkActionBarDelegate -> androidx.appcompat.app.ActionBarDrawerToggle$FrameworkActionBarDelegate:
    519:521:void <init>(android.app.Activity) -> <init>
    538:542:android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    525:531:android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    547:549:boolean isNavigationVisible() -> isNavigationVisible
    570:579:void setActionBarDescription(int) -> setActionBarDescription
    554:566:void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
androidx.appcompat.app.ActionBarDrawerToggle$ToolbarCompatDelegate -> androidx.appcompat.app.ActionBarDrawerToggle$ToolbarCompatDelegate:
    591:595:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    619:619:android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    614:614:android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    624:624:boolean isNavigationVisible() -> isNavigationVisible
    605:610:void setActionBarDescription(int) -> setActionBarDescription
    599:601:void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
androidx.appcompat.app.AlertController -> androidx.appcompat.app.AlertController:
    82:206:void <init>(android.content.Context,androidx.appcompat.app.AppCompatDialog,android.view.Window) -> <init>
    209:227:boolean canTextInput(android.view.View) -> canTextInput
    829:833:void centerButton(android.widget.Button) -> centerButton
    398:400:int getIconAttributeResId(int) -> getIconAttributeResId
    404:404:android.widget.ListView getListView() -> getListView
    231:234:void installContent() -> installContent
    422:422:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    427:427:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    441:463:android.view.ViewGroup resolvePanel(android.view.View,android.view.View) -> resolvePanel
    237:243:int selectContentView() -> selectContentView
    323:350:void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message,android.graphics.drawable.Drawable) -> setButton
    257:258:void setCustomTitle(android.view.View) -> setCustomTitle
    359:370:void setIcon(int) -> setIcon
    378:389:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    261:265:void setMessage(java.lang.CharSequence) -> setMessage
    560:636:void setScrollIndicators(android.view.ViewGroup,android.view.View,int,int) -> setScrollIndicators
    247:251:void setTitle(java.lang.CharSequence) -> setTitle
    271:274:void setView(int) -> setView
    280:283:void setView(android.view.View) -> setView
    290:297:void setView(android.view.View,int,int,int,int) -> setView
    759:826:void setupButtons(android.view.ViewGroup) -> setupButtons
    719:745:void setupContent(android.view.ViewGroup) -> setupContent
    640:670:void setupCustomContent(android.view.ViewGroup) -> setupCustomContent
    673:716:void setupTitle(android.view.ViewGroup) -> setupTitle
    467:555:void setupView() -> setupView
    177:179:boolean shouldCenterSingleButton(android.content.Context) -> shouldCenterSingleButton
androidx.appcompat.app.AlertController$1 -> androidx.appcompat.app.AlertController$1:
    126:126:void <init>(androidx.appcompat.app.AlertController) -> <init>
    130:147:void onClick(android.view.View) -> onClick
androidx.appcompat.app.AlertController$AlertParams -> androidx.appcompat.app.AlertController$AlertParams:
    869:928:void <init>(android.content.Context) -> <init>
    931:985:void apply(androidx.appcompat.app.AlertController) -> apply
    988:1098:void createListView(androidx.appcompat.app.AlertController) -> createListView
androidx.appcompat.app.AlertController$AlertParams$1 -> androidx.appcompat.app.AlertController$AlertParams$1:
    995:995:void <init>(androidx.appcompat.app.AlertController$AlertParams,android.content.Context,int,int,java.lang.CharSequence[],androidx.appcompat.app.AlertController$RecycleListView) -> <init>
    998:1005:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
androidx.appcompat.app.AlertController$AlertParams$2 -> androidx.appcompat.app.AlertController$AlertParams$2:
    1009:1017:void <init>(androidx.appcompat.app.AlertController$AlertParams,android.content.Context,android.database.Cursor,boolean,androidx.appcompat.app.AlertController$RecycleListView,androidx.appcompat.app.AlertController) -> <init>
    1021:1026:void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    1030:1030:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
androidx.appcompat.app.AlertController$AlertParams$3 -> androidx.appcompat.app.AlertController$AlertParams$3:
    1065:1065:void <init>(androidx.appcompat.app.AlertController$AlertParams,androidx.appcompat.app.AlertController) -> <init>
    1068:1072:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.app.AlertController$AlertParams$4 -> androidx.appcompat.app.AlertController$AlertParams$4:
    1075:1075:void <init>(androidx.appcompat.app.AlertController$AlertParams,androidx.appcompat.app.AlertController$RecycleListView,androidx.appcompat.app.AlertController) -> <init>
    1078:1083:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.app.AlertController$ButtonHandler -> androidx.appcompat.app.AlertController$ButtonHandler:
    156:158:void <init>(android.content.DialogInterface) -> <init>
    162:173:void handleMessage(android.os.Message) -> handleMessage
androidx.appcompat.app.AlertController$CheckedItemAdapter -> androidx.appcompat.app.AlertController$CheckedItemAdapter:
    1104:1105:void <init>(android.content.Context,int,int,java.lang.CharSequence[]) -> <init>
    1114:1114:long getItemId(int) -> getItemId
    1109:1109:boolean hasStableIds() -> hasStableIds
androidx.appcompat.app.AlertController$RecycleListView -> androidx.appcompat.app.AlertController$RecycleListView:
    844:852:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    855:862:void setHasDecor(boolean,boolean) -> setHasDecor
androidx.appcompat.app.AlertDialog -> androidx.appcompat.app.AlertDialog:
    98:100:void <init>(android.content.Context,int) -> <init>
    140:140:android.widget.ListView getListView() -> getListView
    278:280:void onCreate(android.os.Bundle) -> onCreate
    284:287:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    292:295:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    111:116:int resolveDialogTheme(android.content.Context,int) -> resolveDialogTheme
    145:147:void setTitle(java.lang.CharSequence) -> setTitle
androidx.appcompat.app.AlertDialog$Builder -> androidx.appcompat.app.AlertDialog$Builder:
    313:314:void <init>(android.content.Context) -> <init>
    342:346:void <init>(android.content.Context,int) -> <init>
    983:994:androidx.appcompat.app.AlertDialog create() -> create
    358:358:android.content.Context getContext() -> getContext
    659:661:androidx.appcompat.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener) -> setAdapter
    398:399:androidx.appcompat.app.AlertDialog$Builder setCustomTitle(android.view.View) -> setCustomTitle
    445:446:androidx.appcompat.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable) -> setIcon
    620:621:androidx.appcompat.app.AlertDialog$Builder setOnKeyListener(android.content.DialogInterface$OnKeyListener) -> setOnKeyListener
    853:857:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    377:378:androidx.appcompat.app.AlertDialog$Builder setTitle(java.lang.CharSequence) -> setTitle
androidx.appcompat.app.AppCompatActivity -> androidx.appcompat.app.AppCompatActivity:
    87:88:void <init>() -> <init>
    185:186:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    107:108:void attachBaseContext(android.content.Context) -> attachBaseContext
    620:625:void closeOptionsMenu() -> closeOptionsMenu
    563:569:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    223:223:android.view.View findViewById(int) -> findViewById
    553:556:androidx.appcompat.app.AppCompatDelegate getDelegate() -> getDelegate
    517:517:androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
    165:165:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    574:577:android.content.res.Resources getResources() -> getResources
    139:139:androidx.appcompat.app.ActionBar getSupportActionBar() -> getSupportActionBar
    464:464:android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
    278:279:void invalidateOptionsMenu() -> invalidateOptionsMenu
    190:200:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    504:505:void onContentChanged() -> onContentChanged
    112:116:void onCreate(android.os.Bundle) -> onCreate
    381:382:void onCreateSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder) -> onCreateSupportNavigateUpTaskStack
    242:244:void onDestroy() -> onDestroy
    603:606:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    228:237:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    528:528:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    634:634:void onNightModeChanged(int) -> onNightModeChanged
    539:540:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    126:128:void onPostCreate(android.os.Bundle) -> onPostCreate
    204:206:void onPostResume() -> onPostResume
    400:400:void onPrepareSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder) -> onPrepareSupportNavigateUpTaskStack
    544:546:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    210:212:void onStart() -> onStart
    216:218:void onStop() -> onStop
    301:301:void onSupportActionModeFinished(androidx.appcompat.view.ActionMode) -> onSupportActionModeFinished
    290:290:void onSupportActionModeStarted(androidx.appcompat.view.ActionMode) -> onSupportActionModeStarted
    512:512:void onSupportContentChanged() -> onSupportContentChanged
    426:449:boolean onSupportNavigateUp() -> onSupportNavigateUp
    248:250:void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    315:315:androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> onWindowStartingSupportActionMode
    611:616:void openOptionsMenu() -> openOptionsMenu
    586:598:boolean performMenuItemShortcut(android.view.KeyEvent) -> performMenuItemShortcut
    170:171:void setContentView(int) -> setContentView
    175:176:void setContentView(android.view.View) -> setContentView
    180:181:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    120:122:void setTheme(int) -> setTheme
    273:274:void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    497:498:void supportNavigateUpTo(android.content.Intent) -> supportNavigateUpTo
    481:481:boolean supportShouldUpRecreateTask(android.content.Intent) -> supportShouldUpRecreateTask
androidx.appcompat.app.AppCompatDelegate -> androidx.appcompat.app.AppCompatDelegate:
    166:175:void <clinit>() -> <clinit>
    271:271:void <init>() -> <init>
    652:659:void addActiveDelegate(androidx.appcompat.app.AppCompatDelegate) -> addActiveDelegate
    387:387:void attachBaseContext(android.content.Context) -> attachBaseContext
    395:396:android.content.Context attachBaseContext2(android.content.Context) -> attachBaseContext2
    230:230:androidx.appcompat.app.AppCompatDelegate create(android.app.Activity,androidx.appcompat.app.AppCompatCallback) -> create
    241:241:androidx.appcompat.app.AppCompatDelegate create(android.app.Dialog,androidx.appcompat.app.AppCompatCallback) -> create
    601:601:int getDefaultNightMode() -> getDefaultNightMode
    551:551:int getLocalNightMode() -> getLocalNightMode
    662:666:void removeActivityDelegate(androidx.appcompat.app.AppCompatDelegate) -> removeActivityDelegate
    669:680:void removeDelegateFromActives(androidx.appcompat.app.AppCompatDelegate) -> removeDelegateFromActives
    348:348:void setTheme(int) -> setTheme
androidx.appcompat.app.AppCompatDelegateImpl -> androidx.appcompat.app.AppCompatDelegateImpl:
    137:193:void <clinit>() -> <clinit>
    286:287:void <init>(android.app.Activity,androidx.appcompat.app.AppCompatCallback) -> <init>
    290:291:void <init>(android.app.Dialog,androidx.appcompat.app.AppCompatCallback) -> <init>
    214:337:void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object) -> <init>
    711:715:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    2359:2359:boolean applyDayNight() -> applyDayNight
    2364:2389:boolean applyDayNight(boolean) -> applyDayNight
    1019:1053:void applyFixedSizeWindow() -> applyFixedSizeWindow
    343:468:android.content.Context attachBaseContext2(android.content.Context) -> attachBaseContext2
    778:802:void attachToWindow(android.view.Window) -> attachToWindow
    2447:2447:int calculateNightMode() -> calculateNightMode
    2064:2089:void callOnPanelClosed(int,androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.Menu) -> callOnPanelClosed
    1949:1960:void checkCloseActionMenu(androidx.appcompat.view.menu.MenuBuilder) -> checkCloseActionMenu
    753:759:void cleanupAutoManagers() -> cleanupAutoManagers
    1963:1964:void closePanel(int) -> closePanel
    1967:1996:void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean) -> closePanel
    2455:2481:android.content.res.Configuration createOverrideConfigurationForDayNight(android.content.Context,int,android.content.res.Configuration) -> createOverrideConfigurationForDayNight
    839:1013:android.view.ViewGroup createSubDecor() -> createSubDecor
    1520:1554:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> createView
    2333:2355:void dismissPopups() -> dismissPopups
    1452:1470:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    2155:2179:void doInvalidatePanelMenu(int) -> doInvalidatePanelMenu
    1391:1394:void endOnGoingFadeAnimation() -> endOnGoingFadeAnimation
    805:836:void ensureSubDecor() -> ensureSubDecor
    769:775:void ensureWindow() -> ensureWindow
    2092:2100:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState findMenuPanel(android.view.Menu) -> findMenuPanel
    630:631:android.view.View findViewById(int) -> findViewById
    3364:3467:android.content.res.Configuration generateConfigDelta(android.content.res.Configuration,android.content.res.Configuration) -> generateConfigDelta
    601:612:android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    2622:2625:androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoBatteryNightModeManager(android.content.Context) -> getAutoBatteryNightModeManager
    2614:2618:androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager(android.content.Context) -> getAutoTimeNightModeManager
    3302:3302:androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
    2411:2411:int getLocalNightMode() -> getLocalNightMode
    618:623:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    2105:2117:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean) -> getPanelState
    534:535:androidx.appcompat.app.ActionBar getSupportActionBar() -> getSupportActionBar
    1138:1142:java.lang.CharSequence getTitle() -> getTitle
    543:543:android.view.Window$Callback getWindowCallback() -> getWindowCallback
    547:561:void initWindowDecorActionBar() -> initWindowDecorActionBar
    1824:1841:boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelContent
    1730:1733:boolean initializePanelDecor(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelDecor
    1781:1820:boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelMenu
    1585:1594:void installViewFactory() -> installViewFactory
    1217:1221:void invalidateOptionsMenu() -> invalidateOptionsMenu
    2146:2152:void invalidatePanelMenu(int) -> invalidatePanelMenu
    2629:2663:boolean isActivityManifestHandlingUiMode() -> isActivityManifestHandlingUiMode
    1387:1387:boolean isHandleNativeActionModesEnabled() -> isHandleNativeActionModesEnabled
    2417:2440:int mapNightMode(android.content.Context,int) -> mapNightMode
    1398:1410:boolean onBackPressed() -> onBackPressed
    638:653:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    490:522:void onCreate(android.os.Bundle) -> onCreate
    1602:1602:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    1611:1611:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    723:749:void onDestroy() -> onDestroy
    1501:1514:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    1999:2006:boolean onKeyDownPanel(int,android.view.KeyEvent) -> onKeyDownPanel
    1415:1446:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    1474:1497:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    2010:2059:boolean onKeyUpPanel(int,android.view.KeyEvent) -> onKeyUpPanel
    1172:1179:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    1184:1185:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    1162:1168:void onMenuOpened(int) -> onMenuOpened
    1146:1159:void onPanelClosed(int) -> onPanelClosed
    527:528:void onPostCreate(android.os.Bundle) -> onPostCreate
    676:680:void onPostResume() -> onPostResume
    719:719:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    657:662:void onStart() -> onStart
    666:672:void onStop() -> onStop
    1016:1016:void onSubDecorInstalled(android.view.ViewGroup) -> onSubDecorInstalled
    1632:1727:void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent) -> openPanel
    539:539:androidx.appcompat.app.ActionBar peekSupportActionBar() -> peekSupportActionBar
    2122:2142:boolean performPanelShortcut(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,int,android.view.KeyEvent,int) -> performPanelShortcut
    1845:1945:boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent) -> preparePanel
    1737:1778:void reopenMenu(boolean) -> reopenMenu
    1057:1094:boolean requestWindowFeature(int) -> requestWindowFeature
    2315:2325:int sanitizeWindowFeatureId(int) -> sanitizeWindowFeatureId
    684:689:void setContentView(android.view.View) -> setContentView
    693:698:void setContentView(int) -> setContentView
    702:707:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    763:764:void setTheme(int) -> setTheme
    1125:1134:void setTitle(java.lang.CharSequence) -> setTitle
    1377:1377:boolean shouldAnimateActionModeView() -> shouldAnimateActionModeView
    1559:1579:boolean shouldInheritContext(android.view.ViewParent) -> shouldInheritContext
    1189:1212:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> startSupportActionMode
    1224:1371:androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback) -> startSupportActionModeFromWindow
    2308:2312:void throwFeatureRequestIfSubDecorInstalled() -> throwFeatureRequestIfSubDecorInstalled
    1616:1627:androidx.appcompat.app.AppCompatActivity tryUnwrapContext() -> tryUnwrapContext
    2494:2549:boolean updateForNightMode(int,boolean) -> updateForNightMode
    2557:2601:void updateResourcesConfigurationForNightMode(int,boolean,android.content.res.Configuration) -> updateResourcesConfigurationForNightMode
    2190:2296:int updateStatusGuard(androidx.core.view.WindowInsetsCompat,android.graphics.Rect) -> updateStatusGuard
    2300:2305:void updateStatusGuardColor(android.view.View) -> updateStatusGuardColor
androidx.appcompat.app.AppCompatDelegateImpl$2 -> androidx.appcompat.app.AppCompatDelegateImpl$2:
    264:264:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    267:275:void run() -> run
androidx.appcompat.app.AppCompatDelegateImpl$3 -> androidx.appcompat.app.AppCompatDelegateImpl$3:
    938:938:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    942:954:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
androidx.appcompat.app.AppCompatDelegateImpl$5 -> androidx.appcompat.app.AppCompatDelegateImpl$5:
    1003:1003:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    1005:1005:void onAttachedFromWindow() -> onAttachedFromWindow
    1009:1010:void onDetachedFromWindow() -> onDetachedFromWindow
androidx.appcompat.app.AppCompatDelegateImpl$6 -> androidx.appcompat.app.AppCompatDelegateImpl$6:
    1279:1279:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    1282:1307:void run() -> run
androidx.appcompat.app.AppCompatDelegateImpl$6$1 -> androidx.appcompat.app.AppCompatDelegateImpl$6$1:
    1290:1290:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$6) -> <init>
    1298:1301:void onAnimationEnd(android.view.View) -> onAnimationEnd
    1293:1294:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.app.AppCompatDelegateImpl$7 -> androidx.appcompat.app.AppCompatDelegateImpl$7:
    1332:1332:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    1345:1348:void onAnimationEnd(android.view.View) -> onAnimationEnd
    1335:1341:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl -> androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl:
    3306:3307:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    3320:3320:android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    3311:3315:android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    3325:3326:boolean isNavigationVisible() -> isNavigationVisible
    3340:3344:void setActionBarDescription(int) -> setActionBarDescription
    3331:3336:void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback -> androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback:
    2761:2762:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    2775:2776:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    2766:2770:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 -> androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9:
    2672:2674:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.view.ActionMode$Callback) -> <init>
    2689:2689:boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    2678:2678:boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onCreateActionMode
    2694:2723:void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> onDestroyActionMode
    2683:2684:boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onPrepareActionMode
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1 -> androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1:
    2702:2702:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9) -> <init>
    2705:2715:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback -> androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback:
    3047:3049:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.view.Window$Callback) -> <init>
    3053:3054:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    3059:3060:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    3077:3077:void onContentChanged() -> onContentChanged
    3065:3070:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    3108:3110:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    3115:3117:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    3081:3103:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    3174:3183:void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
    3122:3124:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    3159:3167:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
    3141:3152:android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback) -> startAsSupportActionMode
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager -> androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager:
    3270:3273:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context) -> <init>
    3291:3294:android.content.IntentFilter createIntentFilterForBroadcastReceiver() -> createIntentFilterForBroadcastReceiver
    3278:3279:int getApplyableNightMode() -> getApplyableNightMode
    3286:3287:void onChange() -> onChange
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager -> androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager:
    3191:3191:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    3223:3232:void cleanup() -> cleanup
    3200:3217:void setup() -> setup
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1 -> androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1:
    3209:3209:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager) -> <init>
    3212:3213:void onReceive(android.content.Context,android.content.Intent) -> onReceive
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager -> androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager:
    3242:3244:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.app.TwilightManager) -> <init>
    3259:3263:android.content.IntentFilter createIntentFilterForBroadcastReceiver() -> createIntentFilterForBroadcastReceiver
    3249:3249:int getApplyableNightMode() -> getApplyableNightMode
    3254:3255:void onChange() -> onChange
androidx.appcompat.app.AppCompatDelegateImpl$ConfigurationImplApi17 -> androidx.appcompat.app.AppCompatDelegateImpl$ConfigurationImplApi17:
    3476:3479:void generateConfigDelta_densityDpi(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration) -> generateConfigDelta_densityDpi
androidx.appcompat.app.AppCompatDelegateImpl$ConfigurationImplApi24 -> androidx.appcompat.app.AppCompatDelegateImpl$ConfigurationImplApi24:
    3488:3494:void generateConfigDelta_locale(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration) -> generateConfigDelta_locale
androidx.appcompat.app.AppCompatDelegateImpl$ConfigurationImplApi26 -> androidx.appcompat.app.AppCompatDelegateImpl$ConfigurationImplApi26:
    3503:3513:void generateConfigDelta_colorMode(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration) -> generateConfigDelta_colorMode
androidx.appcompat.app.AppCompatDelegateImpl$ContextThemeWrapperCompatApi17Impl -> androidx.appcompat.app.AppCompatDelegateImpl$ContextThemeWrapperCompatApi17Impl:
    482:483:void applyOverrideConfiguration(android.view.ContextThemeWrapper,android.content.res.Configuration) -> applyOverrideConfiguration
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView -> androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView:
    3011:3013:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context) -> <init>
    3017:3018:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    3041:3041:boolean isOutOfBounds(int,int) -> isOutOfBounds
    3023:3032:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    3037:3038:void setBackgroundResource(int) -> setBackgroundResource
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState -> androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState:
    2844:2848:void <init>(int) -> <init>
    2912:2923:androidx.appcompat.view.menu.MenuView getListMenuView(androidx.appcompat.view.menu.MenuPresenter$Callback) -> getListMenuView
    2851:2854:boolean hasPanelItems() -> hasPanelItems
    2900:2909:void setMenu(androidx.appcompat.view.menu.MenuBuilder) -> setMenu
    2868:2897:void setStyle(android.content.Context) -> setStyle
androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback -> androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback:
    2727:2728:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    2732:2745:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    2750:2756:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.app.AppCompatDialog -> androidx.appcompat.app.AppCompatDialog:
    45:68:void <init>(android.content.Context,int) -> <init>
    129:130:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    140:143:void dismiss() -> dismiss
    213:214:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    112:112:android.view.View findViewById(int) -> findViewById
    176:179:androidx.appcompat.app.AppCompatDelegate getDelegate() -> getDelegate
    183:189:int getThemeResId(android.content.Context,int) -> getThemeResId
    169:170:void invalidateOptionsMenu() -> invalidateOptionsMenu
    77:80:void onCreate(android.os.Bundle) -> onCreate
    134:136:void onStop() -> onStop
    198:198:void onSupportActionModeFinished(androidx.appcompat.view.ActionMode) -> onSupportActionModeFinished
    194:194:void onSupportActionModeStarted(androidx.appcompat.view.ActionMode) -> onSupportActionModeStarted
    203:203:androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> onWindowStartingSupportActionMode
    95:96:void setContentView(int) -> setContentView
    100:101:void setContentView(android.view.View) -> setContentView
    105:106:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    117:119:void setTitle(java.lang.CharSequence) -> setTitle
    123:125:void setTitle(int) -> setTitle
    208:208:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
    160:160:boolean supportRequestWindowFeature(int) -> supportRequestWindowFeature
androidx.appcompat.app.AppCompatDialog$1 -> androidx.appcompat.app.AppCompatDialog$1:
    45:45:void <init>(androidx.appcompat.app.AppCompatDialog) -> <init>
    48:48:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
androidx.appcompat.app.AppCompatViewInflater -> androidx.appcompat.app.AppCompatViewInflater:
    75:87:void <clinit>() -> <clinit>
    73:90:void <init>() -> <init>
    313:329:void checkOnClickListener(android.view.View,android.util.AttributeSet) -> checkOnClickListener
    240:240:androidx.appcompat.widget.AppCompatAutoCompleteTextView createAutoCompleteTextView(android.content.Context,android.util.AttributeSet) -> createAutoCompleteTextView
    204:204:androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet) -> createButton
    224:224:androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet) -> createCheckBox
    234:234:androidx.appcompat.widget.AppCompatCheckedTextView createCheckedTextView(android.content.Context,android.util.AttributeSet) -> createCheckedTextView
    209:209:androidx.appcompat.widget.AppCompatEditText createEditText(android.content.Context,android.util.AttributeSet) -> createEditText
    219:219:androidx.appcompat.widget.AppCompatImageButton createImageButton(android.content.Context,android.util.AttributeSet) -> createImageButton
    199:199:androidx.appcompat.widget.AppCompatImageView createImageView(android.content.Context,android.util.AttributeSet) -> createImageView
    246:246:androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView createMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet) -> createMultiAutoCompleteTextView
    229:229:androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet) -> createRadioButton
    251:251:androidx.appcompat.widget.AppCompatRatingBar createRatingBar(android.content.Context,android.util.AttributeSet) -> createRatingBar
    256:256:androidx.appcompat.widget.AppCompatSeekBar createSeekBar(android.content.Context,android.util.AttributeSet) -> createSeekBar
    214:214:androidx.appcompat.widget.AppCompatSpinner createSpinner(android.content.Context,android.util.AttributeSet) -> createSpinner
    194:194:androidx.appcompat.widget.AppCompatTextView createTextView(android.content.Context,android.util.AttributeSet) -> createTextView
    261:261:androidx.appcompat.widget.AppCompatToggleButton createToggleButton(android.content.Context,android.util.AttributeSet) -> createToggleButton
    95:189:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean) -> createView
    273:273:android.view.View createView(android.content.Context,java.lang.String,android.util.AttributeSet) -> createView
    333:351:android.view.View createViewByPrefix(android.content.Context,java.lang.String,java.lang.String) -> createViewByPrefix
    277:304:android.view.View createViewFromTag(android.content.Context,java.lang.String,android.util.AttributeSet) -> createViewFromTag
    360:383:android.content.Context themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean) -> themifyContext
    265:269:void verifyNotNull(android.view.View,java.lang.String) -> verifyNotNull
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener -> androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener:
    397:400:void <init>(android.view.View,java.lang.String) -> <init>
    404:417:void onClick(android.view.View) -> onClick
    420:447:void resolveMethod(android.content.Context) -> resolveMethod
androidx.appcompat.app.ResourcesFlusher -> androidx.appcompat.app.ResourcesFlusher:
    46:56:void flush(android.content.res.Resources) -> flush
    113:162:void flushNougats(android.content.res.Resources) -> flushNougats
    166:207:void flushThemedResourcesCache(java.lang.Object) -> flushThemedResourcesCache
androidx.appcompat.app.TwilightCalculator -> androidx.appcompat.app.TwilightCalculator:
    26:26:void <init>() -> <init>
    89:138:void calculateTwilight(long,double,double) -> calculateTwilight
    31:34:androidx.appcompat.app.TwilightCalculator getInstance() -> getInstance
androidx.appcompat.app.TwilightManager -> androidx.appcompat.app.TwilightManager:
    66:72:void <init>(android.content.Context,android.location.LocationManager) -> <init>
    50:55:androidx.appcompat.app.TwilightManager getInstance(android.content.Context) -> getInstance
    107:127:android.location.Location getLastKnownLocation() -> getLastKnownLocation
    134:140:android.location.Location getLastKnownLocationForProvider(java.lang.String) -> getLastKnownLocationForProvider
    80:102:boolean isNight() -> isNight
    144:144:boolean isStateValid() -> isStateValid
    148:192:void updateState(android.location.Location) -> updateState
androidx.appcompat.app.TwilightManager$TwilightState -> androidx.appcompat.app.TwilightManager$TwilightState:
    205:206:void <init>() -> <init>
androidx.appcompat.app.WindowDecorActionBar -> androidx.appcompat.app.WindowDecorActionBar:
    85:86:void <clinit>() -> <clinit>
    99:177:void <init>(android.app.Activity,boolean) -> <init>
    99:181:void <init>(android.app.Dialog) -> <init>
    873:909:void animateToMode(boolean) -> animateToMode
    758:763:boolean checkShowingFlags(boolean,boolean,boolean) -> checkShowingFlags
    973:977:boolean collapseActionView() -> collapseActionView
    310:315:void completeDeferredDestroyActionMode() -> completeDeferredDestroyActionMode
    349:358:void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    835:863:void doHide(boolean) -> doHide
    786:832:void doShow(boolean) -> doShow
    672:673:void enableContentAnimations(boolean) -> enableContentAnimations
    235:241:androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View) -> getDecorToolbar
    516:516:int getDisplayOptions() -> getDisplayOptions
    511:511:int getNavigationMode() -> getNavigationMode
    919:931:android.content.Context getThemedContext() -> getThemedContext
    710:717:void hideForActionMode() -> hideForActionMode
    721:725:void hideForSystem() -> hideForSystem
    193:232:void init(android.view.View) -> init
    257:258:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    961:965:void onContentScrollStarted() -> onContentScrollStarted
    969:969:void onContentScrollStopped() -> onContentScrollStopped
    1400:1410:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    319:320:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    1393:1396:void setDefaultDisplayHomeAsUpEnabled(boolean) -> setDefaultDisplayHomeAsUpEnabled
    378:379:void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    472:477:void setDisplayOptions(int,int) -> setDisplayOptions
    247:248:void setElevation(float) -> setElevation
    261:283:void setHasEmbeddedTabs(boolean) -> setHasEmbeddedTabs
    729:735:void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    956:957:void setHomeActionContentDescription(int) -> setHomeActionContentDescription
    941:942:void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    393:394:void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    331:335:void setShowHideAnimationEnabled(boolean) -> setShowHideAnimationEnabled
    444:445:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    914:914:boolean shouldAnimateContextView() -> shouldAnimateContextView
    684:691:void showForActionMode() -> showForActionMode
    695:699:void showForSystem() -> showForSystem
    521:538:androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback) -> startActionMode
    769:783:void updateVisibility(boolean) -> updateVisibility
androidx.appcompat.app.WindowDecorActionBar$1 -> androidx.appcompat.app.WindowDecorActionBar$1:
    135:135:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    138:149:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.WindowDecorActionBar$2 -> androidx.appcompat.app.WindowDecorActionBar$2:
    152:152:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    155:157:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.WindowDecorActionBar$3 -> androidx.appcompat.app.WindowDecorActionBar$3:
    161:161:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    164:166:void onAnimationUpdate(android.view.View) -> onAnimationUpdate
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl -> androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl:
    991:997:void <init>(androidx.appcompat.app.WindowDecorActionBar,android.content.Context,androidx.appcompat.view.ActionMode$Callback) -> <init>
    1058:1063:boolean dispatchOnCreate() -> dispatchOnCreate
    1011:1038:void finish() -> finish
    1115:1115:android.view.View getCustomView() -> getCustomView
    1006:1006:android.view.Menu getMenu() -> getMenu
    1001:1001:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    1099:1099:java.lang.CharSequence getSubtitle() -> getSubtitle
    1094:1094:java.lang.CharSequence getTitle() -> getTitle
    1042:1055:void invalidate() -> invalidate
    1110:1110:boolean isTitleOptional() -> isTitleOptional
    1120:1123:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    1148:1153:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    1068:1070:void setCustomView(android.view.View) -> setCustomView
    1074:1075:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    1089:1090:void setSubtitle(int) -> setSubtitle
    1079:1080:void setTitle(java.lang.CharSequence) -> setTitle
    1084:1085:void setTitle(int) -> setTitle
    1104:1106:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.content.res.AppCompatResources -> androidx.appcompat.content.res.AppCompatResources:
    50:55:void <clinit>() -> <clinit>
    67:69:android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> getColorStateList
    104:104:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
androidx.appcompat.graphics.drawable.DrawableWrapper -> androidx.appcompat.graphics.drawable.DrawableWrapper:
    46:48:void <init>(android.graphics.drawable.Drawable) -> <init>
    52:53:void draw(android.graphics.Canvas) -> draw
    67:67:int getChangingConfigurations() -> getChangingConfigurations
    113:113:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    139:139:int getIntrinsicHeight() -> getIntrinsicHeight
    134:134:int getIntrinsicWidth() -> getIntrinsicWidth
    149:149:int getMinimumHeight() -> getMinimumHeight
    144:144:int getMinimumWidth() -> getMinimumWidth
    124:124:int getOpacity() -> getOpacity
    154:154:boolean getPadding(android.graphics.Rect) -> getPadding
    103:103:int[] getState() -> getState
    129:129:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    222:222:android.graphics.drawable.Drawable getWrappedDrawable() -> getWrappedDrawable
    162:163:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    193:193:boolean isAutoMirrored() -> isAutoMirrored
    93:93:boolean isStateful() -> isStateful
    108:109:void jumpToCurrentState() -> jumpToCurrentState
    57:58:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    183:183:boolean onLevelChange(int) -> onLevelChange
    170:171:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    83:84:void setAlpha(int) -> setAlpha
    188:189:void setAutoMirrored(boolean) -> setAutoMirrored
    62:63:void setChangingConfigurations(int) -> setChangingConfigurations
    88:89:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    73:74:void setDither(boolean) -> setDither
    78:79:void setFilterBitmap(boolean) -> setFilterBitmap
    213:214:void setHotspot(float,float) -> setHotspot
    218:219:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    98:98:boolean setState(int[]) -> setState
    198:199:void setTint(int) -> setTint
    203:204:void setTintList(android.content.res.ColorStateList) -> setTintList
    208:209:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    118:118:boolean setVisible(boolean,boolean) -> setVisible
    226:235:void setWrappedDrawable(android.graphics.drawable.Drawable) -> setWrappedDrawable
    178:179:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
androidx.appcompat.graphics.drawable.DrawerArrowDrawable -> androidx.appcompat.graphics.drawable.DrawerArrowDrawable:
    100:100:void <clinit>() -> <clinit>
    97:152:void <init>(android.content.Context) -> <init>
    326:401:void draw(android.graphics.Canvas) -> draw
    419:419:int getIntrinsicHeight() -> getIntrinsicHeight
    424:424:int getIntrinsicWidth() -> getIntrinsicWidth
    429:429:int getOpacity() -> getOpacity
    465:465:float lerp(float,float,float) -> lerp
    405:409:void setAlpha(int) -> setAlpha
    236:241:void setBarThickness(float) -> setBarThickness
    216:220:void setColor(int) -> setColor
    413:415:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    267:271:void setGapSize(float) -> setGapSize
    448:452:void setProgress(float) -> setProgress
    300:304:void setSpinEnabled(boolean) -> setSpinEnabled
    318:322:void setVerticalMirror(boolean) -> setVerticalMirror
androidx.appcompat.text.AllCapsTransformationMethod -> androidx.appcompat.text.AllCapsTransformationMethod:
    37:39:void <init>(android.content.Context) -> <init>
    43:43:java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
    49:49:void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect) -> onFocusChanged
androidx.appcompat.view.ActionBarPolicy -> androidx.appcompat.view.ActionBarPolicy:
    46:48:void <init>(android.content.Context) -> <init>
    110:110:boolean enableHomeButtonByDefault() -> enableHomeButtonByDefault
    43:43:androidx.appcompat.view.ActionBarPolicy get(android.content.Context) -> get
    86:86:int getEmbeddedMenuWidthLimit() -> getEmbeddedMenuWidthLimit
    56:73:int getMaxActionButtons() -> getMaxActionButtons
    115:115:int getStackedTabMaxWidth() -> getStackedTabMaxWidth
    94:104:int getTabContainerHeight() -> getTabContainerHeight
    90:90:boolean hasEmbeddedTabs() -> hasEmbeddedTabs
    78:79:boolean showsOverflowMenuButton() -> showsOverflowMenuButton
androidx.appcompat.view.ActionMode -> androidx.appcompat.view.ActionMode:
    41:41:void <init>() -> <init>
    71:71:java.lang.Object getTag() -> getTag
    145:145:boolean getTitleOptionalHint() -> getTitleOptionalHint
    57:58:void setTag(java.lang.Object) -> setTag
    134:135:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.ContextThemeWrapper -> androidx.appcompat.view.ContextThemeWrapper:
    48:49:void <init>() -> <init>
    63:65:void <init>(android.content.Context,int) -> <init>
    77:79:void <init>(android.content.Context,android.content.res.Resources$Theme) -> <init>
    97:105:void applyOverrideConfiguration(android.content.res.Configuration) -> applyOverrideConfiguration
    83:84:void attachBaseContext(android.content.Context) -> attachBaseContext
    200:200:android.content.res.AssetManager getAssets() -> getAssets
    109:109:android.content.res.Resources getResources() -> getResources
    113:126:android.content.res.Resources getResourcesInternal() -> getResourcesInternal
    161:167:java.lang.Object getSystemService(java.lang.String) -> getSystemService
    147:156:android.content.res.Resources$Theme getTheme() -> getTheme
    142:142:int getThemeResId() -> getThemeResId
    186:195:void initializeTheme() -> initializeTheme
    182:183:void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean) -> onApplyThemeResource
    131:135:void setTheme(int) -> setTheme
androidx.appcompat.view.StandaloneActionMode -> androidx.appcompat.view.StandaloneActionMode:
    51:60:void <init>(android.content.Context,androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode$Callback,boolean) -> <init>
    106:113:void finish() -> finish
    132:132:android.view.View getCustomView() -> getCustomView
    117:117:android.view.Menu getMenu() -> getMenu
    137:137:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    127:127:java.lang.CharSequence getSubtitle() -> getSubtitle
    122:122:java.lang.CharSequence getTitle() -> getTitle
    101:102:void invalidate() -> invalidate
    90:90:boolean isTitleOptional() -> isTitleOptional
    142:142:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    162:164:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    95:97:void setCustomView(android.view.View) -> setCustomView
    69:70:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    79:80:void setSubtitle(int) -> setSubtitle
    64:65:void setTitle(java.lang.CharSequence) -> setTitle
    74:75:void setTitle(int) -> setTitle
    84:86:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.SupportActionModeWrapper -> androidx.appcompat.view.SupportActionModeWrapper:
    49:52:void <init>(android.content.Context,androidx.appcompat.view.ActionMode) -> <init>
    81:82:void finish() -> finish
    111:111:android.view.View getCustomView() -> getCustomView
    86:86:android.view.Menu getMenu() -> getMenu
    121:121:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    101:101:java.lang.CharSequence getSubtitle() -> getSubtitle
    56:56:java.lang.Object getTag() -> getTag
    91:91:java.lang.CharSequence getTitle() -> getTitle
    126:126:boolean getTitleOptionalHint() -> getTitleOptionalHint
    76:77:void invalidate() -> invalidate
    136:136:boolean isTitleOptional() -> isTitleOptional
    116:117:void setCustomView(android.view.View) -> setCustomView
    71:72:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    106:107:void setSubtitle(int) -> setSubtitle
    61:62:void setTag(java.lang.Object) -> setTag
    66:67:void setTitle(java.lang.CharSequence) -> setTitle
    96:97:void setTitle(int) -> setTitle
    131:132:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper -> androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper:
    150:155:void <init>(android.content.Context,android.view.ActionMode$Callback) -> <init>
    192:204:android.view.ActionMode getActionModeWrapper(androidx.appcompat.view.ActionMode) -> getActionModeWrapper
    182:187:android.view.Menu getMenuWrapper(android.view.Menu) -> getMenuWrapper
    172:172:boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    159:160:boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onCreateActionMode
    178:179:void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> onDestroyActionMode
    165:166:boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onPrepareActionMode
androidx.appcompat.view.SupportMenuInflater -> androidx.appcompat.view.SupportMenuInflater:
    83:85:void <clinit>() -> <clinit>
    101:105:void <init>(android.content.Context) -> <init>
    231:237:java.lang.Object findRealOwner(java.lang.Object) -> findRealOwner
    224:227:java.lang.Object getRealOwner() -> getRealOwner
    119:137:void inflate(int,android.view.Menu) -> inflate
    145:221:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu) -> parseMenu
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener -> androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener:
    242:242:void <clinit>() -> <clinit>
    247:259:void <init>(java.lang.Object,java.lang.String) -> <init>
    264:271:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.view.SupportMenuInflater$MenuState -> androidx.appcompat.view.SupportMenuInflater$MenuState:
    337:353:void <init>(androidx.appcompat.view.SupportMenuInflater,android.view.Menu) -> <init>
    530:532:void addItem() -> addItem
    535:538:android.view.SubMenu addSubMenuItem() -> addSubMenuItem
    459:462:char getShortcut(java.lang.String) -> getShortcut
    542:542:boolean hasAddedItem() -> hasAddedItem
    549:556:java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> newInstance
    368:380:void readGroup(android.util.AttributeSet) -> readGroup
    386:456:void readItem(android.util.AttributeSet) -> readItem
    356:362:void resetGroup() -> resetGroup
    467:527:void setItem(android.view.MenuItem) -> setItem
androidx.appcompat.view.ViewPropertyAnimatorCompatSet -> androidx.appcompat.view.ViewPropertyAnimatorCompatSet:
    42:120:void <init>() -> <init>
    90:97:void cancel() -> cancel
    86:87:void onAnimationsEnded() -> onAnimationsEnded
    53:56:androidx.appcompat.view.ViewPropertyAnimatorCompatSet play(androidx.core.view.ViewPropertyAnimatorCompat) -> play
    61:64:androidx.appcompat.view.ViewPropertyAnimatorCompatSet playSequentially(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorCompat) -> playSequentially
    100:103:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setDuration(long) -> setDuration
    107:110:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    114:117:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setListener(androidx.core.view.ViewPropertyAnimatorListener) -> setListener
    68:83:void start() -> start
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1 -> androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1:
    121:123:void <init>(androidx.appcompat.view.ViewPropertyAnimatorCompatSet) -> <init>
    144:150:void onAnimationEnd(android.view.View) -> onAnimationEnd
    127:134:void onAnimationStart(android.view.View) -> onAnimationStart
    137:140:void onEnd() -> onEnd
androidx.appcompat.view.WindowCallbackWrapper -> androidx.appcompat.view.WindowCallbackWrapper:
    50:55:void <init>(android.view.Window$Callback) -> <init>
    79:79:boolean dispatchGenericMotionEvent(android.view.MotionEvent) -> dispatchGenericMotionEvent
    59:59:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    64:64:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    84:84:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    69:69:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    74:74:boolean dispatchTrackballEvent(android.view.MotionEvent) -> dispatchTrackballEvent
    188:188:android.view.Window$Callback getWrapped() -> getWrapped
    171:172:void onActionModeFinished(android.view.ActionMode) -> onActionModeFinished
    166:167:void onActionModeStarted(android.view.ActionMode) -> onActionModeStarted
    129:130:void onAttachedToWindow() -> onAttachedToWindow
    94:94:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    89:89:android.view.View onCreatePanelView(int) -> onCreatePanelView
    134:135:void onDetachedFromWindow() -> onDetachedFromWindow
    109:109:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    104:104:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    139:140:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    184:185:void onPointerCaptureChanged(boolean) -> onPointerCaptureChanged
    99:99:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    178:179:void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
    145:145:boolean onSearchRequested(android.view.SearchEvent) -> onSearchRequested
    150:150:boolean onSearchRequested() -> onSearchRequested
    114:115:void onWindowAttributesChanged(android.view.WindowManager$LayoutParams) -> onWindowAttributesChanged
    124:125:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    161:161:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
androidx.appcompat.view.menu.ActionMenuItem -> androidx.appcompat.view.menu.ActionMenuItem:
    53:85:void <init>(android.content.Context,int,int,int,int,java.lang.CharSequence) -> <init>
    437:449:void applyIconTint() -> applyIconTint
    371:371:boolean collapseActionView() -> collapseActionView
    366:366:boolean expandActionView() -> expandActionView
    340:340:android.view.ActionProvider getActionProvider() -> getActionProvider
    330:330:android.view.View getActionView() -> getActionView
    94:94:int getAlphabeticModifiers() -> getAlphabeticModifiers
    89:89:char getAlphabeticShortcut() -> getAlphabeticShortcut
    392:392:java.lang.CharSequence getContentDescription() -> getContentDescription
    99:99:int getGroupId() -> getGroupId
    104:104:android.graphics.drawable.Drawable getIcon() -> getIcon
    418:418:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    433:433:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    109:109:android.content.Intent getIntent() -> getIntent
    114:114:int getItemId() -> getItemId
    119:119:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    129:129:int getNumericModifiers() -> getNumericModifiers
    124:124:char getNumericShortcut() -> getNumericShortcut
    134:134:int getOrder() -> getOrder
    139:139:android.view.SubMenu getSubMenu() -> getSubMenu
    350:350:androidx.core.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    144:144:java.lang.CharSequence getTitle() -> getTitle
    149:149:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    403:403:java.lang.CharSequence getTooltipText() -> getTooltipText
    154:154:boolean hasSubMenu() -> hasSubMenu
    376:376:boolean isActionViewExpanded() -> isActionViewExpanded
    159:159:boolean isCheckable() -> isCheckable
    164:164:boolean isChecked() -> isChecked
    169:169:boolean isEnabled() -> isEnabled
    174:174:boolean isVisible() -> isVisible
    335:335:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    42:42:android.view.MenuItem setActionView(int) -> setActionView
    42:42:android.view.MenuItem setActionView(android.view.View) -> setActionView
    325:325:androidx.core.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    345:345:androidx.core.internal.view.SupportMenuItem setActionView(int) -> setActionView
    179:180:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    185:187:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    192:193:android.view.MenuItem setCheckable(boolean) -> setCheckable
    203:204:android.view.MenuItem setChecked(boolean) -> setChecked
    42:42:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    386:387:androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    209:210:android.view.MenuItem setEnabled(boolean) -> setEnabled
    215:218:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    223:226:android.view.MenuItem setIcon(int) -> setIcon
    408:413:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    423:428:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    231:232:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    237:238:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    243:245:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    381:381:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    250:251:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    256:258:android.view.MenuItem setShortcut(char,char) -> setShortcut
    264:268:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    311:311:void setShowAsAction(int) -> setShowAsAction
    42:42:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    360:361:androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    355:355:androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider) -> setSupportActionProvider
    273:274:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    279:280:android.view.MenuItem setTitle(int) -> setTitle
    285:286:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    42:42:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    397:398:androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    291:292:android.view.MenuItem setVisible(boolean) -> setVisible
androidx.appcompat.view.menu.ActionMenuItemView -> androidx.appcompat.view.menu.ActionMenuItemView:
    68:69:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    72:88:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    119:119:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    237:237:boolean hasText() -> hasText
    124:137:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    264:264:boolean needsDividerAfter() -> needsDividerAfter
    259:259:boolean needsDividerBefore() -> needsDividerBefore
    150:153:void onClick(android.view.View) -> onClick
    92:96:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    269:296:void onMeasure(int,int) -> onMeasure
    333:334:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    141:145:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    165:165:boolean prefersCondensedTitle() -> prefersCondensedTitle
    171:171:void setCheckable(boolean) -> setCheckable
    176:176:void setChecked(boolean) -> setChecked
    179:185:void setExpandedFormat(boolean) -> setExpandedFormat
    215:234:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    156:157:void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker) -> setItemInvoker
    113:115:void setPadding(int,int,int,int) -> setPadding
    160:161:void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback) -> setPopupCallback
    247:250:void setTitle(java.lang.CharSequence) -> setTitle
    103:107:boolean shouldAllowTextWithIcon() -> shouldAllowTextWithIcon
    188:211:void updateTextButtonVisibility() -> updateTextButtonVisibility
androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener -> androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener:
    299:301:void <init>(androidx.appcompat.view.menu.ActionMenuItemView) -> <init>
    305:308:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    314:318:boolean onForwardingStarted() -> onForwardingStarted
androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback -> androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback:
    336:336:void <init>() -> <init>
androidx.appcompat.view.menu.BaseMenuPresenter -> androidx.appcompat.view.menu.BaseMenuPresenter:
    61:66:void <init>(android.content.Context,int,int) -> <init>
    134:139:void addItemView(android.view.View,int) -> addItemView
    239:239:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    167:167:androidx.appcompat.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup) -> createItemView
    234:234:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    148:149:boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    158:158:androidx.appcompat.view.menu.MenuPresenter$Callback getCallback() -> getCallback
    183:189:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    77:83:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    70:73:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    213:216:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    220:224:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    154:155:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    248:249:void setId(int) -> setId
    91:125:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.BaseMenuWrapper -> androidx.appcompat.view.menu.BaseMenuWrapper:
    34:36:void <init>(android.content.Context) -> <init>
    39:58:android.view.MenuItem getMenuItemWrapper(android.view.MenuItem) -> getMenuItemWrapper
    62:78:android.view.SubMenu getSubMenuWrapper(android.view.SubMenu) -> getSubMenuWrapper
    83:89:void internalClear() -> internalClear
    92:101:void internalRemoveGroup(int) -> internalRemoveGroup
    104:113:void internalRemoveItem(int) -> internalRemoveItem
androidx.appcompat.view.menu.CascadingMenuPopup -> androidx.appcompat.view.menu.CascadingMenuPopup:
    66:66:void <clinit>() -> <clinit>
    89:237:void <init>(android.content.Context,android.view.View,int,int,boolean) -> <init>
    354:361:void addMenu(androidx.appcompat.view.menu.MenuBuilder) -> addMenu
    791:791:boolean closeMenuOnSubMenuOpened() -> closeMenuOnSubMenuOpened
    245:254:androidx.appcompat.widget.MenuPopupWindow createPopupWindow() -> createPopupWindow
    287:298:void dismiss() -> dismiss
    655:662:int findIndexOfAddedMenu(androidx.appcompat.view.menu.MenuBuilder) -> findIndexOfAddedMenu
    516:523:android.view.MenuItem findMenuItemForSubmenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuBuilder) -> findMenuItemForSubmenu
    537:580:android.view.View findParentViewForSubmenu(androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,androidx.appcompat.view.menu.MenuBuilder) -> findParentViewForSubmenu
    726:726:boolean flagActionItems() -> flagActionItems
    315:317:int getInitialMenuPosition() -> getInitialMenuPosition
    765:767:android.widget.ListView getListView() -> getListView
    329:348:int getNextMenuPosition(int) -> getNextMenuPosition
    588:588:boolean isShowing() -> isShowing
    667:722:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    598:612:void onDismiss() -> onDismiss
    302:306:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    629:645:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    749:756:void setAnchorView(android.view.View) -> setAnchorView
    623:624:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    241:242:void setForceShowIcon(boolean) -> setForceShowIcon
    740:745:void setGravity(int) -> setGravity
    772:774:void setHorizontalOffset(int) -> setHorizontalOffset
    760:761:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    784:785:void setShowTitle(boolean) -> setShowTitle
    778:780:void setVerticalOffset(int) -> setVerticalOffset
    259:279:void show() -> show
    369:503:void showMenu(androidx.appcompat.view.menu.MenuBuilder) -> showMenu
    616:619:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.CascadingMenuPopup$1 -> androidx.appcompat.view.menu.CascadingMenuPopup$1:
    98:98:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    104:116:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.view.menu.CascadingMenuPopup$2 -> androidx.appcompat.view.menu.CascadingMenuPopup$2:
    120:120:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    123:123:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    127:134:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.appcompat.view.menu.CascadingMenuPopup$3 -> androidx.appcompat.view.menu.CascadingMenuPopup$3:
    137:137:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    150:194:void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverEnter
    143:144:void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverExit
androidx.appcompat.view.menu.CascadingMenuPopup$3$1 -> androidx.appcompat.view.menu.CascadingMenuPopup$3$1:
    173:173:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup$3,androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,android.view.MenuItem,androidx.appcompat.view.menu.MenuBuilder) -> <init>
    178:190:void run() -> run
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo -> androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo:
    800:804:void <init>(androidx.appcompat.widget.MenuPopupWindow,androidx.appcompat.view.menu.MenuBuilder,int) -> <init>
    807:807:android.widget.ListView getListView() -> getListView
androidx.appcompat.view.menu.ExpandedMenuView -> androidx.appcompat.view.menu.ExpandedMenuView:
    42:42:void <clinit>() -> <clinit>
    53:54:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    57:69:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    97:97:int getWindowAnimations() -> getWindowAnimations
    73:74:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> initialize
    86:86:boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl) -> invokeItem
    78:82:void onDetachedFromWindow() -> onDetachedFromWindow
    92:93:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.view.menu.ListMenuItemView -> androidx.appcompat.view.menu.ListMenuItemView:
    74:75:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    78:98:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    138:139:void addContentView(android.view.View) -> addContentView
    142:147:void addContentView(android.view.View,int) -> addContentView
    347:355:void adjustListItemSelectionBounds(android.graphics.Rect) -> adjustListItemSelectionBounds
    327:330:android.view.LayoutInflater getInflater() -> getInflater
    166:166:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    124:135:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    309:314:void insertCheckBox() -> insertCheckBox
    294:298:void insertIconView() -> insertIconView
    301:306:void insertRadioButton() -> insertRadioButton
    102:120:void onFinishInflate() -> onFinishInflate
    282:291:void onMeasure(int,int) -> onMeasure
    318:318:boolean prefersCondensedTitle() -> prefersCondensedTitle
    171:213:void setCheckable(boolean) -> setCheckable
    219:232:void setChecked(boolean) -> setChecked
    150:151:void setForceShowIcon(boolean) -> setForceShowIcon
    339:343:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    256:278:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    242:252:void setShortcut(boolean,char) -> setShortcut
    235:238:void setSubMenuArrowVisible(boolean) -> setSubMenuArrowVisible
    155:162:void setTitle(java.lang.CharSequence) -> setTitle
androidx.appcompat.view.menu.ListMenuPresenter -> androidx.appcompat.view.menu.ListMenuPresenter:
    71:74:void <init>(android.content.Context,int) -> <init>
    81:84:void <init>(int,int) -> <init>
    188:188:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    183:183:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    178:178:boolean flagActionItems() -> flagActionItems
    125:128:android.widget.ListAdapter getAdapter() -> getAdapter
    105:114:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    88:101:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    155:158:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    173:174:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    143:150:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    138:139:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    133:134:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter -> androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter:
    232:236:void <init>(androidx.appcompat.view.menu.ListMenuPresenter) -> <init>
    277:290:void findExpandedIndex() -> findExpandedIndex
    240:245:int getCount() -> getCount
    231:231:java.lang.Object getItem(int) -> getItem
    250:255:androidx.appcompat.view.menu.MenuItemImpl getItem(int) -> getItem
    262:262:long getItemId(int) -> getItemId
    267:273:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    294:296:void notifyDataSetChanged() -> notifyDataSetChanged
androidx.appcompat.view.menu.MenuAdapter -> androidx.appcompat.view.menu.MenuAdapter:
    36:50:void <init>(androidx.appcompat.view.menu.MenuBuilder,android.view.LayoutInflater,boolean,int) -> <init>
    114:127:void findExpandedIndex() -> findExpandedIndex
    71:71:androidx.appcompat.view.menu.MenuBuilder getAdapterMenu() -> getAdapterMenu
    62:67:int getCount() -> getCount
    32:32:java.lang.Object getItem(int) -> getItem
    76:81:androidx.appcompat.view.menu.MenuItemImpl getItem(int) -> getItem
    88:88:long getItemId(int) -> getItemId
    93:110:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    131:133:void notifyDataSetChanged() -> notifyDataSetChanged
    57:58:void setForceShowIcon(boolean) -> setForceShowIcon
androidx.appcompat.view.menu.MenuBuilder -> androidx.appcompat.view.menu.MenuBuilder:
    68:68:void <clinit>() -> <clinit>
    134:236:void <init>(android.content.Context) -> <init>
    466:466:android.view.MenuItem add(java.lang.CharSequence) -> add
    471:471:android.view.MenuItem add(int) -> add
    476:476:android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    481:481:android.view.MenuItem add(int,int,int,int) -> add
    520:544:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    441:454:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> addInternal
    250:251:void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter) -> addMenuPresenter
    263:266:void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter,android.content.Context) -> addMenuPresenter
    486:486:android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    491:491:android.view.SubMenu addSubMenu(int) -> addSubMenu
    496:500:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    505:505:android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    841:844:void changeMenuMode() -> changeMenuMode
    604:610:void clear() -> clear
    1213:1218:void clearHeader() -> clearHeader
    1030:1042:void close(boolean) -> close
    1046:1047:void close() -> close
    1373:1391:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    460:460:androidx.appcompat.view.menu.MenuItemImpl createNewMenuItem(int,int,int,int,java.lang.CharSequence,int) -> createNewMenuItem
    834:834:boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> dispatchMenuItemSelected
    284:296:void dispatchPresenterUpdate(boolean) -> dispatchPresenterUpdate
    300:317:boolean dispatchSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder,androidx.appcompat.view.menu.MenuPresenter) -> dispatchSubMenuSelected
    1351:1369:boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    724:724:int findGroupIndex(int) -> findGroupIndex
    728:742:int findGroupIndex(int,int) -> findGroupIndex
    847:854:int findInsertIndex(java.util.ArrayList,int) -> findInsertIndex
    693:707:android.view.MenuItem findItem(int) -> findItem
    711:720:int findItemIndex(int) -> findItemIndex
    930:965:androidx.appcompat.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent) -> findItemWithShortcutForKey
    882:914:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent) -> findItemsWithShortcutForKey
    1163:1200:void flagActionItems() -> flagActionItems
    1203:1204:java.util.ArrayList getActionItems() -> getActionItems
    430:430:java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
    830:830:android.content.Context getContext() -> getContext
    1395:1395:androidx.appcompat.view.menu.MenuItemImpl getExpandedItem() -> getExpandedItem
    1316:1316:android.graphics.drawable.Drawable getHeaderIcon() -> getHeaderIcon
    1312:1312:java.lang.CharSequence getHeaderTitle() -> getHeaderTitle
    1320:1320:android.view.View getHeaderView() -> getHeaderView
    752:752:android.view.MenuItem getItem(int) -> getItem
    1208:1209:java.util.ArrayList getNonActionItems() -> getNonActionItems
    1347:1347:boolean getOptionalIconsVisible() -> getOptionalIconsVisible
    779:785:int getOrdering(int) -> getOrdering
    826:826:android.content.res.Resources getResources() -> getResources
    1328:1328:androidx.appcompat.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    1118:1133:java.util.ArrayList getVisibleItems() -> getVisibleItems
    675:688:boolean hasVisibleItems() -> hasVisibleItems
    514:514:boolean isGroupDividerEnabled() -> isGroupDividerEnabled
    792:792:boolean isQwertyMode() -> isQwertyMode
    757:757:boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    822:822:boolean isShortcutsVisible() -> isShortcutsVisible
    1112:1114:void onItemActionRequestChanged(androidx.appcompat.view.menu.MenuItemImpl) -> onItemActionRequestChanged
    1101:1103:void onItemVisibleChanged(androidx.appcompat.view.menu.MenuItemImpl) -> onItemVisibleChanged
    1057:1070:void onItemsChanged(boolean) -> onItemsChanged
    971:971:boolean performIdentifierAction(int,int) -> performIdentifierAction
    975:975:boolean performItemAction(android.view.MenuItem,int) -> performItemAction
    979:1018:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int) -> performItemAction
    859:871:boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    554:567:void removeGroup(int) -> removeGroup
    549:550:void removeItem(int) -> removeItem
    580:585:void removeItemAtInt(int,boolean) -> removeItemAtInt
    275:281:void removeMenuPresenter(androidx.appcompat.view.menu.MenuPresenter) -> removeMenuPresenter
    400:427:void restoreActionViewStates(android.os.Bundle) -> restoreActionViewStates
    373:397:void saveActionViewStates(android.os.Bundle) -> saveActionViewStates
    434:435:void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback) -> setCallback
    239:240:androidx.appcompat.view.menu.MenuBuilder setDefaultShowAsAction(int) -> setDefaultShowAsAction
    613:628:void setExclusiveItemChecked(android.view.MenuItem) -> setExclusiveItemChecked
    632:641:void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    510:511:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    663:671:void setGroupEnabled(int,boolean) -> setGroupEnabled
    645:659:void setGroupVisible(int,boolean) -> setGroupVisible
    1283:1284:androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable) -> setHeaderIconInt
    1295:1296:androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(int) -> setHeaderIconInt
    1222:1249:void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View) -> setHeaderInternal
    1259:1260:androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence) -> setHeaderTitleInt
    1271:1272:androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(int) -> setHeaderTitleInt
    1307:1308:androidx.appcompat.view.menu.MenuBuilder setHeaderViewInt(android.view.View) -> setHeaderViewInt
    1404:1405:void setOverrideVisibleItems(boolean) -> setOverrideVisibleItems
    762:765:void setQwertyMode(boolean) -> setQwertyMode
    812:816:void setShortcutsVisibleInner(boolean) -> setShortcutsVisibleInner
    747:747:int size() -> size
    1086:1092:void startDispatchingItemsChanged() -> startDispatchingItemsChanged
    1078:1083:void stopDispatchingItemsChanged() -> stopDispatchingItemsChanged
androidx.appcompat.view.menu.MenuDialogHelper -> androidx.appcompat.view.menu.MenuDialogHelper:
    43:45:void <init>(androidx.appcompat.view.menu.MenuBuilder) -> <init>
    140:143:void dismiss() -> dismiss
    170:171:void onClick(android.content.DialogInterface,int) -> onClick
    152:158:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    147:148:void onDismiss(android.content.DialogInterface) -> onDismiss
    95:126:boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
    162:165:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
    54:91:void show(android.os.IBinder) -> show
androidx.appcompat.view.menu.MenuItemImpl -> androidx.appcompat.view.menu.MenuItemImpl:
    68:146:void <init>(androidx.appcompat.view.menu.MenuBuilder,int,int,int,int,java.lang.CharSequence,int) -> <init>
    691:692:void actionFormatChanged() -> actionFormatChanged
    402:405:void appendModifier(java.lang.StringBuilder,int,int,java.lang.String) -> appendModifier
    570:585:android.graphics.drawable.Drawable applyIconTintIfNecessary(android.graphics.drawable.Drawable) -> applyIconTintIfNecessary
    838:851:boolean collapseActionView() -> collapseActionView
    824:833:boolean expandActionView() -> expandActionView
    788:788:android.view.ActionProvider getActionProvider() -> getActionProvider
    770:776:android.view.View getActionView() -> getActionView
    275:275:int getAlphabeticModifiers() -> getAlphabeticModifiers
    243:243:char getAlphabeticShortcut() -> getAlphabeticShortcut
    891:891:java.lang.CharSequence getContentDescription() -> getContentDescription
    203:203:int getGroupId() -> getGroupId
    500:511:android.graphics.drawable.Drawable getIcon() -> getIcon
    550:550:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    566:566:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    223:223:android.content.Intent getIntent() -> getIntent
    209:209:int getItemId() -> getItemId
    687:687:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    285:285:int getNumericModifiers() -> getNumericModifiers
    280:280:char getNumericShortcut() -> getNumericShortcut
    214:214:int getOrder() -> getOrder
    218:218:int getOrdering() -> getOrdering
    342:342:char getShortcut() -> getShortcut
    352:398:java.lang.String getShortcutLabel() -> getShortcutLabel
    419:419:android.view.SubMenu getSubMenu() -> getSubMenu
    794:794:androidx.core.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    436:436:java.lang.CharSequence getTitle() -> getTitle
    471:480:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    446:448:java.lang.CharSequence getTitleForItemView(androidx.appcompat.view.menu.MenuView$ItemView) -> getTitleForItemView
    905:905:java.lang.CharSequence getTooltipText() -> getTooltipText
    855:861:boolean hasCollapsibleActionView() -> hasCollapsibleActionView
    424:424:boolean hasSubMenu() -> hasSubMenu
    154:180:boolean invoke() -> invoke
    702:702:boolean isActionButton() -> isActionButton
    871:871:boolean isActionViewExpanded() -> isActionViewExpanded
    590:590:boolean isCheckable() -> isCheckable
    614:614:boolean isChecked() -> isChecked
    185:185:boolean isEnabled() -> isEnabled
    609:609:boolean isExclusiveCheckable() -> isExclusiveCheckable
    640:643:boolean isVisible() -> isVisible
    706:706:boolean requestsActionButton() -> requestsActionButton
    711:711:boolean requiresActionButton() -> requiresActionButton
    782:782:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    51:51:android.view.MenuItem setActionView(int) -> setActionView
    51:51:android.view.MenuItem setActionView(android.view.View) -> setActionView
    751:757:androidx.core.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    762:765:androidx.core.internal.view.SupportMenuItem setActionView(int) -> setActionView
    865:867:void setActionViewExpanded(boolean) -> setActionViewExpanded
    248:256:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    261:270:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    595:601:android.view.MenuItem setCheckable(boolean) -> setCheckable
    619:627:android.view.MenuItem setChecked(boolean) -> setChecked
    631:636:void setCheckedInt(boolean) -> setCheckedInt
    51:51:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    882:886:androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    190:198:android.view.MenuItem setEnabled(boolean) -> setEnabled
    605:606:void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    516:521:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    526:533:android.view.MenuItem setIcon(int) -> setIcon
    539:545:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    555:561:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    228:229:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    720:725:void setIsActionButton(boolean) -> setIsActionButton
    682:683:void setMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> setMenuInfo
    290:298:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    303:312:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    876:877:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    672:673:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    317:322:android.view.MenuItem setShortcut(char,char) -> setShortcut
    328:335:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    733:747:void setShowAsAction(int) -> setShowAsAction
    51:51:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    818:819:androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    428:431:void setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder) -> setSubMenu
    799:813:androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider) -> setSupportActionProvider
    453:461:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    466:466:android.view.MenuItem setTitle(int) -> setTitle
    486:495:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    51:51:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    896:900:androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    665:667:android.view.MenuItem setVisible(boolean) -> setVisible
    655:657:boolean setVisibleInt(boolean) -> setVisibleInt
    698:698:boolean shouldShowIcon() -> shouldShowIcon
    414:414:boolean shouldShowShortcut() -> shouldShowShortcut
    728:728:boolean showsTextAsAction() -> showsTextAsAction
    678:678:java.lang.String toString() -> toString
androidx.appcompat.view.menu.MenuItemImpl$1 -> androidx.appcompat.view.menu.MenuItemImpl$1:
    806:806:void <init>(androidx.appcompat.view.menu.MenuItemImpl) -> <init>
    809:810:void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
androidx.appcompat.view.menu.MenuItemWrapperICS -> androidx.appcompat.view.menu.MenuItemWrapperICS:
    56:61:void <init>(android.content.Context,androidx.core.internal.view.SupportMenuItem) -> <init>
    326:326:boolean collapseActionView() -> collapseActionView
    321:321:boolean expandActionView() -> expandActionView
    312:316:android.view.ActionProvider getActionProvider() -> getActionProvider
    291:295:android.view.View getActionView() -> getActionView
    188:188:int getAlphabeticModifiers() -> getAlphabeticModifiers
    183:183:char getAlphabeticShortcut() -> getAlphabeticShortcut
    349:349:java.lang.CharSequence getContentDescription() -> getContentDescription
    70:70:int getGroupId() -> getGroupId
    120:120:android.graphics.drawable.Drawable getIcon() -> getIcon
    371:371:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    382:382:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    131:131:android.content.Intent getIntent() -> getIntent
    65:65:int getItemId() -> getItemId
    253:253:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    166:166:int getNumericModifiers() -> getNumericModifiers
    161:161:char getNumericShortcut() -> getNumericShortcut
    75:75:int getOrder() -> getOrder
    241:241:android.view.SubMenu getSubMenu() -> getSubMenu
    92:92:java.lang.CharSequence getTitle() -> getTitle
    103:103:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    360:360:java.lang.CharSequence getTooltipText() -> getTooltipText
    236:236:boolean hasSubMenu() -> hasSubMenu
    331:331:boolean isActionViewExpanded() -> isActionViewExpanded
    199:199:boolean isCheckable() -> isCheckable
    210:210:boolean isChecked() -> isChecked
    231:231:boolean isEnabled() -> isEnabled
    220:220:boolean isVisible() -> isVisible
    301:307:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    269:273:android.view.MenuItem setActionView(android.view.View) -> setActionView
    279:286:android.view.MenuItem setActionView(int) -> setActionView
    171:172:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    177:178:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    193:194:android.view.MenuItem setCheckable(boolean) -> setCheckable
    204:205:android.view.MenuItem setChecked(boolean) -> setChecked
    343:344:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    225:226:android.view.MenuItem setEnabled(boolean) -> setEnabled
    387:395:void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    108:109:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    114:115:android.view.MenuItem setIcon(int) -> setIcon
    365:366:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    376:377:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    125:126:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    149:150:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    155:156:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    336:338:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    246:248:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    136:137:android.view.MenuItem setShortcut(char,char) -> setShortcut
    143:144:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    258:259:void setShowAsAction(int) -> setShowAsAction
    263:264:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    80:81:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    86:87:android.view.MenuItem setTitle(int) -> setTitle
    97:98:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    354:355:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    215:215:android.view.MenuItem setVisible(boolean) -> setVisible
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper:
    432:435:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider) -> <init>
    449:449:boolean hasSubMenu() -> hasSubMenu
    439:439:android.view.View onCreateActionView() -> onCreateActionView
    444:444:boolean onPerformDefaultAction() -> onPerformDefaultAction
    454:455:void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB -> androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB:
    463:465:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider) -> <init>
    479:479:boolean isVisible() -> isVisible
    495:498:void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
    469:469:android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    474:474:boolean overridesItemVisibility() -> overridesItemVisibility
    489:491:void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener) -> setVisibilityListener
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper:
    512:515:void <init>(android.view.View) -> <init>
    528:528:android.view.View getWrappedView() -> getWrappedView
    524:525:void onActionViewCollapsed() -> onActionViewCollapsed
    519:520:void onActionViewExpanded() -> onActionViewExpanded
androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper:
    414:416:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnActionExpandListener) -> <init>
    425:425:boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
    420:420:boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper:
    401:403:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnMenuItemClickListener) -> <init>
    407:407:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.view.menu.MenuPopup -> androidx.appcompat.view.menu.MenuPopup:
    39:39:void <init>() -> <init>
    217:217:boolean closeMenuOnSubMenuOpened() -> closeMenuOnSubMenuOpened
    113:113:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    108:108:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    78:78:android.graphics.Rect getEpicenterBounds() -> getEpicenterBounds
    99:99:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    143:172:int measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int) -> measureIndividualMenuWidth
    123:132:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    71:72:void setEpicenterBounds(android.graphics.Rect) -> setEpicenterBounds
    202:213:boolean shouldPreserveIconSpacing(androidx.appcompat.view.menu.MenuBuilder) -> shouldPreserveIconSpacing
    184:187:androidx.appcompat.view.menu.MenuAdapter toMenuAdapter(android.widget.ListAdapter) -> toMenuAdapter
androidx.appcompat.view.menu.MenuPopupHelper -> androidx.appcompat.view.menu.MenuPopupHelper:
    79:80:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int) -> <init>
    60:334:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int,int) -> <init>
    224:259:androidx.appcompat.view.menu.MenuPopup createPopup() -> createPopup
    298:301:void dismiss() -> dismiss
    156:159:androidx.appcompat.view.menu.MenuPopup getPopup() -> getPopup
    320:320:boolean isShowing() -> isShowing
    312:317:void onDismiss() -> onDismiss
    105:106:void setAnchorView(android.view.View) -> setAnchorView
    118:122:void setForceShowIcon(boolean) -> setForceShowIcon
    132:133:void setGravity(int) -> setGravity
    94:95:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    325:329:void setPresenterCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setPresenterCallback
    143:146:void show() -> show
    263:291:void showPopup(int,int,boolean,boolean) -> showPopup
    169:178:boolean tryShow() -> tryShow
    205:214:boolean tryShow(int,int) -> tryShow
androidx.appcompat.view.menu.MenuPopupHelper$1 -> androidx.appcompat.view.menu.MenuPopupHelper$1:
    334:334:void <init>(androidx.appcompat.view.menu.MenuPopupHelper) -> <init>
    337:338:void onDismiss() -> onDismiss
androidx.appcompat.view.menu.MenuWrapperICS -> androidx.appcompat.view.menu.MenuWrapperICS:
    41:46:void <init>(android.content.Context,androidx.core.internal.view.SupportMenu) -> <init>
    50:50:android.view.MenuItem add(java.lang.CharSequence) -> add
    55:55:android.view.MenuItem add(int) -> add
    60:60:android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    65:65:android.view.MenuItem add(int,int,int,int) -> add
    92:106:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    70:70:android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    75:75:android.view.SubMenu addSubMenu(int) -> addSubMenu
    80:80:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    85:86:android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    123:125:void clear() -> clear
    164:165:void close() -> close
    149:149:android.view.MenuItem findItem(int) -> findItem
    159:159:android.view.MenuItem getItem(int) -> getItem
    144:144:boolean hasVisibleItems() -> hasVisibleItems
    174:174:boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    179:179:boolean performIdentifierAction(int,int) -> performIdentifierAction
    169:169:boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    117:119:void removeGroup(int) -> removeGroup
    111:113:void removeItem(int) -> removeItem
    129:130:void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    139:140:void setGroupEnabled(int,boolean) -> setGroupEnabled
    134:135:void setGroupVisible(int,boolean) -> setGroupVisible
    184:185:void setQwertyMode(boolean) -> setQwertyMode
    154:154:int size() -> size
androidx.appcompat.view.menu.StandardMenuPopup -> androidx.appcompat.view.menu.StandardMenuPopup:
    46:46:void <clinit>() -> <clinit>
    60:136:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,int,int,boolean) -> <init>
    223:223:void addMenu(androidx.appcompat.view.menu.MenuBuilder) -> addMenu
    215:218:void dismiss() -> dismiss
    311:311:boolean flagActionItems() -> flagActionItems
    344:344:android.widget.ListView getListView() -> getListView
    227:227:boolean isShowing() -> isShowing
    301:307:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    232:245:void onDismiss() -> onDismiss
    330:334:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    263:295:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    325:326:void setAnchorView(android.view.View) -> setAnchorView
    258:259:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    140:141:void setForceShowIcon(boolean) -> setForceShowIcon
    145:146:void setGravity(int) -> setGravity
    350:351:void setHorizontalOffset(int) -> setHorizontalOffset
    339:340:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    360:361:void setShowTitle(boolean) -> setShowTitle
    355:356:void setVerticalOffset(int) -> setVerticalOffset
    208:211:void show() -> show
    149:203:boolean tryShow() -> tryShow
    249:254:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.StandardMenuPopup$1 -> androidx.appcompat.view.menu.StandardMenuPopup$1:
    61:61:void <init>(androidx.appcompat.view.menu.StandardMenuPopup) -> <init>
    67:76:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.view.menu.StandardMenuPopup$2 -> androidx.appcompat.view.menu.StandardMenuPopup$2:
    80:80:void <init>(androidx.appcompat.view.menu.StandardMenuPopup) -> <init>
    83:83:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    87:92:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.appcompat.view.menu.SubMenuBuilder -> androidx.appcompat.view.menu.SubMenuBuilder:
    43:47:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> <init>
    138:138:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    90:91:boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> dispatchMenuItemSelected
    133:133:boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    143:147:java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
    75:75:android.view.MenuItem getItem() -> getItem
    70:70:android.view.Menu getParentMenu() -> getParentMenu
    85:85:androidx.appcompat.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    157:157:boolean isGroupDividerEnabled() -> isGroupDividerEnabled
    56:56:boolean isQwertyMode() -> isQwertyMode
    66:66:boolean isShortcutsVisible() -> isShortcutsVisible
    80:81:void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback) -> setCallback
    152:153:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    108:108:android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    113:113:android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    118:118:android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    123:123:android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    128:128:android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    96:97:android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    102:103:android.view.SubMenu setIcon(int) -> setIcon
    51:52:void setQwertyMode(boolean) -> setQwertyMode
androidx.appcompat.view.menu.SubMenuWrapperICS -> androidx.appcompat.view.menu.SubMenuWrapperICS:
    39:41:void <init>(android.content.Context,androidx.core.internal.view.SupportSubMenu) -> <init>
    75:76:void clearHeader() -> clearHeader
    92:92:android.view.MenuItem getItem() -> getItem
    57:58:android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    63:64:android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    45:46:android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    51:52:android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    69:70:android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    80:81:android.view.SubMenu setIcon(int) -> setIcon
    86:87:android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
androidx.appcompat.widget.AbsActionBarView -> androidx.appcompat.widget.AbsActionBarView:
    58:59:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    39:71:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    36:36:void access$001(androidx.appcompat.widget.AbsActionBarView,int) -> access$001
    36:36:void access$101(androidx.appcompat.widget.AbsActionBarView,int) -> access$101
    153:156:int getAnimatedVisibility() -> getAnimatedVisibility
    146:146:int getContentHeight() -> getContentHeight
    248:254:int measureChildView(android.view.View,int,int,int) -> measureChildView
    258:258:int next(int,int,boolean) -> next
    75:87:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    120:137:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    96:112:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    262:272:int positionChild(android.view.View,int,int,int,boolean) -> positionChild
    141:143:void setContentHeight(int) -> setContentHeight
    187:193:void setVisibility(int) -> setVisibility
    160:176:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener -> androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener:
    275:276:void <init>(androidx.appcompat.widget.AbsActionBarView) -> <init>
    302:303:void onAnimationCancel(android.view.View) -> onAnimationCancel
    294:298:void onAnimationEnd(android.view.View) -> onAnimationEnd
    288:290:void onAnimationStart(android.view.View) -> onAnimationStart
    281:283:androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(androidx.core.view.ViewPropertyAnimatorCompat,int) -> withFinalVisibility
androidx.appcompat.widget.ActionBarBackgroundDrawable -> androidx.appcompat.widget.ActionBarBackgroundDrawable:
    32:34:void <init>(androidx.appcompat.widget.ActionBarContainer) -> <init>
    38:50:void draw(android.graphics.Canvas) -> draw
    62:62:int getOpacity() -> getOpacity
    68:78:void getOutline(android.graphics.Outline) -> getOutline
    54:54:void setAlpha(int) -> setAlpha
    58:58:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
androidx.appcompat.widget.ActionBarContainer -> androidx.appcompat.widget.ActionBarContainer:
    59:80:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    168:178:void drawableStateChanged() -> drawableStateChanged
    267:268:int getMeasuredHeightWithMargins(android.view.View) -> getMeasuredHeightWithMargins
    243:243:android.view.View getTabContainer() -> getTabContainer
    263:263:boolean isCollapsed(android.view.View) -> isCollapsed
    182:192:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    84:87:void onFinishInflate() -> onFinishInflate
    222:225:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    209:209:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    303:347:void onLayout(boolean,int,int,int,int) -> onLayout
    273:299:void onMeasure(int,int) -> onMeasure
    214:217:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    90:108:void setPrimaryBackground(android.graphics.drawable.Drawable) -> setPrimaryBackground
    132:149:void setSplitBackground(android.graphics.drawable.Drawable) -> setSplitBackground
    111:129:void setStackedBackground(android.graphics.drawable.Drawable) -> setStackedBackground
    229:240:void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView) -> setTabContainer
    202:205:void setTransitioning(boolean) -> setTransitioning
    153:158:void setVisibility(int) -> setVisibility
    250:250:android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback) -> startActionModeForChild
    256:259:android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback,int) -> startActionModeForChild
    162:163:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.appcompat.widget.ActionBarContextView -> androidx.appcompat.widget.ActionBarContextView:
    58:59:void <init>(android.content.Context) -> <init>
    62:63:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    67:85:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    194:198:void closeMode() -> closeMode
    234:234:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    239:239:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    42:42:int getAnimatedVisibility() -> getAnimatedVisibility
    42:42:int getContentHeight() -> getContentHeight
    131:131:java.lang.CharSequence getSubtitle() -> getSubtitle
    127:127:java.lang.CharSequence getTitle() -> getTitle
    162:191:void initForMode(androidx.appcompat.view.ActionMode) -> initForMode
    135:159:void initTitle() -> initTitle
    379:379:boolean isTitleOptional() -> isTitleOptional
    201:204:void killMode() -> killMode
    89:94:void onDetachedFromWindow() -> onDetachedFromWindow
    42:42:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    360:369:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    324:351:void onLayout(boolean,int,int,int,int) -> onLayout
    244:320:void onMeasure(int,int) -> onMeasure
    42:42:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    98:99:void setContentHeight(int) -> setContentHeight
    102:114:void setCustomView(android.view.View) -> setCustomView
    122:124:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    117:119:void setTitle(java.lang.CharSequence) -> setTitle
    372:376:void setTitleOptional(boolean) -> setTitleOptional
    42:42:void setVisibility(int) -> setVisibility
    42:42:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
    355:355:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    208:211:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionBarContextView$1 -> androidx.appcompat.widget.ActionBarContextView$1:
    171:171:void <init>(androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode) -> <init>
    174:175:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ActionBarOverlayLayout -> androidx.appcompat.widget.ActionBarOverlayLayout:
    147:147:void <clinit>() -> <clinit>
    71:163:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    735:737:void addActionBarHideOffset() -> addActionBarHideOffset
    282:300:boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean) -> applyInsets
    816:817:boolean canShowOverflowMenu() -> canShowOverflowMenu
    399:399:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    870:872:void dismissPopups() -> dismissPopups
    537:546:void draw(android.graphics.Canvas) -> draw
    306:308:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    63:63:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    384:384:androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    63:63:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    389:389:androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    394:394:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    701:701:int getActionBarHideOffset() -> getActionBarHideOffset
    676:682:androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View) -> getDecorToolbar
    664:664:int getNestedScrollAxes() -> getNestedScrollAxes
    759:760:java.lang.CharSequence getTitle() -> getTitle
    712:717:void haltActionBarHideOffsetAnimations() -> haltActionBarHideOffsetAnimations
    840:841:boolean hideOverflowMenu() -> hideOverflowMenu
    166:176:void init(android.content.Context) -> init
    765:777:void initFeature(int) -> initFeature
    211:211:boolean isInOverlayMode() -> isInOverlayMode
    828:829:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    822:823:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    342:379:android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets) -> onApplyWindowInsets
    241:244:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    180:182:void onDetachedFromWindow() -> onDetachedFromWindow
    514:533:void onLayout(boolean,int,int,int,int) -> onLayout
    404:510:void onMeasure(int,int) -> onMeasure
    640:649:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    659:659:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    592:595:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    655:655:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    558:559:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    585:588:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    620:622:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    570:573:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    609:615:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    565:565:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    601:604:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    577:580:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    626:636:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    248:269:void onWindowSystemUiVisibilityChanged(int) -> onWindowSystemUiVisibilityChanged
    273:278:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    725:727:void postAddActionBarHideOffset() -> postAddActionBarHideOffset
    720:722:void postRemoveActionBarHideOffset() -> postRemoveActionBarHideOffset
    668:673:void pullChildren() -> pullChildren
    730:732:void removeActionBarHideOffset() -> removeActionBarHideOffset
    705:709:void setActionBarHideOffset(int) -> setActionBarHideOffset
    185:196:void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback) -> setActionBarVisibilityCallback
    215:216:void setHasNonEmbeddedTabs(boolean) -> setHasNonEmbeddedTabs
    687:694:void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    798:800:void setIcon(int) -> setIcon
    804:806:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    810:812:void setLogo(int) -> setLogo
    852:854:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback) -> setMenu
    846:848:void setMenuPrepared() -> setMenuPrepared
    199:208:void setOverlayMode(boolean) -> setOverlayMode
    237:237:void setShowingForActionMode(boolean) -> setShowingForActionMode
    782:782:void setUiOptions(int) -> setUiOptions
    747:749:void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    753:755:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    550:550:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    740:742:boolean shouldHideActionBarOnFling(float) -> shouldHideActionBarOnFling
    834:835:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionBarOverlayLayout$1 -> androidx.appcompat.widget.ActionBarOverlayLayout$1:
    114:114:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    123:125:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    117:119:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.appcompat.widget.ActionBarOverlayLayout$2 -> androidx.appcompat.widget.ActionBarOverlayLayout$2:
    128:128:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    131:134:void run() -> run
androidx.appcompat.widget.ActionBarOverlayLayout$3 -> androidx.appcompat.widget.ActionBarOverlayLayout$3:
    137:137:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    140:144:void run() -> run
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams -> androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams:
    876:877:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    880:881:void <init>(int,int) -> <init>
    884:885:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
androidx.appcompat.widget.ActionMenuPresenter -> androidx.appcompat.widget.ActionMenuPresenter:
    75:88:void <init>(android.content.Context) -> <init>
    54:54:androidx.appcompat.view.menu.MenuBuilder access$000(androidx.appcompat.widget.ActionMenuPresenter) -> access$000
    54:54:androidx.appcompat.view.menu.MenuBuilder access$100(androidx.appcompat.widget.ActionMenuPresenter) -> access$100
    54:54:androidx.appcompat.view.menu.MenuView access$200(androidx.appcompat.widget.ActionMenuPresenter) -> access$200
    54:54:androidx.appcompat.view.menu.MenuBuilder access$300(androidx.appcompat.widget.ActionMenuPresenter) -> access$300
    54:54:androidx.appcompat.view.menu.MenuBuilder access$400(androidx.appcompat.widget.ActionMenuPresenter) -> access$400
    54:54:androidx.appcompat.view.menu.MenuBuilder access$500(androidx.appcompat.widget.ActionMenuPresenter) -> access$500
    54:54:androidx.appcompat.view.menu.MenuView access$600(androidx.appcompat.widget.ActionMenuPresenter) -> access$600
    207:217:void bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView) -> bindItemView
    373:375:boolean dismissPopupMenus() -> dismissPopupMenus
    275:276:boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    317:328:android.view.View findViewForItem(android.view.MenuItem) -> findViewForItem
    413:543:boolean flagActionItems() -> flagActionItems
    191:202:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    181:186:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    171:176:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    354:365:boolean hideOverflowMenu() -> hideOverflowMenu
    384:388:boolean hideSubMenus() -> hideSubMenus
    92:130:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    399:399:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    395:395:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    548:550:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    133:139:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    281:313:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    158:159:void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    586:588:void setMenuView(androidx.appcompat.widget.ActionMenuView) -> setMenuView
    162:168:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    148:150:void setReserveOverflow(boolean) -> setReserveOverflow
    221:221:boolean shouldIncludeItem(int,androidx.appcompat.view.menu.MenuItemImpl) -> shouldIncludeItem
    336:345:boolean showOverflowMenu() -> showOverflowMenu
    226:271:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu -> androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu:
    733:743:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View) -> <init>
    747:751:void onDismiss() -> onDismiss
androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback -> androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback:
    800:801:void <init>(androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    805:805:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable -> androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable:
    782:784:void <init>(androidx.appcompat.widget.ActionMenuPresenter,androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup) -> <init>
    788:796:void run() -> run
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton -> androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton:
    628:667:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context) -> <init>
    687:687:boolean needsDividerAfter() -> needsDividerAfter
    682:682:boolean needsDividerBefore() -> needsDividerBefore
    671:677:boolean performClick() -> performClick
    692:709:boolean setFrame(int,int,int,int) -> setFrame
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1 -> androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1:
    638:638:void <init>(androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton,android.view.View,androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    641:645:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    650:651:boolean onForwardingStarted() -> onForwardingStarted
    659:664:boolean onForwardingStopped() -> onForwardingStopped
androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup -> androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup:
    715:719:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean) -> <init>
    723:729:void onDismiss() -> onDismiss
androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback -> androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback:
    755:756:void <init>(androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    769:776:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    760:764:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.widget.ActionMenuView -> androidx.appcompat.widget.ActionMenuView:
    77:78:void <init>(android.content.Context) -> <init>
    81:88:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    608:608:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    721:724:void dismissPopupMenus() -> dismissPopupMenus
    748:748:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    49:49:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    49:49:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    581:584:androidx.appcompat.widget.ActionMenuView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    49:49:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    49:49:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    49:49:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    49:49:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    589:589:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    594:603:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    614:616:androidx.appcompat.widget.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams() -> generateOverflowButtonLayoutParams
    649:661:android.view.Menu getMenu() -> getMenu
    563:564:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    114:114:int getPopupTheme() -> getPopupTheme
    630:630:int getWindowAnimations() -> getWindowAnimations
    731:743:boolean hasSupportDividerBeforeChildAt(int) -> hasSupportDividerBeforeChildAt
    698:698:boolean hideOverflowMenu() -> hideOverflowMenu
    637:638:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> initialize
    623:623:boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl) -> invokeItem
    714:714:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    708:708:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    570:570:boolean isOverflowReserved() -> isOverflowReserved
    405:435:int measureChildForCells(android.view.View,int,int,int,int) -> measureChildForCells
    129:139:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    542:544:void onDetachedFromWindow() -> onDetachedFromWindow
    440:538:void onLayout(boolean,int,int,int,int) -> onLayout
    148:175:void onMeasure(int,int) -> onMeasure
    179:388:void onMeasureExactFormat(int,int) -> onMeasureExactFormat
    680:680:androidx.appcompat.view.menu.MenuBuilder peekMenu() -> peekMenu
    754:755:void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    670:672:void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    142:143:void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener) -> setOnMenuItemClickListener
    552:554:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    576:577:void setOverflowReserved(boolean) -> setOverflowReserved
    98:106:void setPopupTheme(int) -> setPopupTheme
    123:125:void setPresenter(androidx.appcompat.widget.ActionMenuPresenter) -> setPresenter
    689:689:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback -> androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback:
    791:792:void <init>() -> <init>
    796:796:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    800:800:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.widget.ActionMenuView$LayoutParams -> androidx.appcompat.widget.ActionMenuView$LayoutParams:
    831:832:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    835:836:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    839:841:void <init>(androidx.appcompat.widget.ActionMenuView$LayoutParams) -> <init>
    844:846:void <init>(int,int) -> <init>
androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback -> androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback:
    773:774:void <init>(androidx.appcompat.widget.ActionMenuView) -> <init>
    778:779:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    784:787:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
androidx.appcompat.widget.ActivityChooserView$InnerLayout -> androidx.appcompat.widget.ActivityChooserView$InnerLayout:
    866:866:void <clinit>() -> <clinit>
    871:875:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.appcompat.widget.AlertDialogLayout -> androidx.appcompat.widget.AlertDialogLayout:
    59:60:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    217:236:void forceUniformWidth(int,int) -> forceUniformWidth
    265:345:void onLayout(boolean,int,int,int,int) -> onLayout
    64:68:void onMeasure(int,int) -> onMeasure
    248:260:int resolveMinimumHeight(android.view.View) -> resolveMinimumHeight
    348:349:void setChildFrame(android.view.View,int,int,int,int) -> setChildFrame
    71:206:boolean tryOnMeasure(int,int) -> tryOnMeasure
androidx.appcompat.widget.AppCompatAutoCompleteTextView -> androidx.appcompat.widget.AppCompatAutoCompleteTextView:
    59:59:void <clinit>() -> <clinit>
    71:72:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    76:93:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    174:181:void drawableStateChanged() -> drawableStateChanged
    140:141:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    168:169:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    193:193:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    110:114:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    102:106:void setBackgroundResource(int) -> setBackgroundResource
    203:205:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    97:98:void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    125:128:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    153:156:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    185:189:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatBackgroundHelper -> androidx.appcompat.widget.AppCompatBackgroundHelper:
    37:46:void <init>(android.view.View) -> <init>
    178:200:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable) -> applyFrameworkTintUsingColorFilter
    123:140:void applySupportBackgroundTint() -> applySupportBackgroundTint
    105:105:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    119:119:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    49:77:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    89:93:void onSetBackgroundDrawable(android.graphics.drawable.Drawable) -> onSetBackgroundDrawable
    80:86:void onSetBackgroundResource(int) -> onSetBackgroundResource
    143:153:void setInternalBackgroundTint(android.content.res.ColorStateList) -> setInternalBackgroundTint
    96:102:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    109:116:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    156:160:boolean shouldApplyFrameworkTintUsingColorFilter() -> shouldApplyFrameworkTintUsingColorFilter
androidx.appcompat.widget.AppCompatButton -> androidx.appcompat.widget.AppCompatButton:
    69:70:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    74:84:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    160:167:void drawableStateChanged() -> drawableStateChanged
    328:335:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    312:319:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    296:303:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    344:351:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    278:287:int getAutoSizeTextType() -> getAutoSizeTextType
    126:127:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    154:155:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    398:398:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    420:420:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    179:181:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    185:187:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    191:195:void onLayout(boolean,int,int,int,int) -> onLayout
    210:214:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    242:251:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    260:267:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    223:230:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    96:100:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    88:92:void setBackgroundResource(int) -> setBackgroundResource
    375:377:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    364:367:void setSupportAllCaps(boolean) -> setSupportAllCaps
    111:114:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    139:142:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    386:388:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    408:410:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
    171:175:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    199:206:void setTextSize(int,float) -> setTextSize
androidx.appcompat.widget.AppCompatCheckBox -> androidx.appcompat.widget.AppCompatCheckBox:
    66:67:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    71:83:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    229:236:void drawableStateChanged() -> drawableStateChanged
    100:103:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    179:180:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    207:208:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    126:128:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    151:153:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    213:217:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    221:225:void setBackgroundResource(int) -> setBackgroundResource
    87:91:void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    95:96:void setButtonDrawable(int) -> setButtonDrawable
    164:167:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    192:195:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    113:116:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    138:141:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
androidx.appcompat.widget.AppCompatCheckedTextView -> androidx.appcompat.widget.AppCompatCheckedTextView:
    42:42:void <clinit>() -> <clinit>
    53:54:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    58:70:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    87:91:void drawableStateChanged() -> drawableStateChanged
    95:95:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    74:75:void setCheckMarkDrawable(int) -> setCheckMarkDrawable
    105:107:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    79:83:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatCompoundButtonHelper -> androidx.appcompat.widget.AppCompatCompoundButtonHelper:
    39:48:void <init>(android.widget.CompoundButton) -> <init>
    127:145:void applyButtonTint() -> applyButtonTint
    148:156:int getCompoundPaddingLeft(int) -> getCompoundPaddingLeft
    102:102:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    113:113:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    51:92:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    117:124:void onSetButtonDrawable() -> onSetButtonDrawable
    95:99:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    106:110:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
androidx.appcompat.widget.AppCompatDrawableManager -> androidx.appcompat.widget.AppCompatDrawableManager:
    49:49:void <clinit>() -> <clinit>
    46:46:void <init>() -> <init>
    46:46:android.graphics.PorterDuff$Mode access$000() -> access$000
    396:400:androidx.appcompat.widget.AppCompatDrawableManager get() -> get
    406:406:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    411:411:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean) -> getDrawable
    438:438:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode) -> getPorterDuffColorFilter
    429:429:android.content.res.ColorStateList getTintList(android.content.Context,int) -> getTintList
    414:416:void onConfigurationChanged(android.content.Context) -> onConfigurationChanged
    53:391:void preload() -> preload
    433:434:void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]) -> tintDrawable
androidx.appcompat.widget.AppCompatDrawableManager$1 -> androidx.appcompat.widget.AppCompatDrawableManager$1:
    57:126:void <init>() -> <init>
    291:296:boolean arrayContains(int[],int) -> arrayContains
    141:141:android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context) -> createBorderlessButtonColorStateList
    152:179:android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int) -> createButtonColorStateList
    146:147:android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context) -> createColoredButtonColorStateList
    134:135:android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context) -> createDefaultButtonColorStateList
    232:240:android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int) -> createDrawableFor
    183:226:android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context) -> createSwitchThumbColorStateList
    303:327:android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int) -> getTintListForDrawableRes
    381:387:android.graphics.PorterDuff$Mode getTintModeForDrawableRes(int) -> getTintModeForDrawableRes
    244:249:void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode) -> setPorterDuffColorFilter
    254:287:boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable) -> tintDrawable
    333:376:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable) -> tintDrawableUsingColorFilter
androidx.appcompat.widget.AppCompatEditText -> androidx.appcompat.widget.AppCompatEditText:
    69:70:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    74:86:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    176:183:void drawableStateChanged() -> drawableStateChanged
    142:143:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    170:171:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    58:58:java.lang.CharSequence getText() -> getText
    94:99:android.text.Editable getText() -> getText
    233:236:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    195:195:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    112:116:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    104:108:void setBackgroundResource(int) -> setBackgroundResource
    205:207:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    127:130:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    155:158:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    187:191:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    215:220:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
androidx.appcompat.widget.AppCompatHintHelper -> androidx.appcompat.widget.AppCompatHintHelper:
    28:40:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,android.view.View) -> onCreateInputConnection
androidx.appcompat.widget.AppCompatImageButton -> androidx.appcompat.widget.AppCompatImageButton:
    70:71:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    75:84:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    245:252:void drawableStateChanged() -> drawableStateChanged
    156:157:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    184:185:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    211:212:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    239:240:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    256:256:boolean hasOverlappingRendering() -> hasOverlappingRendering
    126:130:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    118:122:void setBackgroundResource(int) -> setBackgroundResource
    102:106:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    94:98:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    89:90:void setImageResource(int) -> setImageResource
    110:114:void setImageURI(android.net.Uri) -> setImageURI
    141:144:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    169:172:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    196:199:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    224:227:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
androidx.appcompat.widget.AppCompatImageHelper -> androidx.appcompat.widget.AppCompatImageHelper:
    47:49:void <init>(android.widget.ImageView) -> <init>
    200:222:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable) -> applyFrameworkTintUsingColorFilter
    141:162:void applySupportImageTint() -> applySupportImageTint
    123:123:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    137:137:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    103:110:boolean hasOverlappingRendering() -> hasOverlappingRendering
    52:86:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    89:100:void setImageResource(int) -> setImageResource
    114:120:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    127:134:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
    178:182:boolean shouldApplyFrameworkTintUsingColorFilter() -> shouldApplyFrameworkTintUsingColorFilter
androidx.appcompat.widget.AppCompatImageView -> androidx.appcompat.widget.AppCompatImageView:
    65:66:void <init>(android.content.Context) -> <init>
    69:70:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    74:83:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    256:263:void drawableStateChanged() -> drawableStateChanged
    166:167:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    194:195:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    222:223:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    250:251:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    267:267:boolean hasOverlappingRendering() -> hasOverlappingRendering
    136:140:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    128:132:void setBackgroundResource(int) -> setBackgroundResource
    112:116:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    104:108:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    96:100:void setImageResource(int) -> setImageResource
    120:124:void setImageURI(android.net.Uri) -> setImageURI
    151:154:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    179:182:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    207:210:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    235:238:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView -> androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView:
    56:56:void <clinit>() -> <clinit>
    69:70:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    74:91:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    172:179:void drawableStateChanged() -> drawableStateChanged
    138:139:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    166:167:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    191:191:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    108:112:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    100:104:void setBackgroundResource(int) -> setBackgroundResource
    95:96:void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    123:126:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    151:154:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    183:187:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatPopupWindow -> androidx.appcompat.widget.AppCompatPopupWindow:
    34:34:void <clinit>() -> <clinit>
    46:48:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    51:60:void init(android.content.Context,android.util.AttributeSet,int,int) -> init
    90:95:void setSupportOverlapAnchor(boolean) -> setSupportOverlapAnchor
    64:69:void showAsDropDown(android.view.View,int,int) -> showAsDropDown
    73:78:void showAsDropDown(android.view.View,int,int,int) -> showAsDropDown
    82:87:void update(android.view.View,int,int,int,int) -> update
androidx.appcompat.widget.AppCompatProgressBarHelper -> androidx.appcompat.widget.AppCompatProgressBarHelper:
    38:38:void <clinit>() -> <clinit>
    47:49:void <init>(android.widget.ProgressBar) -> <init>
    140:141:android.graphics.drawable.shapes.Shape getDrawableShape() -> getDrawableShape
    145:145:android.graphics.Bitmap getSampleTile() -> getSampleTile
    52:66:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    73:113:android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean) -> tileify
    122:136:android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable) -> tileifyIndeterminate
androidx.appcompat.widget.AppCompatRadioButton -> androidx.appcompat.widget.AppCompatRadioButton:
    65:66:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    69:81:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    228:235:void drawableStateChanged() -> drawableStateChanged
    98:101:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    178:179:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    206:207:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    124:126:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    149:151:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    212:216:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    220:224:void setBackgroundResource(int) -> setBackgroundResource
    85:89:void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    93:94:void setButtonDrawable(int) -> setButtonDrawable
    163:166:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    191:194:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    111:114:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    136:139:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
androidx.appcompat.widget.AppCompatRatingBar -> androidx.appcompat.widget.AppCompatRatingBar:
    46:47:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    51:57:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    60:69:void onMeasure(int,int) -> onMeasure
androidx.appcompat.widget.AppCompatSeekBar -> androidx.appcompat.widget.AppCompatSeekBar:
    45:46:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    50:56:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    66:68:void drawableStateChanged() -> drawableStateChanged
    72:74:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    59:62:void onDraw(android.graphics.Canvas) -> onDraw
androidx.appcompat.widget.AppCompatSeekBarHelper -> androidx.appcompat.widget.AppCompatSeekBarHelper:
    36:44:void <init>(android.widget.SeekBar) -> <init>
    128:145:void applyTickMarkTint() -> applyTickMarkTint
    165:185:void drawTickMarks(android.graphics.Canvas) -> drawTickMarks
    154:159:void drawableStateChanged() -> drawableStateChanged
    148:151:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    48:77:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    80:96:void setTickMark(android.graphics.drawable.Drawable) -> setTickMark
androidx.appcompat.widget.AppCompatSpinner -> androidx.appcompat.widget.AppCompatSpinner:
    79:79:void <clinit>() -> <clinit>
    144:145:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    160:161:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    180:181:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    106:302:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme) -> <init>
    558:598:int compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> compatMeasureContentWidth
    551:555:void drawableStateChanged() -> drawableStateChanged
    373:376:int getDropDownHorizontalOffset() -> getDropDownHorizontalOffset
    347:350:int getDropDownVerticalOffset() -> getDropDownVerticalOffset
    392:395:int getDropDownWidth() -> getDropDownWidth
    603:603:androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup() -> getInternalPopup
    328:331:android.graphics.drawable.Drawable getPopupBackground() -> getPopupBackground
    309:309:android.content.Context getPopupContext() -> getPopupContext
    472:472:java.lang.CharSequence getPrompt() -> getPrompt
    516:517:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    545:546:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    419:424:void onDetachedFromWindow() -> onDetachedFromWindow
    436:445:void onMeasure(int,int) -> onMeasure
    625:651:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    617:620:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    428:431:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    449:458:boolean performClick() -> performClick
    77:77:void setAdapter(android.widget.Adapter) -> setAdapter
    404:415:void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    485:489:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    477:481:void setBackgroundResource(int) -> setBackgroundResource
    357:363:void setDropDownHorizontalOffset(int) -> setDropDownHorizontalOffset
    338:343:void setDropDownVerticalOffset(int) -> setDropDownVerticalOffset
    383:388:void setDropDownWidth(int) -> setDropDownWidth
    314:319:void setPopupBackgroundDrawable(android.graphics.drawable.Drawable) -> setPopupBackgroundDrawable
    323:324:void setPopupBackgroundResource(int) -> setPopupBackgroundResource
    463:468:void setPrompt(java.lang.CharSequence) -> setPrompt
    501:504:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    530:533:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    607:612:void showPopup() -> showPopup
androidx.appcompat.widget.AppCompatSpinner$1 -> androidx.appcompat.widget.AppCompatSpinner$1:
    264:264:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.view.View,androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> <init>
    267:267:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    273:276:boolean onForwardingStarted() -> onForwardingStarted
androidx.appcompat.widget.AppCompatSpinner$2 -> androidx.appcompat.widget.AppCompatSpinner$2:
    632:632:void <init>(androidx.appcompat.widget.AppCompatSpinner) -> <init>
    635:646:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.widget.AppCompatSpinner$DialogPopup -> androidx.appcompat.widget.AppCompatSpinner$DialogPopup:
    858:858:void <init>(androidx.appcompat.widget.AppCompatSpinner) -> <init>
    866:870:void dismiss() -> dismiss
    937:937:android.graphics.drawable.Drawable getBackground() -> getBackground
    889:889:java.lang.CharSequence getHintText() -> getHintText
    947:947:int getHorizontalOffset() -> getHorizontalOffset
    942:942:int getVerticalOffset() -> getVerticalOffset
    874:874:boolean isShowing() -> isShowing
    913:918:void onClick(android.content.DialogInterface,int) -> onClick
    879:880:void setAdapter(android.widget.ListAdapter) -> setAdapter
    922:923:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    932:933:void setHorizontalOffset(int) -> setHorizontalOffset
    952:953:void setHorizontalOriginalOffset(int) -> setHorizontalOriginalOffset
    884:885:void setPromptText(java.lang.CharSequence) -> setPromptText
    927:928:void setVerticalOffset(int) -> setVerticalOffset
    894:909:void show(int,int) -> show
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter -> androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter:
    703:725:void <init>(android.widget.SpinnerAdapter,android.content.res.Resources$Theme) -> <init>
    778:782:boolean areAllItemsEnabled() -> areAllItemsEnabled
    729:729:int getCount() -> getCount
    749:750:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    734:734:java.lang.Object getItem(int) -> getItem
    739:739:long getItemId(int) -> getItemId
    802:802:int getItemViewType(int) -> getItemViewType
    744:744:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    807:807:int getViewTypeCount() -> getViewTypeCount
    755:755:boolean hasStableIds() -> hasStableIds
    812:812:boolean isEmpty() -> isEmpty
    792:796:boolean isEnabled(int) -> isEnabled
    760:763:void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    767:770:void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup:
    965:986:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int) -> <init>
    962:962:void access$001(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> access$001
    1006:1041:void computeContentWidth() -> computeContentWidth
    996:996:java.lang.CharSequence getHintText() -> getHintText
    1112:1112:int getHorizontalOriginalOffset() -> getHorizontalOriginalOffset
    1102:1102:boolean isVisibleToUser(android.view.View) -> isVisibleToUser
    990:992:void setAdapter(android.widget.ListAdapter) -> setAdapter
    1107:1108:void setHorizontalOriginalOffset(int) -> setHorizontalOriginalOffset
    1002:1003:void setPromptText(java.lang.CharSequence) -> setPromptText
    1045:1096:void show(int,int) -> show
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1 -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1:
    975:975:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup,androidx.appcompat.widget.AppCompatSpinner) -> <init>
    978:984:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2 -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2:
    1071:1071:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> <init>
    1074:1083:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3 -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3:
    1086:1086:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> <init>
    1089:1093:void onDismiss() -> onDismiss
androidx.appcompat.widget.AppCompatSpinner$SavedState -> androidx.appcompat.widget.AppCompatSpinner$SavedState:
    671:671:void <clinit>() -> <clinit>
    657:658:void <init>(android.os.Parcelable) -> <init>
    661:663:void <init>(android.os.Parcel) -> <init>
    667:669:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.AppCompatSpinner$SavedState$1 -> androidx.appcompat.widget.AppCompatSpinner$SavedState$1:
    672:672:void <init>() -> <init>
    672:672:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    675:675:androidx.appcompat.widget.AppCompatSpinner$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    672:672:java.lang.Object[] newArray(int) -> newArray
    680:680:androidx.appcompat.widget.AppCompatSpinner$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.AppCompatTextClassifierHelper -> androidx.appcompat.widget.AppCompatTextClassifierHelper:
    42:44:void <init>(android.widget.TextView) -> <init>
    62:70:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    51:52:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
androidx.appcompat.widget.AppCompatTextHelper -> androidx.appcompat.widget.AppCompatTextHelper:
    70:78:void <init>(android.widget.TextView) -> <init>
    513:516:void applyCompoundDrawableTint(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo) -> applyCompoundDrawableTint
    495:510:void applyCompoundDrawablesTints() -> applyCompoundDrawablesTints
    551:552:void autoSizeText() -> autoSizeText
    520:527:androidx.appcompat.widget.TintInfo createTintInfo(android.content.Context,androidx.appcompat.widget.AppCompatDrawableManager,int) -> createTintInfo
    596:596:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    592:592:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    588:588:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    600:600:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    584:584:int getAutoSizeTextType() -> getAutoSizeTextType
    605:605:android.content.res.ColorStateList getCompoundDrawableTintList() -> getCompoundDrawableTintList
    619:619:android.graphics.PorterDuff$Mode getCompoundDrawableTintMode() -> getCompoundDrawableTintMode
    557:557:boolean isAutoSizeEnabled() -> isAutoSizeEnabled
    82:336:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    434:441:void onAsyncTypefaceReceived(java.lang.ref.WeakReference,android.graphics.Typeface) -> onAsyncTypefaceReceived
    533:536:void onLayout(boolean,int,int,int,int) -> onLayout
    491:492:void onSetCompoundDrawables() -> onSetCompoundDrawables
    444:484:void onSetTextAppearance(android.content.Context,int) -> onSetTextAppearance
    487:488:void setAllCaps(boolean) -> setAllCaps
    573:575:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    579:580:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    565:566:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    609:615:void setCompoundDrawableTintList(android.content.res.ColorStateList) -> setCompoundDrawableTintList
    623:629:void setCompoundDrawableTintMode(android.graphics.PorterDuff$Mode) -> setCompoundDrawableTintMode
    644:676:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    632:638:void setCompoundTints() -> setCompoundTints
    541:546:void setTextSize(int,float) -> setTextSize
    561:562:void setTextSizeInternal(int,float) -> setTextSizeInternal
    339:430:void updateTypefaceAndStyle(android.content.Context,androidx.appcompat.widget.TintTypedArray) -> updateTypefaceAndStyle
androidx.appcompat.widget.AppCompatTextHelper$1 -> androidx.appcompat.widget.AppCompatTextHelper$1:
    359:359:void <init>(androidx.appcompat.widget.AppCompatTextHelper,int,int,java.lang.ref.WeakReference) -> <init>
    374:374:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    362:369:void onFontRetrieved(android.graphics.Typeface) -> onFontRetrieved
androidx.appcompat.widget.AppCompatTextView -> androidx.appcompat.widget.AppCompatTextView:
    91:92:void <init>(android.content.Context) -> <init>
    95:96:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    100:112:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    485:494:void consumeTextFutureAndSetBlocking() -> consumeTextFutureAndSetBlocking
    196:203:void drawableStateChanged() -> drawableStateChanged
    368:375:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    349:356:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    330:337:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    387:394:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    309:318:int getAutoSizeTextType() -> getAutoSizeTextType
    425:425:int getFirstBaselineToTopHeight() -> getFirstBaselineToTopHeight
    430:430:int getLastBaselineToBottomHeight() -> getLastBaselineToBottomHeight
    154:155:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    182:183:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    637:637:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    680:680:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    498:499:java.lang.CharSequence getText() -> getText
    526:529:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    457:457:androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat() -> getTextMetricsParamsCompat
    399:399:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    207:211:void onLayout(boolean,int,int,int,int) -> onLayout
    553:555:void onMeasure(int,int) -> onMeasure
    226:230:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    266:275:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    288:295:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    243:250:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    124:128:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    116:120:void setBackgroundResource(int) -> setBackgroundResource
    560:564:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    570:574:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    602:606:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    612:621:void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    579:583:void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesWithIntrinsicBounds
    587:596:void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesWithIntrinsicBounds
    444:446:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    405:410:void setFirstBaselineToTopHeight(int) -> setFirstBaselineToTopHeight
    415:421:void setLastBaselineToBottomHeight(int) -> setLastBaselineToBottomHeight
    435:436:void setLineHeight(int) -> setLineHeight
    481:482:void setPrecomputedText(androidx.core.text.PrecomputedTextCompat) -> setPrecomputedText
    139:142:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    167:170:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    660:662:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    700:702:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
    188:192:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    508:513:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
    545:549:void setTextFuture(java.util.concurrent.Future) -> setTextFuture
    468:469:void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params) -> setTextMetricsParamsCompat
    215:222:void setTextSize(int,float) -> setTextSize
    706:712:void setTypeface(android.graphics.Typeface,int) -> setTypeface
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper:
    64:77:void <clinit>() -> <clinit>
    85:160:void <init>(android.widget.TextView) -> <init>
    601:635:void autoSizeText() -> autoSizeText
    508:532:int[] cleanupAutoSizePresetSizes(int[]) -> cleanupAutoSizePresetSizes
    638:644:void clearAutoSizeConfiguration() -> clearAutoSizeConfiguration
    732:733:android.text.StaticLayout createLayout(java.lang.CharSequence,android.text.Layout$Alignment,int,int) -> createLayout
    777:797:android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int) -> createStaticLayoutForMeasuring
    695:715:int findLargestTextSizeWhichFits(android.graphics.RectF) -> findLargestTextSizeWhichFits
    465:465:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    449:449:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    433:433:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    478:478:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    419:419:int getAutoSizeTextType() -> getAutoSizeTextType
    877:890:java.lang.reflect.Method getTextViewMethod(java.lang.String) -> getTextViewMethod
    720:727:void initTempTextPaint(int) -> initTempTextPaint
    839:855:java.lang.Object invokeAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object) -> invokeAndReturnWithDefault
    921:921:boolean isAutoSizeEnabled() -> isAutoSizeEnabled
    163:241:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    326:342:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    369:399:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    259:289:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    657:688:void setRawTextSize(float) -> setRawTextSize
    649:654:void setTextSizeInternal(int,float) -> setTextSizeInternal
    571:591:boolean setupAutoSizeText() -> setupAutoSizeText
    482:492:void setupAutoSizeUniformPresetSizes(android.content.res.TypedArray) -> setupAutoSizeUniformPresetSizes
    495:503:boolean setupAutoSizeUniformPresetSizesConfiguration() -> setupAutoSizeUniformPresetSizesConfiguration
    742:770:boolean suggestedSizeFitsInSpace(int,android.graphics.RectF) -> suggestedSizeFitsInSpace
    930:930:boolean supportsAutoSizeText() -> supportsAutoSizeText
    546:568:void validateAndSetAutoSizeTextTypeUniformConfiguration(float,float,float) -> validateAndSetAutoSizeTextTypeUniformConfiguration
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl:
    110:110:void <init>() -> <init>
    113:113:boolean isHorizontallyScrollable(android.widget.TextView) -> isHorizontallyScrollable
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23 -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23:
    122:122:void <init>() -> <init>
    127:131:void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView) -> computeAndSetTextDirection
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29 -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29:
    136:136:void <init>() -> <init>
    146:147:void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView) -> computeAndSetTextDirection
    140:140:boolean isHorizontallyScrollable(android.widget.TextView) -> isHorizontallyScrollable
androidx.appcompat.widget.AppCompatToggleButton -> androidx.appcompat.widget.AppCompatToggleButton:
    45:46:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    50:56:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
androidx.appcompat.widget.ButtonBarLayout -> androidx.appcompat.widget.ButtonBarLayout:
    47:58:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    154:154:int getMinimumHeight() -> getMinimumHeight
    144:149:int getNextVisibleChildIndex(int) -> getNextVisibleChildIndex
    175:175:boolean isStacked() -> isStacked
    72:141:void onMeasure(int,int) -> onMeasure
    61:68:void setAllowStacking(boolean) -> setAllowStacking
    158:172:void setStacked(boolean) -> setStacked
androidx.appcompat.widget.ContentFrameLayout -> androidx.appcompat.widget.ContentFrameLayout:
    61:62:void <init>(android.content.Context) -> <init>
    65:66:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    70:72:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    198:199:android.util.TypedValue getFixedHeightMajor() -> getFixedHeightMajor
    203:204:android.util.TypedValue getFixedHeightMinor() -> getFixedHeightMinor
    188:189:android.util.TypedValue getFixedWidthMajor() -> getFixedWidthMajor
    193:194:android.util.TypedValue getFixedWidthMinor() -> getFixedWidthMinor
    178:179:android.util.TypedValue getMinWidthMajor() -> getMinWidthMajor
    183:184:android.util.TypedValue getMinWidthMinor() -> getMinWidthMinor
    209:213:void onAttachedToWindow() -> onAttachedToWindow
    217:221:void onDetachedFromWindow() -> onDetachedFromWindow
    102:175:void onMeasure(int,int) -> onMeasure
    83:84:void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener) -> setAttachListener
    94:98:void setDecorPadding(int,int,int,int) -> setDecorPadding
androidx.appcompat.widget.DialogTitle -> androidx.appcompat.widget.DialogTitle:
    46:47:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    55:82:void onMeasure(int,int) -> onMeasure
androidx.appcompat.widget.DrawableUtils -> androidx.appcompat.widget.DrawableUtils:
    45:64:void <clinit>() -> <clinit>
    142:176:boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable) -> canSafelyMutateDrawable
    131:135:void fixDrawable(android.graphics.drawable.Drawable) -> fixDrawable
    73:122:android.graphics.Rect getOpticalBounds(android.graphics.drawable.Drawable) -> getOpticalBounds
    200:207:android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode) -> parseTintMode
androidx.appcompat.widget.DropDownListView -> androidx.appcompat.widget.DropDownListView:
    50:128:void <init>(android.content.Context,boolean) -> <init>
    627:641:void clearPressedItem() -> clearPressedItem
    540:542:void clickPressedItem(android.view.View,int) -> clickPressedItem
    198:204:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    563:570:void drawSelectorCompat(android.graphics.Canvas) -> drawSelectorCompat
    186:194:void drawableStateChanged() -> drawableStateChanged
    164:164:boolean hasFocus() -> hasFocus
    144:144:boolean hasWindowFocus() -> hasWindowFocus
    154:154:boolean isFocused() -> isFocused
    134:134:boolean isInTouchMode() -> isInTouchMode
    290:367:int measureHeightOfChildrenCompat(int,int,int,int,int) -> measureHeightOfChildrenCompat
    469:471:void onDetachedFromWindow() -> onDetachedFromWindow
    480:532:boolean onForwardedEvent(android.view.MotionEvent,int) -> onForwardedEvent
    428:464:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    208:217:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    602:624:void positionSelectorCompat(int,android.view.View) -> positionSelectorCompat
    584:599:void positionSelectorLikeFocusCompat(int,android.view.View) -> positionSelectorLikeFocusCompat
    573:579:void positionSelectorLikeTouchCompat(int,android.view.View,float,float) -> positionSelectorLikeTouchCompat
    552:553:void setListSelectionHidden(boolean) -> setListSelectionHidden
    644:688:void setPressedItem(android.view.View,int,float,float) -> setPressedItem
    169:181:void setSelector(android.graphics.drawable.Drawable) -> setSelector
    371:374:void setSelectorEnabled(boolean) -> setSelectorEnabled
    691:691:boolean touchModeDrawsInPressedStateCompat() -> touchModeDrawsInPressedStateCompat
    556:560:void updateSelectorStateCompat() -> updateSelectorStateCompat
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable -> androidx.appcompat.widget.DropDownListView$GateKeeperDrawable:
    380:382:void <init>(android.graphics.drawable.Drawable) -> <init>
    398:401:void draw(android.graphics.Canvas) -> draw
    385:386:void setEnabled(boolean) -> setEnabled
    405:408:void setHotspot(float,float) -> setHotspot
    412:415:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    390:393:boolean setState(int[]) -> setState
    419:422:boolean setVisible(boolean,boolean) -> setVisible
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable -> androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable:
    698:699:void <init>(androidx.appcompat.widget.DropDownListView) -> <init>
    709:711:void cancel() -> cancel
    714:715:void post() -> post
    704:706:void run() -> run
androidx.appcompat.widget.FitWindowsFrameLayout -> androidx.appcompat.widget.FitWindowsFrameLayout:
    43:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    53:56:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    48:49:void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
androidx.appcompat.widget.FitWindowsLinearLayout -> androidx.appcompat.widget.FitWindowsLinearLayout:
    43:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    53:56:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    48:49:void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
androidx.appcompat.widget.ForwardingListener -> androidx.appcompat.widget.ForwardingListener:
    66:78:void <init>(android.view.View) -> <init>
    216:223:void clearCallbacks() -> clearCallbacks
    156:160:boolean onForwardingStopped() -> onForwardingStopped
    226:249:void onLongPress() -> onLongPress
    94:112:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    259:284:boolean onTouchForwarded(android.view.MotionEvent) -> onTouchForwarded
    170:212:boolean onTouchObserved(android.view.MotionEvent) -> onTouchObserved
    117:117:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    121:127:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    288:290:boolean pointInView(android.view.View,float,float,float) -> pointInView
    309:312:boolean toGlobalMotionEvent(android.view.View,android.view.MotionEvent) -> toGlobalMotionEvent
    298:301:boolean toLocalMotionEvent(android.view.View,android.view.MotionEvent) -> toLocalMotionEvent
androidx.appcompat.widget.ForwardingListener$DisallowIntercept -> androidx.appcompat.widget.ForwardingListener$DisallowIntercept:
    316:317:void <init>(androidx.appcompat.widget.ForwardingListener) -> <init>
    321:325:void run() -> run
androidx.appcompat.widget.ForwardingListener$TriggerLongPress -> androidx.appcompat.widget.ForwardingListener$TriggerLongPress:
    329:330:void <init>(androidx.appcompat.widget.ForwardingListener) -> <init>
    334:335:void run() -> run
androidx.appcompat.widget.LinearLayoutCompat -> androidx.appcompat.widget.LinearLayoutCompat:
    151:152:void <init>(android.content.Context) -> <init>
    155:156:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    102:195:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1761:1761:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    332:370:void drawDividersHorizontal(android.graphics.Canvas) -> drawDividersHorizontal
    305:329:void drawDividersVertical(android.graphics.Canvas) -> drawDividersVertical
    373:376:void drawHorizontalDivider(android.graphics.Canvas,int) -> drawHorizontalDivider
    379:382:void drawVerticalDivider(android.graphics.Canvas,int) -> drawVerticalDivider
    1327:1346:void forceUniformHeight(int,int) -> forceUniformHeight
    905:924:void forceUniformWidth(int,int) -> forceUniformWidth
    59:59:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1744:1749:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    59:59:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    59:59:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1731:1731:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1754:1754:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    433:481:int getBaseline() -> getBaseline
    490:490:int getBaselineAlignedChildIndex() -> getBaselineAlignedChildIndex
    1357:1357:int getChildrenSkipCount(android.view.View,int) -> getChildrenSkipCount
    231:231:android.graphics.drawable.Drawable getDividerDrawable() -> getDividerDrawable
    278:278:int getDividerPadding() -> getDividerPadding
    288:288:int getDividerWidth() -> getDividerWidth
    1710:1710:int getGravity() -> getGravity
    1399:1399:int getLocationOffset(android.view.View) -> getLocationOffset
    1411:1411:int getNextLocationOffset(android.view.View) -> getNextLocationOffset
    1677:1677:int getOrientation() -> getOrientation
    222:222:int getShowDividers() -> getShowDividers
    515:515:android.view.View getVirtualChildAt(int) -> getVirtualChildAt
    528:528:int getVirtualChildCount() -> getVirtualChildCount
    539:539:float getWeightSum() -> getWeightSum
    576:590:boolean hasDividerBeforeChildAt(int) -> hasDividerBeforeChildAt
    1531:1652:void layoutHorizontal(int,int,int,int) -> layoutHorizontal
    1436:1516:void layoutVertical(int,int,int,int) -> layoutVertical
    1387:1389:void measureChildBeforeLayout(android.view.View,int,int,int,int,int) -> measureChildBeforeLayout
    938:1321:void measureHorizontal(int,int) -> measureHorizontal
    1368:1368:int measureNullChild(int) -> measureNullChild
    605:901:void measureVertical(int,int) -> measureVertical
    293:302:void onDraw(android.graphics.Canvas) -> onDraw
    1766:1768:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1772:1774:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    1416:1421:void onLayout(boolean,int,int,int,int) -> onLayout
    560:565:void onMeasure(int,int) -> onMeasure
    402:403:void setBaselineAligned(boolean) -> setBaselineAligned
    498:503:void setBaselineAlignedChildIndex(int) -> setBaselineAlignedChildIndex
    1655:1656:void setChildFrame(android.view.View,int,int,int,int) -> setChildFrame
    242:255:void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
    267:268:void setDividerPadding(int) -> setDividerPadding
    1689:1701:void setGravity(int) -> setGravity
    1714:1719:void setHorizontalGravity(int) -> setHorizontalGravity
    428:429:void setMeasureWithLargestChildEnabled(boolean) -> setMeasureWithLargestChildEnabled
    1664:1668:void setOrientation(int) -> setOrientation
    205:209:void setShowDividers(int) -> setShowDividers
    1722:1727:void setVerticalGravity(int) -> setVerticalGravity
    555:556:void setWeightSum(float) -> setWeightSum
    213:213:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams -> androidx.appcompat.widget.LinearLayoutCompat$LayoutParams:
    1793:1807:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1793:1815:void <init>(int,int) -> <init>
    1793:1837:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
androidx.appcompat.widget.ListPopupWindow -> androidx.appcompat.widget.ListPopupWindow:
    84:109:void <clinit>() -> <clinit>
    248:249:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    115:278:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1156:1329:int buildDropDown() -> buildDropDown
    846:853:void clearListSelection() -> clearListSelection
    950:950:androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> createDropDownListView
    772:777:void dismiss() -> dismiss
    460:460:android.view.View getAnchorView() -> getAnchorView
    423:423:android.graphics.drawable.Drawable getBackground() -> getBackground
    477:477:int getHorizontalOffset() -> getHorizontalOffset
    946:946:android.widget.ListView getListView() -> getListView
    1445:1457:int getMaxAvailableHeight(android.view.View,int,boolean) -> getMaxAvailableHeight
    493:496:int getVerticalOffset() -> getVerticalOffset
    545:545:int getWidth() -> getWidth
    868:868:boolean isInputMethodNotNeeded() -> isInputMethodNotNeeded
    345:345:boolean isModal() -> isModal
    860:860:boolean isShowing() -> isShowing
    789:796:void removePromptView() -> removePromptView
    287:300:void setAdapter(android.widget.ListAdapter) -> setAdapter
    470:471:void setAnchorView(android.view.View) -> setAnchorView
    441:442:void setAnimationStyle(int) -> setAnimationStyle
    432:433:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    565:572:void setContentWidth(int) -> setContentWidth
    538:539:void setDropDownGravity(int) -> setDropDownGravity
    517:518:void setEpicenterBounds(android.graphics.Rect) -> setEpicenterBounds
    486:487:void setHorizontalOffset(int) -> setHorizontalOffset
    811:812:void setInputMethodMode(int) -> setInputMethodMode
    335:337:void setModal(boolean) -> setModal
    785:786:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    619:620:void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    1338:1340:void setOverlapAnchor(boolean) -> setOverlapAnchor
    1431:1442:void setPopupClipToScreenEnabled(boolean) -> setPopupClipToScreenEnabled
    312:313:void setPromptPosition(int) -> setPromptPosition
    830:839:void setSelection(int) -> setSelection
    505:507:void setVerticalOffset(int) -> setVerticalOffset
    555:556:void setWidth(int) -> setWidth
    663:765:void show() -> show
androidx.appcompat.widget.ListPopupWindow$2 -> androidx.appcompat.widget.ListPopupWindow$2:
    1167:1167:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1171:1175:void run() -> run
androidx.appcompat.widget.ListPopupWindow$3 -> androidx.appcompat.widget.ListPopupWindow$3:
    1186:1186:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1191:1198:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    1202:1202:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
androidx.appcompat.widget.ListPopupWindow$ListSelectorHider -> androidx.appcompat.widget.ListPopupWindow$ListSelectorHider:
    1361:1362:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1366:1367:void run() -> run
androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver -> androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver:
    1343:1344:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1348:1352:void onChanged() -> onChanged
    1356:1357:void onInvalidated() -> onInvalidated
androidx.appcompat.widget.ListPopupWindow$PopupScrollListener -> androidx.appcompat.widget.ListPopupWindow$PopupScrollListener:
    1407:1408:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1414:1414:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    1418:1423:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor -> androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor:
    1386:1387:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1391:1402:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable -> androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable:
    1371:1372:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1376:1382:void run() -> run
androidx.appcompat.widget.MenuPopupWindow -> androidx.appcompat.widget.MenuPopupWindow:
    61:68:void <clinit>() -> <clinit>
    74:75:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    80:82:androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> createDropDownListView
    122:125:void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverEnter
    130:133:void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverExit
    86:89:void setEnterTransition(java.lang.Object) -> setEnterTransition
    92:95:void setExitTransition(java.lang.Object) -> setExitTransition
    98:99:void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener) -> setHoverListener
    106:117:void setTouchModal(boolean) -> setTouchModal
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView -> androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView:
    147:159:void <init>(android.content.Context,boolean) -> <init>
    138:138:boolean hasFocus() -> hasFocus
    138:138:boolean hasWindowFocus() -> hasWindowFocus
    138:138:boolean isFocused() -> isFocused
    138:138:boolean isInTouchMode() -> isInTouchMode
    138:138:int measureHeightOfChildrenCompat(int,int,int,int,int) -> measureHeightOfChildrenCompat
    138:138:boolean onForwardedEvent(android.view.MotionEvent,int) -> onForwardedEvent
    193:234:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    171:187:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    138:138:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    162:163:void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener) -> setHoverListener
    138:138:void setSelector(android.graphics.drawable.Drawable) -> setSelector
androidx.appcompat.widget.ResourceManagerInternal -> androidx.appcompat.widget.ResourceManagerInternal:
    83:112:void <clinit>() -> <clinit>
    62:118:void <init>() -> <init>
    335:346:boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable) -> addDrawableToCache
    402:411:void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList) -> addTintListToCache
    482:495:void checkVectorDrawableSetup(android.content.Context) -> checkVectorDrawableSetup
    167:167:long createCacheKey(android.util.TypedValue) -> createCacheKey
    172:195:android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int) -> createDrawableIfNeeded
    460:464:android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[]) -> createTintFilter
    93:98:androidx.appcompat.widget.ResourceManagerInternal get() -> get
    314:331:android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long) -> getCachedDrawable
    132:132:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    136:155:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean) -> getDrawable
    469:478:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode) -> getPorterDuffColorFilter
    378:389:android.content.res.ColorStateList getTintList(android.content.Context,int) -> getTintList
    393:397:android.content.res.ColorStateList getTintListFromCache(android.content.Context,int) -> getTintListFromCache
    374:374:android.graphics.PorterDuff$Mode getTintMode(int) -> getTintMode
    105:110:void installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal) -> installDefaultInflateDelegates
    498:499:boolean isVectorDrawable(android.graphics.drawable.Drawable) -> isVectorDrawable
    229:310:android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int) -> loadDrawableFromDelegates
    158:164:void onConfigurationChanged(android.content.Context) -> onConfigurationChanged
    350:358:android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,androidx.appcompat.widget.VectorEnabledTintResources,int) -> onDrawableLoadedFromResources
    127:129:void setHooks(androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks) -> setHooks
    200:225:android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable) -> tintDrawable
    436:456:void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]) -> tintDrawable
    363:363:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable) -> tintDrawableUsingColorFilter
androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache -> androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache:
    416:417:void <init>(int) -> <init>
    428:431:int generateCacheKey(int,android.graphics.PorterDuff$Mode) -> generateCacheKey
    420:420:android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode) -> get
    424:424:android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter) -> put
androidx.appcompat.widget.ResourcesWrapper -> androidx.appcompat.widget.ResourcesWrapper:
    48:50:void <init>(android.content.res.Resources) -> <init>
    188:188:android.content.res.XmlResourceParser getAnimation(int) -> getAnimation
    173:173:boolean getBoolean(int) -> getBoolean
    162:162:int getColor(int) -> getColor
    168:168:android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    251:251:android.content.res.Configuration getConfiguration() -> getConfiguration
    110:110:float getDimension(int) -> getDimension
    115:115:int getDimensionPixelOffset(int) -> getDimensionPixelOffset
    120:120:int getDimensionPixelSize(int) -> getDimensionPixelSize
    246:246:android.util.DisplayMetrics getDisplayMetrics() -> getDisplayMetrics
    131:131:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    137:137:android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme) -> getDrawable
    144:144:android.graphics.drawable.Drawable getDrawableForDensity(int,int) -> getDrawableForDensity
    150:150:android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
    125:125:float getFraction(int,int,int) -> getFraction
    256:256:int getIdentifier(java.lang.String,java.lang.String,java.lang.String) -> getIdentifier
    100:100:int[] getIntArray(int) -> getIntArray
    178:178:int getInteger(int) -> getInteger
    183:183:android.content.res.XmlResourceParser getLayout(int) -> getLayout
    156:156:android.graphics.Movie getMovie(int) -> getMovie
    75:75:java.lang.String getQuantityString(int,int,java.lang.Object[]) -> getQuantityString
    80:80:java.lang.String getQuantityString(int,int) -> getQuantityString
    59:59:java.lang.CharSequence getQuantityText(int,int) -> getQuantityText
    276:276:java.lang.String getResourceEntryName(int) -> getResourceEntryName
    261:261:java.lang.String getResourceName(int) -> getResourceName
    266:266:java.lang.String getResourcePackageName(int) -> getResourcePackageName
    271:271:java.lang.String getResourceTypeName(int) -> getResourceTypeName
    64:64:java.lang.String getString(int) -> getString
    69:69:java.lang.String getString(int,java.lang.Object[]) -> getString
    95:95:java.lang.String[] getStringArray(int) -> getStringArray
    54:54:java.lang.CharSequence getText(int) -> getText
    85:85:java.lang.CharSequence getText(int,java.lang.CharSequence) -> getText
    90:90:java.lang.CharSequence[] getTextArray(int) -> getTextArray
    214:215:void getValue(int,android.util.TypedValue,boolean) -> getValue
    227:228:void getValue(java.lang.String,android.util.TypedValue,boolean) -> getValue
    221:222:void getValueForDensity(int,int,android.util.TypedValue,boolean) -> getValueForDensity
    193:193:android.content.res.XmlResourceParser getXml(int) -> getXml
    232:232:android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[]) -> obtainAttributes
    105:105:android.content.res.TypedArray obtainTypedArray(int) -> obtainTypedArray
    198:198:java.io.InputStream openRawResource(int) -> openRawResource
    203:203:java.io.InputStream openRawResource(int,android.util.TypedValue) -> openRawResource
    208:208:android.content.res.AssetFileDescriptor openRawResourceFd(int) -> openRawResourceFd
    288:289:void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle) -> parseBundleExtra
    282:283:void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle) -> parseBundleExtras
    238:242:void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics) -> updateConfiguration
androidx.appcompat.widget.RtlSpacingHelper -> androidx.appcompat.widget.RtlSpacingHelper:
    25:36:void <init>() -> <init>
    51:51:int getEnd() -> getEnd
    39:39:int getLeft() -> getLeft
    43:43:int getRight() -> getRight
    47:47:int getStart() -> getStart
    68:71:void setAbsolute(int,int) -> setAbsolute
    74:90:void setDirection(boolean) -> setDirection
    55:65:void setRelative(int,int) -> setRelative
androidx.appcompat.widget.ScrollingTabContainerView -> androidx.appcompat.widget.ScrollingTabContainerView:
    78:78:void <clinit>() -> <clinit>
    261:274:void animateToTab(int) -> animateToTab
    215:221:android.widget.Spinner createSpinner() -> createSpinner
    294:307:androidx.appcompat.widget.ScrollingTabContainerView$TabView createTabView(androidx.appcompat.app.ActionBar$Tab,boolean) -> createTabView
    147:147:boolean isCollapsed() -> isCollapsed
    278:283:void onAttachedToWindow() -> onAttachedToWindow
    226:233:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    287:291:void onDetachedFromWindow() -> onDetachedFromWindow
    372:374:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    98:139:void onMeasure(int,int) -> onMeasure
    379:379:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
    155:171:void performCollapse() -> performCollapse
    174:180:boolean performExpand() -> performExpand
    151:152:void setAllowCollapse(boolean) -> setAllowCollapse
    200:202:void setContentHeight(int) -> setContentHeight
    184:197:void setTabSelected(int) -> setTabSelected
androidx.appcompat.widget.ScrollingTabContainerView$1 -> androidx.appcompat.widget.ScrollingTabContainerView$1:
    265:265:void <init>(androidx.appcompat.widget.ScrollingTabContainerView,android.view.View) -> <init>
    268:271:void run() -> run
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter -> androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter:
    527:528:void <init>(androidx.appcompat.widget.ScrollingTabContainerView) -> <init>
    532:532:int getCount() -> getCount
    537:537:java.lang.Object getItem(int) -> getItem
    542:542:long getItemId(int) -> getItemId
    547:552:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener -> androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener:
    557:558:void <init>(androidx.appcompat.widget.ScrollingTabContainerView) -> <init>
    562:569:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ScrollingTabContainerView$TabView -> androidx.appcompat.widget.ScrollingTabContainerView$TabView:
    382:411:void <init>(androidx.appcompat.widget.ScrollingTabContainerView,android.content.Context,androidx.appcompat.app.ActionBar$Tab,boolean) -> <init>
    414:416:void bindTab(androidx.appcompat.app.ActionBar$Tab) -> bindTab
    522:522:androidx.appcompat.app.ActionBar$Tab getTab() -> getTab
    429:432:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    436:440:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    444:451:void onMeasure(int,int) -> onMeasure
    420:425:void setSelected(boolean) -> setSelected
    454:519:void update() -> update
androidx.appcompat.widget.SearchView -> androidx.appcompat.widget.SearchView:
    180:181:void <clinit>() -> <clinit>
    272:273:void <init>(android.content.Context) -> <init>
    276:277:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    136:1718:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1369:1390:void adjustDropDownSizeAndPosition() -> adjustDropDownSizeAndPosition
    502:507:void clearFocus() -> clearFocus
    1542:1565:android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String) -> createIntent
    1661:1697:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String) -> createIntentFromSuggestion
    1587:1642:android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceAppSearchIntent
    1572:1576:android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceWebSearchIntent
    1207:1208:void dismissSuggestions() -> dismissSuggestions
    1702:1708:void forceSuggestionQuery() -> forceSuggestionQuery
    856:861:void getChildBoundsWithinSearchView(android.view.View,android.graphics.Rect) -> getChildBoundsWithinSearchView
    1093:1103:java.lang.CharSequence getDecoratedHint(java.lang.CharSequence) -> getDecoratedHint
    457:457:int getImeOptions() -> getImeOptions
    479:479:int getInputType() -> getInputType
    782:782:int getMaxWidth() -> getMaxWidth
    869:870:int getPreferredHeight() -> getPreferredHeight
    864:865:int getPreferredWidth() -> getPreferredWidth
    564:564:java.lang.CharSequence getQuery() -> getQuery
    624:631:java.lang.CharSequence getQueryHint() -> getQueryHint
    399:399:int getSuggestionCommitIconResId() -> getSuggestionCommitIconResId
    395:395:int getSuggestionRowLayout() -> getSuggestionRowLayout
    760:760:androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter() -> getSuggestionsAdapter
    898:911:boolean hasVoiceSearch() -> hasVoiceSearch
    688:688:boolean isIconified() -> isIconified
    1711:1711:boolean isLandscapeMode(android.content.Context) -> isLandscapeMode
    915:915:boolean isSubmitAreaEnabled() -> isSubmitAreaEnabled
    1499:1509:void launchIntent(android.content.Intent) -> launchIntent
    1521:1524:void launchQuerySearch(int,java.lang.String,java.lang.String) -> launchQuerySearch
    1482:1492:boolean launchSuggestion(int,int,java.lang.String) -> launchSuggestion
    1284:1289:void onActionViewCollapsed() -> onActionViewCollapsed
    1296:1303:void onActionViewExpanded() -> onActionViewExpanded
    1211:1228:void onCloseClicked() -> onCloseClicked
    969:972:void onDetachedFromWindow() -> onDetachedFromWindow
    1393:1400:boolean onItemClicked(int,int,java.lang.String) -> onItemClicked
    1404:1409:boolean onItemSelected(int) -> onItemSelected
    837:853:void onLayout(boolean,int,int,int,int) -> onLayout
    788:833:void onMeasure(int,int) -> onMeasure
    978:979:void onQueryRefine(java.lang.CharSequence) -> onQueryRefine
    1358:1366:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1350:1353:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1231:1237:void onSearchClicked() -> onSearchClicked
    1193:1204:void onSubmitQuery() -> onSubmitQuery
    1048:1087:boolean onSuggestionsKey(android.view.View,int,android.view.KeyEvent) -> onSuggestionsKey
    1179:1190:void onTextChanged(java.lang.CharSequence) -> onTextChanged
    1263:1270:void onTextFocusChanged() -> onTextFocusChanged
    1241:1260:void onVoiceClicked() -> onVoiceClicked
    1274:1277:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    950:951:void postUpdateFocusedState() -> postUpdateFocusedState
    485:496:boolean requestFocus(int,android.graphics.Rect) -> requestFocus
    1449:1469:void rewriteQueryFromSuggestion(int) -> rewriteQueryFromSuggestion
    434:435:void setAppSearchData(android.os.Bundle) -> setAppSearchData
    674:679:void setIconified(boolean) -> setIconified
    647:651:void setIconifiedByDefault(boolean) -> setIconifiedByDefault
    446:447:void setImeOptions(int) -> setImeOptions
    469:470:void setInputType(int) -> setInputType
    769:772:void setMaxWidth(int) -> setMaxWidth
    525:526:void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener) -> setOnCloseListener
    534:535:void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener) -> setOnQueryTextFocusChangeListener
    516:517:void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener) -> setOnQueryTextListener
    555:556:void setOnSearchClickListener(android.view.View$OnClickListener) -> setOnSearchClickListener
    543:544:void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener) -> setOnSuggestionListener
    576:586:void setQuery(java.lang.CharSequence,boolean) -> setQuery
    1515:1518:void setQuery(java.lang.CharSequence) -> setQuery
    599:601:void setQueryHint(java.lang.CharSequence) -> setQueryHint
    728:733:void setQueryRefinementEnabled(boolean) -> setQueryRefinementEnabled
    411:425:void setSearchableInfo(android.app.SearchableInfo) -> setSearchableInfo
    700:702:void setSubmitButtonEnabled(boolean) -> setSubmitButtonEnabled
    750:753:void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter) -> setSuggestionsAdapter
    938:947:void updateCloseButton() -> updateCloseButton
    954:965:void updateFocusedState() -> updateFocusedState
    1107:1109:void updateQueryHint() -> updateQueryHint
    1115:1149:void updateSearchAutoComplete() -> updateSearchAutoComplete
    928:935:void updateSubmitArea() -> updateSubmitArea
    919:925:void updateSubmitButton(boolean) -> updateSubmitButton
    874:895:void updateViewsVisibility(boolean) -> updateViewsVisibility
    1158:1164:void updateVoiceButton(boolean) -> updateVoiceButton
androidx.appcompat.widget.SearchView$1 -> androidx.appcompat.widget.SearchView$1:
    183:183:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    186:187:void run() -> run
androidx.appcompat.widget.SearchView$10 -> androidx.appcompat.widget.SearchView$10:
    1718:1718:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1730:1730:void afterTextChanged(android.text.Editable) -> afterTextChanged
    1720:1720:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    1725:1726:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
androidx.appcompat.widget.SearchView$2 -> androidx.appcompat.widget.SearchView$2:
    190:190:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    193:196:void run() -> run
androidx.appcompat.widget.SearchView$3 -> androidx.appcompat.widget.SearchView$3:
    336:336:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    339:342:void onFocusChange(android.view.View,boolean) -> onFocusChange
androidx.appcompat.widget.SearchView$4 -> androidx.appcompat.widget.SearchView$4:
    381:381:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    385:386:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
androidx.appcompat.widget.SearchView$5 -> androidx.appcompat.widget.SearchView$5:
    981:981:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    984:995:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.SearchView$6 -> androidx.appcompat.widget.SearchView$6:
    1003:1003:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1007:1037:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
androidx.appcompat.widget.SearchView$7 -> androidx.appcompat.widget.SearchView$7:
    1166:1166:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1173:1174:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
androidx.appcompat.widget.SearchView$8 -> androidx.appcompat.widget.SearchView$8:
    1412:1412:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1420:1421:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.widget.SearchView$9 -> androidx.appcompat.widget.SearchView$9:
    1424:1424:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1432:1433:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    1442:1442:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector -> androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector:
    2042:2072:void <init>() -> <init>
    2085:2092:void doAfterTextChanged(android.widget.AutoCompleteTextView) -> doAfterTextChanged
    2075:2082:void doBeforeTextChanged(android.widget.AutoCompleteTextView) -> doBeforeTextChanged
    2095:2102:void ensureImeVisible(android.widget.AutoCompleteTextView) -> ensureImeVisible
    2105:2109:void preApi29Check() -> preApi29Check
androidx.appcompat.widget.SearchView$SavedState -> androidx.appcompat.widget.SearchView$SavedState:
    1330:1330:void <clinit>() -> <clinit>
    1309:1310:void <init>(android.os.Parcelable) -> <init>
    1313:1315:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1325:1326:java.lang.String toString() -> toString
    1319:1321:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.SearchView$SavedState$1 -> androidx.appcompat.widget.SearchView$SavedState$1:
    1330:1330:void <init>() -> <init>
    1330:1330:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1330:1330:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1333:1333:androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1338:1338:androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1330:1330:java.lang.Object[] newArray(int) -> newArray
    1343:1343:androidx.appcompat.widget.SearchView$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.SearchView$SearchAutoComplete -> androidx.appcompat.widget.SearchView$SearchAutoComplete:
    1851:1852:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1839:1857:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1936:1936:boolean enoughToFilter() -> enoughToFilter
    2030:2038:void ensureImeVisible() -> ensureImeVisible
    1969:1979:int getSearchViewTextMinWidthDp() -> getSearchViewTextMinWidthDp
    1881:1881:boolean isEmpty() -> isEmpty
    1988:1993:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    1861:1865:void onFinishInflate() -> onFinishInflate
    1926:1928:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    1941:1962:boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    1908:1922:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    1900:1900:void performCompletion() -> performCompletion
    1890:1890:void replaceText(java.lang.CharSequence) -> replaceText
    2006:2027:void setImeVisibility(boolean) -> setImeVisibility
    1868:1869:void setSearchView(androidx.appcompat.widget.SearchView) -> setSearchView
    1873:1875:void setThreshold(int) -> setThreshold
    1997:2003:void showSoftInputIfNecessary() -> showSoftInputIfNecessary
androidx.appcompat.widget.SearchView$SearchAutoComplete$1 -> androidx.appcompat.widget.SearchView$SearchAutoComplete$1:
    1839:1839:void <init>(androidx.appcompat.widget.SearchView$SearchAutoComplete) -> <init>
    1842:1843:void run() -> run
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate -> androidx.appcompat.widget.SearchView$UpdatableTouchDelegate:
    1765:1772:void <init>(android.graphics.Rect,android.graphics.Rect,android.view.View) -> <init>
    1783:1824:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1775:1779:void setBounds(android.graphics.Rect,android.graphics.Rect) -> setBounds
androidx.appcompat.widget.SuggestionsAdapter -> androidx.appcompat.widget.SuggestionsAdapter:
    75:105:void <init>(android.content.Context,androidx.appcompat.widget.SearchView,android.app.SearchableInfo,java.util.WeakHashMap) -> <init>
    274:324:void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    216:236:void changeCursor(android.database.Cursor) -> changeCursor
    582:587:android.graphics.drawable.Drawable checkIconCache(java.lang.String) -> checkIconCache
    414:437:java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    335:346:java.lang.CharSequence formatUrl(java.lang.CharSequence) -> formatUrl
    645:662:android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName) -> getActivityIcon
    623:634:android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName) -> getActivityIconWithCache
    674:675:java.lang.String getColumnString(android.database.Cursor,java.lang.String) -> getColumnString
    604:610:android.graphics.drawable.Drawable getDefaultIcon1() -> getDefaultIcon1
    549:575:android.graphics.drawable.Drawable getDrawable(android.net.Uri) -> getDrawable
    697:728:android.graphics.drawable.Drawable getDrawableFromResourceUri(android.net.Uri) -> getDrawableFromResourceUri
    506:538:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String) -> getDrawableFromResourceValue
    472:482:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    361:369:android.graphics.drawable.Drawable getIcon1(android.database.Cursor) -> getIcon1
    373:377:android.graphics.drawable.Drawable getIcon2(android.database.Cursor) -> getIcon2
    735:776:android.database.Cursor getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int) -> getSearchManagerSuggestions
    679:688:java.lang.String getStringOrNull(android.database.Cursor,int) -> getStringOrNull
    449:459:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    134:134:boolean hasStableIds() -> hasStableIds
    243:249:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    180:183:void notifyDataSetChanged() -> notifyDataSetChanged
    188:191:void notifyDataSetInvalidated() -> notifyDataSetInvalidated
    328:332:void onClick(android.view.View) -> onClick
    145:168:android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    117:118:void setQueryRefinement(int) -> setQueryRefinement
    387:402:void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int) -> setViewDrawable
    351:358:void setViewText(android.widget.TextView,java.lang.CharSequence) -> setViewText
    591:594:void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable) -> storeInIconCache
    194:207:void updateSpinnerState(android.database.Cursor) -> updateSpinnerState
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache -> androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache:
    263:269:void <init>(android.view.View) -> <init>
androidx.appcompat.widget.SwitchCompat -> androidx.appcompat.widget.SwitchCompat:
    102:185:void <clinit>() -> <clinit>
    206:207:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    116:302:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1035:1042:void animateThumbToCheckedState(boolean) -> animateThumbToCheckedState
    705:722:void applyThumbTint() -> applyThumbTint
    582:599:void applyTrackTint() -> applyTrackTint
    1045:1048:void cancelPositionAnimator() -> cancelPositionAnimator
    995:999:void cancelSuperTouch(android.view.MotionEvent) -> cancelSuperTouch
    1437:1437:float constrain(float,float,float) -> constrain
    1144:1205:void draw(android.graphics.Canvas) -> draw
    1364:1375:void drawableHotspotChanged(float,float) -> drawableHotspotChanged
    1342:1360:void drawableStateChanged() -> drawableStateChanged
    1274:1281:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    1286:1293:int getCompoundPaddingRight() -> getCompoundPaddingRight
    803:803:boolean getShowText() -> getShowText
    744:744:boolean getSplitTrack() -> getSplitTrack
    457:457:int getSwitchMinWidth() -> getSwitchMinWidth
    432:432:int getSwitchPadding() -> getSwitchPadding
    1051:1051:boolean getTargetCheckedState() -> getTargetCheckedState
    772:772:java.lang.CharSequence getTextOff() -> getTextOff
    753:753:java.lang.CharSequence getTextOn() -> getTextOn
    641:641:android.graphics.drawable.Drawable getThumbDrawable() -> getThumbDrawable
    1304:1309:int getThumbOffset() -> getThumbOffset
    1313:1327:int getThumbScrollRange() -> getThumbScrollRange
    480:480:int getThumbTextPadding() -> getThumbTextPadding
    672:672:android.content.res.ColorStateList getThumbTintList() -> getThumbTintList
    701:701:android.graphics.PorterDuff$Mode getThumbTintMode() -> getThumbTintMode
    520:520:android.graphics.drawable.Drawable getTrackDrawable() -> getTrackDrawable
    550:550:android.content.res.ColorStateList getTrackTintList() -> getTrackTintList
    578:578:android.graphics.PorterDuff$Mode getTrackTintMode() -> getTrackTintMode
    899:912:boolean hitThumb(float,float) -> hitThumb
    1384:1398:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    885:891:android.text.Layout makeLayout(java.lang.CharSequence) -> makeLayout
    1333:1337:int[] onCreateDrawableState(int) -> onCreateDrawableState
    1209:1270:void onDraw(android.graphics.Canvas) -> onDraw
    1402:1404:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1408:1421:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    1088:1140:void onLayout(boolean,int,int,int,int) -> onLayout
    808:872:void onMeasure(int,int) -> onMeasure
    876:882:void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    917:991:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1071:1084:void setChecked(boolean) -> setChecked
    1429:1431:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    792:796:void setShowText(boolean) -> setShowText
    734:736:void setSplitTrack(boolean) -> setSplitTrack
    444:446:void setSwitchMinWidth(int) -> setSwitchMinWidth
    420:422:void setSwitchPadding(int) -> setSwitchPadding
    311:347:void setSwitchTextAppearance(android.content.Context,int) -> setSwitchTextAppearance
    375:393:void setSwitchTypeface(android.graphics.Typeface,int) -> setSwitchTypeface
    403:410:void setSwitchTypeface(android.graphics.Typeface) -> setSwitchTypeface
    350:366:void setSwitchTypefaceByIndex(int,int) -> setSwitchTypefaceByIndex
    781:783:void setTextOff(java.lang.CharSequence) -> setTextOff
    762:764:void setTextOn(java.lang.CharSequence) -> setTextOn
    610:618:void setThumbDrawable(android.graphics.drawable.Drawable) -> setThumbDrawable
    1060:1062:void setThumbPosition(float) -> setThumbPosition
    629:630:void setThumbResource(int) -> setThumbResource
    468:470:void setThumbTextPadding(int) -> setThumbTextPadding
    659:663:void setThumbTintList(android.content.res.ColorStateList) -> setThumbTintList
    687:691:void setThumbTintMode(android.graphics.PorterDuff$Mode) -> setThumbTintMode
    491:499:void setTrackDrawable(android.graphics.drawable.Drawable) -> setTrackDrawable
    509:510:void setTrackResource(int) -> setTrackResource
    537:541:void setTrackTintList(android.content.res.ColorStateList) -> setTrackTintList
    564:568:void setTrackTintMode(android.graphics.PorterDuff$Mode) -> setTrackTintMode
    1007:1032:void stopDrag(android.view.MotionEvent) -> stopDrag
    1066:1067:void toggle() -> toggle
    1379:1379:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.appcompat.widget.SwitchCompat$1 -> androidx.appcompat.widget.SwitchCompat$1:
    103:103:void <init>(java.lang.Class,java.lang.String) -> <init>
    103:103:java.lang.Object get(java.lang.Object) -> get
    106:106:java.lang.Float get(androidx.appcompat.widget.SwitchCompat) -> get
    103:103:void set(java.lang.Object,java.lang.Object) -> set
    111:112:void set(androidx.appcompat.widget.SwitchCompat,java.lang.Float) -> set
androidx.appcompat.widget.ThemeUtils -> androidx.appcompat.widget.ThemeUtils:
    41:53:void <clinit>() -> <clinit>
    162:176:void checkAppCompatTheme(android.view.View,android.content.Context) -> checkAppCompatTheme
    126:138:int getDisabledThemeAttrColor(android.content.Context,int) -> getDisabledThemeAttrColor
    91:97:int getThemeAttrColor(android.content.Context,int) -> getThemeAttrColor
    152:154:int getThemeAttrColor(android.content.Context,int,float) -> getThemeAttrColor
    109:115:android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int) -> getThemeAttrColorStateList
    143:148:android.util.TypedValue getTypedValue() -> getTypedValue
androidx.appcompat.widget.TintContextWrapper -> androidx.appcompat.widget.TintContextWrapper:
    42:42:void <clinit>() -> <clinit>
    92:104:void <init>(android.content.Context) -> <init>
    128:128:android.content.res.AssetManager getAssets() -> getAssets
    122:122:android.content.res.Resources getResources() -> getResources
    108:108:android.content.res.Resources$Theme getTheme() -> getTheme
    113:118:void setTheme(int) -> setTheme
    78:85:boolean shouldWrap(android.content.Context) -> shouldWrap
    46:74:android.content.Context wrap(android.content.Context) -> wrap
androidx.appcompat.widget.TintInfo -> androidx.appcompat.widget.TintInfo:
    28:28:void <init>() -> <init>
    35:39:void clear() -> clear
androidx.appcompat.widget.TintResources -> androidx.appcompat.widget.TintResources:
    35:37:void <init>(android.content.Context,android.content.res.Resources) -> <init>
    46:51:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
androidx.appcompat.widget.TintTypedArray -> androidx.appcompat.widget.TintTypedArray:
    67:70:void <init>(android.content.Context,android.content.res.TypedArray) -> <init>
    158:158:boolean getBoolean(int,boolean) -> getBoolean
    170:170:int getColor(int,int) -> getColor
    174:184:android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    196:196:int getDimensionPixelOffset(int,int) -> getDimensionPixelOffset
    200:200:int getDimensionPixelSize(int,int) -> getDimensionPixelSize
    80:86:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    90:96:android.graphics.drawable.Drawable getDrawableIfKnown(int) -> getDrawableIfKnown
    166:166:float getFloat(int,float) -> getFloat
    119:126:android.graphics.Typeface getFont(int,int,androidx.core.content.res.ResourcesCompat$FontCallback) -> getFont
    162:162:int getInt(int,int) -> getInt
    188:188:int getInteger(int,int) -> getInteger
    208:208:int getLayoutDimension(int,int) -> getLayoutDimension
    216:216:int getResourceId(int,int) -> getResourceId
    150:150:java.lang.String getString(int) -> getString
    146:146:java.lang.CharSequence getText(int) -> getText
    220:220:java.lang.CharSequence[] getTextArray(int) -> getTextArray
    76:76:android.content.res.TypedArray getWrappedTypeArray() -> getWrappedTypeArray
    240:240:boolean hasValue(int) -> hasValue
    54:54:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]) -> obtainStyledAttributes
    59:60:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int) -> obtainStyledAttributes
    64:64:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,int,int[]) -> obtainStyledAttributes
    252:253:void recycle() -> recycle
androidx.appcompat.widget.Toolbar -> androidx.appcompat.widget.Toolbar:
    232:233:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    181:353:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    2249:2255:void addChildrenForExpandedActionView() -> addChildrenForExpandedActionView
    2141:2167:void addCustomViewsWithGravity(java.util.List,int) -> addCustomViewsWithGravity
    1512:1529:void addSystemView(android.view.View,boolean) -> addSystemView
    517:517:boolean canShowOverflowMenu() -> canShowOverflowMenu
    2223:2223:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    725:730:void collapseActionView() -> collapseActionView
    595:598:void dismissPopupMenus() -> dismissPopupMenus
    1493:1509:void ensureCollapseButtonView() -> ensureCollapseButtonView
    2286:2289:void ensureContentInsets() -> ensureContentInsets
    695:698:void ensureLogoView() -> ensureLogoView
    1154:1164:void ensureMenu() -> ensureMenu
    1167:1177:void ensureMenuView() -> ensureMenuView
    1483:1490:void ensureNavButtonView() -> ensureNavButtonView
    145:145:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    2218:2218:androidx.appcompat.widget.Toolbar$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    145:145:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    145:145:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2200:2200:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    2205:2212:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2170:2179:int getChildHorizontalGravity(int) -> getChildHorizontalGravity
    2090:2117:int getChildTop(android.view.View,int) -> getChildTop
    2122:2129:int getChildVerticalGravity(int) -> getChildVerticalGravity
    1037:1037:java.lang.CharSequence getCollapseContentDescription() -> getCollapseContentDescription
    1082:1082:android.graphics.drawable.Drawable getCollapseIcon() -> getCollapseIcon
    1268:1268:int getContentInsetEnd() -> getContentInsetEnd
    1390:1392:int getContentInsetEndWithActions() -> getContentInsetEndWithActions
    1311:1311:int getContentInsetLeft() -> getContentInsetLeft
    1331:1331:int getContentInsetRight() -> getContentInsetRight
    1248:1248:int getContentInsetStart() -> getContentInsetStart
    1347:1349:int getContentInsetStartWithNavigation() -> getContentInsetStartWithNavigation
    1442:1449:int getCurrentContentInsetEnd() -> getCurrentContentInsetEnd
    1462:1464:int getCurrentContentInsetLeft() -> getCurrentContentInsetLeft
    1477:1479:int getCurrentContentInsetRight() -> getCurrentContentInsetRight
    1428:1430:int getCurrentContentInsetStart() -> getCurrentContentInsetStart
    2188:2190:int getHorizontalMargins(android.view.View) -> getHorizontalMargins
    653:653:android.graphics.drawable.Drawable getLogo() -> getLogo
    691:691:java.lang.CharSequence getLogoDescription() -> getLogoDescription
    1128:1129:android.view.Menu getMenu() -> getMenu
    1180:1180:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    917:917:java.lang.CharSequence getNavigationContentDescription() -> getNavigationContentDescription
    1009:1009:android.graphics.drawable.Drawable getNavigationIcon() -> getNavigationIcon
    2313:2313:androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter() -> getOuterActionMenuPresenter
    1149:1150:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    2317:2317:android.content.Context getPopupContext() -> getPopupContext
    379:379:int getPopupTheme() -> getPopupTheme
    794:794:java.lang.CharSequence getSubtitle() -> getSubtitle
    2306:2306:android.widget.TextView getSubtitleTextView() -> getSubtitleTextView
    738:738:java.lang.CharSequence getTitle() -> getTitle
    476:476:int getTitleMarginBottom() -> getTitleMarginBottom
    454:454:int getTitleMarginEnd() -> getTitleMarginEnd
    410:410:int getTitleMarginStart() -> getTitleMarginStart
    432:432:int getTitleMarginTop() -> getTitleMarginTop
    2297:2297:android.widget.TextView getTitleTextView() -> getTitleTextView
    2194:2195:int getVerticalMargins(android.view.View) -> getVerticalMargins
    2045:2060:int getViewListMeasuredWidth(java.util.List,int[]) -> getViewListMeasuredWidth
    2229:2232:androidx.appcompat.widget.DecorToolbar getWrapper() -> getWrapper
    711:711:boolean hasExpandedActionView() -> hasExpandedActionView
    551:551:boolean hideOverflowMenu() -> hideOverflowMenu
    1193:1194:void inflateMenu(int) -> inflateMenu
    2258:2258:boolean isChildOrHidden(android.view.View) -> isChildOrHidden
    533:533:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    527:527:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    2065:2073:int layoutChildLeft(android.view.View,int,int[],int) -> layoutChildLeft
    2078:2086:int layoutChildRight(android.view.View,int,int[],int) -> layoutChildRight
    1654:1671:int measureChildCollapseMargins(android.view.View,int,int,int,int,int[]) -> measureChildCollapseMargins
    1629:1646:void measureChildConstrained(android.view.View,int,int,int,int,int) -> measureChildConstrained
    1573:1575:void onDetachedFromWindow() -> onDetachedFromWindow
    1608:1624:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    1827:2042:void onLayout(boolean,int,int,int,int) -> onLayout
    1693:1823:void onMeasure(int,int) -> onMeasure
    1545:1564:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    493:499:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    1533:1540:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1584:1600:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1567:1569:void postShowOverflowMenu() -> postShowOverflowMenu
    2236:2246:void removeChildrenForExpandedActionView() -> removeChildrenForExpandedActionView
    1051:1052:void setCollapseContentDescription(int) -> setCollapseContentDescription
    1065:1071:void setCollapseContentDescription(java.lang.CharSequence) -> setCollapseContentDescription
    1096:1097:void setCollapseIcon(int) -> setCollapseIcon
    1110:1116:void setCollapseIcon(android.graphics.drawable.Drawable) -> setCollapseIcon
    2268:2270:void setCollapsible(boolean) -> setCollapsible
    1408:1417:void setContentInsetEndWithActions(int) -> setContentInsetEndWithActions
    1366:1375:void setContentInsetStartWithNavigation(int) -> setContentInsetStartWithNavigation
    1227:1229:void setContentInsetsRelative(int,int) -> setContentInsetsRelative
    511:512:void setLogo(int) -> setLogo
    631:643:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    665:666:void setLogoDescription(int) -> setLogoDescription
    677:683:void setLogoDescription(java.lang.CharSequence) -> setLogoDescription
    557:589:void setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter) -> setMenu
    931:932:void setNavigationContentDescription(int) -> setNavigationContentDescription
    945:951:void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    968:969:void setNavigationIcon(int) -> setNavigationIcon
    986:998:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    1022:1024:void setNavigationOnClickListener(android.view.View$OnClickListener) -> setNavigationOnClickListener
    1205:1206:void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener) -> setOnMenuItemClickListener
    1138:1140:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    363:371:void setPopupTheme(int) -> setPopupTheme
    805:806:void setSubtitle(int) -> setSubtitle
    816:840:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    858:862:void setSubtitleTextAppearance(android.content.Context,int) -> setSubtitleTextAppearance
    891:892:void setSubtitleTextColor(int) -> setSubtitleTextColor
    900:904:void setSubtitleTextColor(android.content.res.ColorStateList) -> setSubtitleTextColor
    750:751:void setTitle(int) -> setTitle
    762:786:void setTitle(java.lang.CharSequence) -> setTitle
    487:489:void setTitleMarginBottom(int) -> setTitleMarginBottom
    465:468:void setTitleMarginEnd(int) -> setTitleMarginEnd
    421:424:void setTitleMarginStart(int) -> setTitleMarginStart
    443:446:void setTitleMarginTop(int) -> setTitleMarginTop
    847:851:void setTitleTextAppearance(android.content.Context,int) -> setTitleTextAppearance
    870:871:void setTitleTextColor(int) -> setTitleTextColor
    879:883:void setTitleTextColor(android.content.res.ColorStateList) -> setTitleTextColor
    1678:1688:boolean shouldCollapse() -> shouldCollapse
    2184:2184:boolean shouldLayout(android.view.View) -> shouldLayout
    542:542:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.Toolbar$1 -> androidx.appcompat.widget.Toolbar$1:
    203:203:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    206:209:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.widget.Toolbar$2 -> androidx.appcompat.widget.Toolbar$2:
    221:221:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    223:224:void run() -> run
androidx.appcompat.widget.Toolbar$3 -> androidx.appcompat.widget.Toolbar$3:
    1502:1502:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    1505:1506:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter -> androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter:
    2445:2446:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    2543:2556:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    2506:2536:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    2501:2501:boolean flagActionItems() -> flagActionItems
    2451:2455:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    2497:2497:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    2492:2492:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    2465:2484:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.widget.Toolbar$LayoutParams -> androidx.appcompat.widget.Toolbar$LayoutParams:
    2349:2353:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2349:2358:void <init>(int,int) -> <init>
    2349:2373:void <init>(androidx.appcompat.widget.Toolbar$LayoutParams) -> <init>
    2349:2377:void <init>(androidx.appcompat.app.ActionBar$LayoutParams) -> <init>
    2349:2384:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2349:2388:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2391:2395:void copyMarginsFromCompat(android.view.ViewGroup$MarginLayoutParams) -> copyMarginsFromCompat
androidx.appcompat.widget.Toolbar$SavedState -> androidx.appcompat.widget.Toolbar$SavedState:
    2423:2423:void <clinit>() -> <clinit>
    2407:2410:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2413:2414:void <init>(android.os.Parcelable) -> <init>
    2418:2421:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.Toolbar$SavedState$1 -> androidx.appcompat.widget.Toolbar$SavedState$1:
    2423:2423:void <init>() -> <init>
    2423:2423:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2423:2423:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2426:2426:androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2431:2431:androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2423:2423:java.lang.Object[] newArray(int) -> newArray
    2436:2436:androidx.appcompat.widget.Toolbar$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.ToolbarWidgetWrapper -> androidx.appcompat.widget.ToolbarWidgetWrapper:
    96:98:void <init>(androidx.appcompat.widget.Toolbar,boolean) -> <init>
    90:192:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int) -> <init>
    335:335:boolean canShowOverflowMenu() -> canShowOverflowMenu
    232:233:void collapseActionView() -> collapseActionView
    206:212:int detectDisplayOptions() -> detectDisplayOptions
    375:376:void dismissPopupMenus() -> dismissPopupMenus
    222:222:android.content.Context getContext() -> getContext
    380:380:int getDisplayOptions() -> getDisplayOptions
    458:458:int getNavigationMode() -> getNavigationMode
    250:250:java.lang.CharSequence getTitle() -> getTitle
    217:217:android.view.ViewGroup getViewGroup() -> getViewGroup
    227:227:boolean hasExpandedActionView() -> hasExpandedActionView
    355:355:boolean hideOverflowMenu() -> hideOverflowMenu
    286:287:void initIndeterminateProgress() -> initIndeterminateProgress
    281:282:void initProgress() -> initProgress
    345:345:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    340:340:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    448:449:void setCollapsible(boolean) -> setCollapsible
    540:547:void setCustomView(android.view.View) -> setCustomView
    196:203:void setDefaultNavigationContentDescription(int) -> setDefaultNavigationContentDescription
    385:418:void setDisplayOptions(int) -> setDisplayOptions
    422:434:void setEmbeddedTabView(androidx.appcompat.widget.ScrollingTabContainerView) -> setEmbeddedTabView
    454:454:void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    301:302:void setIcon(int) -> setIcon
    306:308:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    312:313:void setLogo(int) -> setLogo
    317:319:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    365:371:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback) -> setMenu
    360:361:void setMenuPrepared() -> setMenuPrepared
    620:622:void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    626:627:void setNavigationContentDescription(int) -> setNavigationContentDescription
    593:595:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    273:277:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    255:257:void setTitle(java.lang.CharSequence) -> setTitle
    260:264:void setTitleInt(java.lang.CharSequence) -> setTitleInt
    661:662:void setVisibility(int) -> setVisibility
    237:238:void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    243:246:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    566:569:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
    350:350:boolean showOverflowMenu() -> showOverflowMenu
    630:637:void updateHomeAccessibility() -> updateHomeAccessibility
    611:616:void updateNavigationIcon() -> updateNavigationIcon
    322:331:void updateToolbarLogo() -> updateToolbarLogo
androidx.appcompat.widget.ToolbarWidgetWrapper$1 -> androidx.appcompat.widget.ToolbarWidgetWrapper$1:
    182:183:void <init>(androidx.appcompat.widget.ToolbarWidgetWrapper) -> <init>
    187:190:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ToolbarWidgetWrapper$2 -> androidx.appcompat.widget.ToolbarWidgetWrapper$2:
    569:570:void <init>(androidx.appcompat.widget.ToolbarWidgetWrapper,int) -> <init>
    586:587:void onAnimationCancel(android.view.View) -> onAnimationCancel
    579:582:void onAnimationEnd(android.view.View) -> onAnimationEnd
    574:575:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.widget.TooltipCompat -> androidx.appcompat.widget.TooltipCompat:
    41:46:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
androidx.appcompat.widget.TooltipCompatHandler -> androidx.appcompat.widget.TooltipCompatHandler:
    54:117:void <init>(android.view.View,java.lang.CharSequence) -> <init>
    224:225:void cancelPendingShow() -> cancelPendingShow
    250:252:void clearAnchorPos() -> clearAnchorPos
    192:207:void hide() -> hide
    129:149:boolean onHover(android.view.View,android.view.MotionEvent) -> onHover
    121:124:boolean onLongClick(android.view.View) -> onLongClick
    155:155:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    159:160:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    220:221:void scheduleShow() -> scheduleShow
    210:217:void setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler) -> setPendingHandler
    93:106:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
    163:189:void show(boolean) -> show
    235:243:boolean updateAnchorPos(android.view.MotionEvent) -> updateAnchorPos
androidx.appcompat.widget.TooltipCompatHandler$1 -> androidx.appcompat.widget.TooltipCompatHandler$1:
    54:54:void <init>(androidx.appcompat.widget.TooltipCompatHandler) -> <init>
    57:58:void run() -> run
androidx.appcompat.widget.TooltipCompatHandler$2 -> androidx.appcompat.widget.TooltipCompatHandler$2:
    60:60:void <init>(androidx.appcompat.widget.TooltipCompatHandler) -> <init>
    63:64:void run() -> run
androidx.appcompat.widget.TooltipPopup -> androidx.appcompat.widget.TooltipPopup:
    54:74:void <init>(android.content.Context) -> <init>
    105:185:void computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams) -> computePosition
    188:208:android.view.View getAppRootView(android.view.View) -> getAppRootView
    91:97:void hide() -> hide
    100:100:boolean isShowing() -> isShowing
    78:88:void show(android.view.View,int,int,boolean,java.lang.CharSequence) -> show
androidx.appcompat.widget.VectorEnabledTintResources -> androidx.appcompat.widget.VectorEnabledTintResources:
    39:39:void <clinit>() -> <clinit>
    56:58:void <init>(android.content.Context,android.content.res.Resources) -> <init>
    68:72:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    96:96:boolean isCompatVectorFromResourcesEnabled() -> isCompatVectorFromResourcesEnabled
    42:42:boolean shouldBeUsed() -> shouldBeUsed
    78:78:android.graphics.drawable.Drawable superGetDrawable(int) -> superGetDrawable
androidx.appcompat.widget.ViewStubCompat -> androidx.appcompat.widget.ViewStubCompat:
    55:56:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    46:72:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    161:161:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    157:157:void draw(android.graphics.Canvas) -> draw
    85:85:int getInflatedId() -> getInflatedId
    146:146:android.view.LayoutInflater getLayoutInflater() -> getLayoutInflater
    115:115:int getLayoutResource() -> getLayoutResource
    198:237:android.view.View inflate() -> inflate
    151:152:void onMeasure(int,int) -> onMeasure
    99:100:void setInflatedId(int) -> setInflatedId
    139:140:void setLayoutInflater(android.view.LayoutInflater) -> setLayoutInflater
    131:132:void setLayoutResource(int) -> setLayoutResource
    250:251:void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener) -> setOnInflateListener
    175:188:void setVisibility(int) -> setVisibility
androidx.appcompat.widget.ViewUtils -> androidx.appcompat.widget.ViewUtils:
    42:53:void <clinit>() -> <clinit>
    66:73:void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect) -> computeFitSystemWindows
    58:58:boolean isLayoutRtl(android.view.View) -> isLayoutRtl
    80:97:void makeOptionalFitsSystemWindows(android.view.View) -> makeOptionalFitsSystemWindows
androidx.arch.core.executor.ArchTaskExecutor -> androidx.arch.core.executor.ArchTaskExecutor:
    42:50:void <clinit>() -> <clinit>
    57:60:void <init>() -> <init>
    96:97:void executeOnDiskIO(java.lang.Runnable) -> executeOnDiskIO
    69:77:androidx.arch.core.executor.ArchTaskExecutor getInstance() -> getInstance
    116:116:boolean isMainThread() -> isMainThread
    101:102:void postToMainThread(java.lang.Runnable) -> postToMainThread
androidx.arch.core.executor.ArchTaskExecutor$1 -> androidx.arch.core.executor.ArchTaskExecutor$1:
    42:42:void <init>() -> <init>
    45:46:void execute(java.lang.Runnable) -> execute
androidx.arch.core.executor.ArchTaskExecutor$2 -> androidx.arch.core.executor.ArchTaskExecutor$2:
    50:50:void <init>() -> <init>
    53:54:void execute(java.lang.Runnable) -> execute
androidx.arch.core.executor.DefaultTaskExecutor -> androidx.arch.core.executor.DefaultTaskExecutor:
    34:38:void <init>() -> <init>
    56:57:void executeOnDiskIO(java.lang.Runnable) -> executeOnDiskIO
    74:74:boolean isMainThread() -> isMainThread
    61:70:void postToMainThread(java.lang.Runnable) -> postToMainThread
androidx.arch.core.executor.DefaultTaskExecutor$1 -> androidx.arch.core.executor.DefaultTaskExecutor$1:
    38:41:void <init>(androidx.arch.core.executor.DefaultTaskExecutor) -> <init>
    45:47:java.lang.Thread newThread(java.lang.Runnable) -> newThread
androidx.arch.core.executor.TaskExecutor -> androidx.arch.core.executor.TaskExecutor:
    31:31:void <init>() -> <init>
androidx.arch.core.internal.FastSafeIterableMap -> androidx.arch.core.internal.FastSafeIterableMap:
    35:37:void <init>() -> <init>
    75:78:java.util.Map$Entry ceil(java.lang.Object) -> ceil
    66:66:boolean contains(java.lang.Object) -> contains
    41:41:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> get
    46:51:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    56:58:java.lang.Object remove(java.lang.Object) -> remove
androidx.arch.core.internal.SafeIterableMap -> androidx.arch.core.internal.SafeIterableMap:
    35:43:void <init>() -> <init>
    150:152:java.util.Iterator descendingIterator() -> descendingIterator
    169:169:java.util.Map$Entry eldest() -> eldest
    181:201:boolean equals(java.lang.Object) -> equals
    46:53:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> get
    206:211:int hashCode() -> hashCode
    140:142:java.util.Iterator iterator() -> iterator
    160:162:androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions() -> iteratorWithAdditions
    176:176:java.util.Map$Entry newest() -> newest
    75:86:androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object) -> put
    66:71:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    98:123:java.lang.Object remove(java.lang.Object) -> remove
    130:130:int size() -> size
    216:226:java.lang.String toString() -> toString
androidx.arch.core.internal.SafeIterableMap$AscendingIterator -> androidx.arch.core.internal.SafeIterableMap$AscendingIterator:
    283:284:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    293:293:androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> backward
    288:288:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> forward
androidx.arch.core.internal.SafeIterableMap$DescendingIterator -> androidx.arch.core.internal.SafeIterableMap$DescendingIterator:
    300:301:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    310:310:androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> backward
    305:305:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> forward
androidx.arch.core.internal.SafeIterableMap$Entry -> androidx.arch.core.internal.SafeIterableMap$Entry:
    362:365:void <init>(java.lang.Object,java.lang.Object) -> <init>
    392:399:boolean equals(java.lang.Object) -> equals
    370:370:java.lang.Object getKey() -> getKey
    376:376:java.lang.Object getValue() -> getValue
    404:404:int hashCode() -> hashCode
    381:381:java.lang.Object setValue(java.lang.Object) -> setValue
    386:386:java.lang.String toString() -> toString
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions -> androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions:
    316:319:void <init>(androidx.arch.core.internal.SafeIterableMap) -> <init>
    332:335:boolean hasNext() -> hasNext
    314:314:java.lang.Object next() -> next
    340:346:java.util.Map$Entry next() -> next
    324:328:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> supportRemove
androidx.arch.core.internal.SafeIterableMap$ListIterator -> androidx.arch.core.internal.SafeIterableMap$ListIterator:
    234:237:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    241:241:boolean hasNext() -> hasNext
    229:229:java.lang.Object next() -> next
    271:273:java.util.Map$Entry next() -> next
    263:266:androidx.arch.core.internal.SafeIterableMap$Entry nextNode() -> nextNode
    247:259:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> supportRemove
androidx.cardview.widget.CardView -> androidx.cardview.widget.CardView:
    81:93:void <clinit>() -> <clinit>
    117:118:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    108:447:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    79:79:void access$001(androidx.cardview.widget.CardView,int,int,int,int) -> access$001
    303:303:android.content.res.ColorStateList getCardBackgroundColor() -> getCardBackgroundColor
    387:387:float getCardElevation() -> getCardElevation
    343:343:int getContentPaddingBottom() -> getContentPaddingBottom
    313:313:int getContentPaddingLeft() -> getContentPaddingLeft
    323:323:int getContentPaddingRight() -> getContentPaddingRight
    333:333:int getContentPaddingTop() -> getContentPaddingTop
    413:413:float getMaxCardElevation() -> getMaxCardElevation
    424:424:boolean getPreventCornerOverlap() -> getPreventCornerOverlap
    364:364:float getRadius() -> getRadius
    183:183:boolean getUseCompatPadding() -> getUseCompatPadding
    232:262:void onMeasure(int,int) -> onMeasure
    283:284:void setCardBackgroundColor(int) -> setCardBackgroundColor
    293:294:void setCardBackgroundColor(android.content.res.ColorStateList) -> setCardBackgroundColor
    376:377:void setCardElevation(float) -> setCardElevation
    402:403:void setMaxCardElevation(float) -> setMaxCardElevation
    272:274:void setMinimumHeight(int) -> setMinimumHeight
    266:268:void setMinimumWidth(int) -> setMinimumWidth
    169:169:void setPadding(int,int,int,int) -> setPadding
    174:174:void setPaddingRelative(int,int,int,int) -> setPaddingRelative
    441:445:void setPreventCornerOverlap(boolean) -> setPreventCornerOverlap
    354:355:void setRadius(float) -> setRadius
    203:207:void setUseCompatPadding(boolean) -> setUseCompatPadding
androidx.cardview.widget.CardView$1 -> androidx.cardview.widget.CardView$1:
    447:447:void <init>(androidx.cardview.widget.CardView) -> <init>
    485:485:android.graphics.drawable.Drawable getCardBackground() -> getCardBackground
    490:490:android.view.View getCardView() -> getCardView
    463:463:boolean getPreventCornerOverlap() -> getPreventCornerOverlap
    458:458:boolean getUseCompatPadding() -> getUseCompatPadding
    452:454:void setCardBackground(android.graphics.drawable.Drawable) -> setCardBackground
    468:471:void setShadowPadding(int,int,int,int) -> setShadowPadding
androidx.cardview.widget.CardViewApi21Impl -> androidx.cardview.widget.CardViewApi21Impl:
    26:26:void <init>() -> <init>
    118:118:android.content.res.ColorStateList getBackgroundColor(androidx.cardview.widget.CardViewDelegate) -> getBackgroundColor
    122:122:androidx.cardview.widget.RoundRectDrawable getCardBackground(androidx.cardview.widget.CardViewDelegate) -> getCardBackground
    83:83:float getElevation(androidx.cardview.widget.CardViewDelegate) -> getElevation
    58:58:float getMaxElevation(androidx.cardview.widget.CardViewDelegate) -> getMaxElevation
    68:68:float getMinHeight(androidx.cardview.widget.CardViewDelegate) -> getMinHeight
    63:63:float getMinWidth(androidx.cardview.widget.CardViewDelegate) -> getMinWidth
    73:73:float getRadius(androidx.cardview.widget.CardViewDelegate) -> getRadius
    47:47:void initStatic() -> initStatic
    31:38:void initialize(androidx.cardview.widget.CardViewDelegate,android.content.Context,android.content.res.ColorStateList,float,float,float) -> initialize
    103:104:void onCompatPaddingChanged(androidx.cardview.widget.CardViewDelegate) -> onCompatPaddingChanged
    108:109:void onPreventCornerOverlapChanged(androidx.cardview.widget.CardViewDelegate) -> onPreventCornerOverlapChanged
    113:114:void setBackgroundColor(androidx.cardview.widget.CardViewDelegate,android.content.res.ColorStateList) -> setBackgroundColor
    78:79:void setElevation(androidx.cardview.widget.CardViewDelegate,float) -> setElevation
    51:54:void setMaxElevation(androidx.cardview.widget.CardViewDelegate,float) -> setMaxElevation
    42:43:void setRadius(androidx.cardview.widget.CardViewDelegate,float) -> setRadius
    88:99:void updatePadding(androidx.cardview.widget.CardViewDelegate) -> updatePadding
androidx.cardview.widget.RoundRectDrawable -> androidx.cardview.widget.RoundRectDrawable:
    47:62:void <init>(android.content.res.ColorStateList,float) -> <init>
    206:210:android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> createTintFilter
    87:102:void draw(android.graphics.Canvas) -> draw
    164:164:android.content.res.ColorStateList getColor() -> getColor
    151:151:int getOpacity() -> getOpacity
    127:128:void getOutline(android.graphics.Outline) -> getOutline
    82:82:float getPadding() -> getPadding
    155:155:float getRadius() -> getRadius
    197:198:boolean isStateful() -> isStateful
    121:123:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    183:192:boolean onStateChange(int[]) -> onStateChange
    141:142:void setAlpha(int) -> setAlpha
    65:67:void setBackground(android.content.res.ColorStateList) -> setBackground
    159:161:void setColor(android.content.res.ColorStateList) -> setColor
    146:147:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    70:79:void setPadding(float,boolean,boolean) -> setPadding
    131:137:void setRadius(float) -> setRadius
    169:172:void setTintList(android.content.res.ColorStateList) -> setTintList
    176:179:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    105:117:void updateBounds(android.graphics.Rect) -> updateBounds
androidx.cardview.widget.RoundRectDrawableWithShadow -> androidx.cardview.widget.RoundRectDrawableWithShadow:
    41:41:void <clinit>() -> <clinit>
    189:192:float calculateHorizontalPadding(float,float,boolean) -> calculateHorizontalPadding
    180:183:float calculateVerticalPadding(float,float,boolean) -> calculateVerticalPadding
androidx.collection.ArrayMap -> androidx.collection.ArrayMap:
    57:58:void <init>() -> <init>
    71:72:void <init>(androidx.collection.SimpleArrayMap) -> <init>
    182:182:java.util.Set entrySet() -> entrySet
    75:123:androidx.collection.MapCollections getCollection() -> getCollection
    194:194:java.util.Set keySet() -> keySet
    142:146:void putAll(java.util.Map) -> putAll
    164:164:boolean retainAll(java.util.Collection) -> retainAll
    206:206:java.util.Collection values() -> values
androidx.collection.ArrayMap$1 -> androidx.collection.ArrayMap$1:
    76:76:void <init>(androidx.collection.ArrayMap) -> <init>
    119:120:void colClear() -> colClear
    84:84:java.lang.Object colGetEntry(int,int) -> colGetEntry
    99:99:java.util.Map colGetMap() -> colGetMap
    79:79:int colGetSize() -> colGetSize
    89:89:int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    94:94:int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    104:105:void colPut(java.lang.Object,java.lang.Object) -> colPut
    114:115:void colRemoveAt(int) -> colRemoveAt
    109:109:java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
androidx.collection.ArraySet -> androidx.collection.ArraySet:
    50:51:void <clinit>() -> <clinit>
    240:241:void <init>() -> <init>
    247:255:void <init>(int) -> <init>
    359:402:boolean add(java.lang.Object) -> add
    719:724:boolean addAll(java.util.Collection) -> addAll
    160:196:void allocArrays(int) -> allocArrays
    282:288:void clear() -> clear
    315:315:boolean contains(java.lang.Object) -> contains
    705:710:boolean containsAll(java.util.Collection) -> containsAll
    295:305:void ensureCapacity(int) -> ensureCapacity
    559:582:boolean equals(java.lang.Object) -> equals
    200:233:void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    634:682:androidx.collection.MapCollections getCollection() -> getCollection
    590:595:int hashCode() -> hashCode
    83:117:int indexOf(java.lang.Object,int) -> indexOf
    325:325:int indexOf(java.lang.Object) -> indexOf
    121:155:int indexOfNull() -> indexOfNull
    343:343:boolean isEmpty() -> isEmpty
    694:694:java.util.Iterator iterator() -> iterator
    433:438:boolean remove(java.lang.Object) -> remove
    734:738:boolean removeAll(java.util.Collection) -> removeAll
    447:494:java.lang.Object removeAt(int) -> removeAt
    749:756:boolean retainAll(java.util.Collection) -> retainAll
    522:522:int size() -> size
    528:530:java.lang.Object[] toArray() -> toArray
    536:545:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    607:625:java.lang.String toString() -> toString
    335:335:java.lang.Object valueAt(int) -> valueAt
androidx.collection.ArraySet$1 -> androidx.collection.ArraySet$1:
    635:635:void <init>(androidx.collection.ArraySet) -> <init>
    678:679:void colClear() -> colClear
    643:643:java.lang.Object colGetEntry(int,int) -> colGetEntry
    658:658:java.util.Map colGetMap() -> colGetMap
    638:638:int colGetSize() -> colGetSize
    648:648:int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    653:653:int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    663:664:void colPut(java.lang.Object,java.lang.Object) -> colPut
    673:674:void colRemoveAt(int) -> colRemoveAt
    668:668:java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
androidx.collection.ContainerHelpers -> androidx.collection.ContainerHelpers:
    20:22:void <clinit>() -> <clinit>
    46:61:int binarySearch(int[],int,int) -> binarySearch
    65:80:int binarySearch(long[],int,long) -> binarySearch
    41:41:boolean equal(java.lang.Object,java.lang.Object) -> equal
    33:37:int idealByteArraySize(int) -> idealByteArraySize
    25:25:int idealIntArraySize(int) -> idealIntArraySize
    29:29:int idealLongArraySize(int) -> idealLongArraySize
androidx.collection.LongSparseArray -> androidx.collection.LongSparseArray:
    51:51:void <clinit>() -> <clinit>
    62:63:void <init>() -> <init>
    52:81:void <init>(int) -> <init>
    440:449:void clear() -> clear
    50:50:java.lang.Object clone() -> clone
    88:94:androidx.collection.LongSparseArray clone() -> clone
    217:240:void gc() -> gc
    109:109:java.lang.Object get(long) -> get
    118:123:java.lang.Object get(long,java.lang.Object) -> get
    399:403:int indexOfKey(long) -> indexOfKey
    353:357:long keyAt(int) -> keyAt
    248:292:void put(long,java.lang.Object) -> put
    139:147:void remove(long) -> remove
    171:175:void removeAt(int) -> removeAt
    327:331:int size() -> size
    494:515:java.lang.String toString() -> toString
    373:377:java.lang.Object valueAt(int) -> valueAt
androidx.collection.LruCache -> androidx.collection.LruCache:
    51:57:void <init>(int) -> <init>
    255:255:java.lang.Object create(java.lang.Object) -> create
    236:236:void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    83:126:java.lang.Object get(java.lang.Object) -> get
    138:157:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    259:263:int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    274:274:int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    347:351:java.lang.String toString() -> toString
    171:191:void trimToSize(int) -> trimToSize
androidx.collection.MapCollections -> androidx.collection.MapCollections:
    32:32:void <init>() -> <init>
    459:465:boolean containsAllHelper(java.util.Map,java.util.Collection) -> containsAllHelper
    515:529:boolean equalsSetHelper(java.util.Set,java.lang.Object) -> equalsSetHelper
    533:536:java.util.Set getEntrySet() -> getEntrySet
    540:543:java.util.Set getKeySet() -> getKeySet
    547:550:java.util.Collection getValues() -> getValues
    469:474:boolean removeAllHelper(java.util.Map,java.util.Collection) -> removeAllHelper
    478:485:boolean retainAllHelper(java.util.Map,java.util.Collection) -> retainAllHelper
    490:495:java.lang.Object[] toArrayHelper(int) -> toArrayHelper
    499:511:java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> toArrayHelper
androidx.collection.MapCollections$ArrayIterator -> androidx.collection.MapCollections$ArrayIterator:
    41:46:void <init>(androidx.collection.MapCollections,int) -> <init>
    50:50:boolean hasNext() -> hasNext
    55:59:java.lang.Object next() -> next
    64:71:void remove() -> remove
androidx.collection.MapCollections$EntrySet -> androidx.collection.MapCollections$EntrySet:
    167:167:void <init>(androidx.collection.MapCollections) -> <init>
    167:167:boolean add(java.lang.Object) -> add
    170:170:boolean add(java.util.Map$Entry) -> add
    175:179:boolean addAll(java.util.Collection) -> addAll
    184:185:void clear() -> clear
    189:197:boolean contains(java.lang.Object) -> contains
    202:208:boolean containsAll(java.util.Collection) -> containsAll
    253:253:boolean equals(java.lang.Object) -> equals
    258:265:int hashCode() -> hashCode
    213:213:boolean isEmpty() -> isEmpty
    218:218:java.util.Iterator iterator() -> iterator
    223:223:boolean remove(java.lang.Object) -> remove
    228:228:boolean removeAll(java.util.Collection) -> removeAll
    233:233:boolean retainAll(java.util.Collection) -> retainAll
    238:238:int size() -> size
    243:243:java.lang.Object[] toArray() -> toArray
    248:248:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.MapCollections$KeySet -> androidx.collection.MapCollections$KeySet:
    269:269:void <init>(androidx.collection.MapCollections) -> <init>
    273:273:boolean add(java.lang.Object) -> add
    278:278:boolean addAll(java.util.Collection) -> addAll
    283:284:void clear() -> clear
    288:288:boolean contains(java.lang.Object) -> contains
    293:293:boolean containsAll(java.util.Collection) -> containsAll
    343:343:boolean equals(java.lang.Object) -> equals
    348:353:int hashCode() -> hashCode
    298:298:boolean isEmpty() -> isEmpty
    303:303:java.util.Iterator iterator() -> iterator
    308:313:boolean remove(java.lang.Object) -> remove
    318:318:boolean removeAll(java.util.Collection) -> removeAll
    323:323:boolean retainAll(java.util.Collection) -> retainAll
    328:328:int size() -> size
    333:333:java.lang.Object[] toArray() -> toArray
    338:338:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.MapCollections$MapIterator -> androidx.collection.MapCollections$MapIterator:
    77:82:void <init>(androidx.collection.MapCollections) -> <init>
    137:146:boolean equals(java.lang.Object) -> equals
    110:114:java.lang.Object getKey() -> getKey
    119:123:java.lang.Object getValue() -> getValue
    86:86:boolean hasNext() -> hasNext
    151:158:int hashCode() -> hashCode
    74:74:java.lang.Object next() -> next
    91:94:java.util.Map$Entry next() -> next
    99:106:void remove() -> remove
    128:132:java.lang.Object setValue(java.lang.Object) -> setValue
    163:163:java.lang.String toString() -> toString
androidx.collection.MapCollections$ValuesCollection -> androidx.collection.MapCollections$ValuesCollection:
    357:357:void <init>(androidx.collection.MapCollections) -> <init>
    361:361:boolean add(java.lang.Object) -> add
    366:366:boolean addAll(java.util.Collection) -> addAll
    371:372:void clear() -> clear
    376:376:boolean contains(java.lang.Object) -> contains
    381:387:boolean containsAll(java.util.Collection) -> containsAll
    392:392:boolean isEmpty() -> isEmpty
    397:397:java.util.Iterator iterator() -> iterator
    402:407:boolean remove(java.lang.Object) -> remove
    412:423:boolean removeAll(java.util.Collection) -> removeAll
    428:439:boolean retainAll(java.util.Collection) -> retainAll
    444:444:int size() -> size
    449:449:java.lang.Object[] toArray() -> toArray
    454:454:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.SimpleArrayMap -> androidx.collection.SimpleArrayMap:
    236:240:void <init>() -> <init>
    246:254:void <init>(int) -> <init>
    260:264:void <init>(androidx.collection.SimpleArrayMap) -> <init>
    165:197:void allocArrays(int) -> allocArrays
    77:80:int binarySearchHashes(int[],int,int) -> binarySearchHashes
    270:282:void clear() -> clear
    312:312:boolean containsKey(java.lang.Object) -> containsKey
    352:352:boolean containsValue(java.lang.Object) -> containsValue
    289:303:void ensureCapacity(int) -> ensureCapacity
    681:735:boolean equals(java.lang.Object) -> equals
    201:230:void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    369:369:java.lang.Object get(java.lang.Object) -> get
    380:381:java.lang.Object getOrDefault(java.lang.Object,java.lang.Object) -> getOrDefault
    743:750:int hashCode() -> hashCode
    88:122:int indexOf(java.lang.Object,int) -> indexOf
    322:322:int indexOfKey(java.lang.Object) -> indexOfKey
    126:160:int indexOfNull() -> indexOfNull
    326:341:int indexOfValue(java.lang.Object) -> indexOfValue
    419:419:boolean isEmpty() -> isEmpty
    390:390:java.lang.Object keyAt(int) -> keyAt
    432:490:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    498:511:void putAll(androidx.collection.SimpleArrayMap) -> putAll
    523:527:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    538:543:java.lang.Object remove(java.lang.Object) -> remove
    553:561:boolean remove(java.lang.Object,java.lang.Object) -> remove
    570:626:java.lang.Object removeAt(int) -> removeAt
    637:641:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    653:661:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    409:412:java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
    668:668:int size() -> size
    762:787:java.lang.String toString() -> toString
    399:399:java.lang.Object valueAt(int) -> valueAt
androidx.collection.SparseArrayCompat -> androidx.collection.SparseArrayCompat:
    51:51:void <clinit>() -> <clinit>
    62:63:void <init>() -> <init>
    52:81:void <init>(int) -> <init>
    460:487:void append(int,java.lang.Object) -> append
    444:453:void clear() -> clear
    50:50:java.lang.Object clone() -> clone
    88:94:androidx.collection.SparseArrayCompat clone() -> clone
    230:253:void gc() -> gc
    109:109:java.lang.Object get(int) -> get
    118:123:java.lang.Object get(int,java.lang.Object) -> get
    361:365:int keyAt(int) -> keyAt
    261:305:void put(int,java.lang.Object) -> put
    139:147:void remove(int) -> remove
    340:344:int size() -> size
    498:519:java.lang.String toString() -> toString
    375:379:java.lang.Object valueAt(int) -> valueAt
androidx.constraintlayout.motion.utils.Easing -> androidx.constraintlayout.motion.utils.Easing:
    29:40:void <clinit>() -> <clinit>
    28:30:void <init>() -> <init>
    73:73:java.lang.String toString() -> toString
androidx.constraintlayout.motion.widget.Debug -> androidx.constraintlayout.motion.widget.Debug:
    85:88:java.lang.String getName(android.view.View) -> getName
androidx.constraintlayout.solver.ArrayLinkedVariables -> androidx.constraintlayout.solver.ArrayLinkedVariables:
    82:82:void <clinit>() -> <clinit>
    43:109:void <init>(androidx.constraintlayout.solver.ArrayRow,androidx.constraintlayout.solver.Cache) -> <init>
    226:340:void add(androidx.constraintlayout.solver.SolverVariable,float,boolean) -> add
    409:423:void clear() -> clear
    432:443:boolean contains(androidx.constraintlayout.solver.SolverVariable) -> contains
    500:506:void divideByAmount(float) -> divideByAmount
    593:602:float get(androidx.constraintlayout.solver.SolverVariable) -> get
    509:509:int getCurrentSize() -> getCurrentSize
    558:566:androidx.constraintlayout.solver.SolverVariable getVariable(int) -> getVariable
    576:584:float getVariableValue(int) -> getVariableValue
    485:491:void invert() -> invert
    118:214:void put(androidx.constraintlayout.solver.SolverVariable,float) -> put
    369:402:float remove(androidx.constraintlayout.solver.SolverVariable,boolean) -> remove
    633:642:java.lang.String toString() -> toString
    349:358:float use(androidx.constraintlayout.solver.ArrayRow,boolean) -> use
androidx.constraintlayout.solver.ArrayRow -> androidx.constraintlayout.solver.ArrayRow:
    26:55:void <init>() -> <init>
    26:60:void <init>(androidx.constraintlayout.solver.Cache) -> <init>
    349:351:androidx.constraintlayout.solver.ArrayRow addError(androidx.constraintlayout.solver.LinearSystem,int) -> addError
    690:703:void addError(androidx.constraintlayout.solver.SolverVariable) -> addError
    178:179:androidx.constraintlayout.solver.ArrayRow addSingleError(androidx.constraintlayout.solver.SolverVariable,int) -> addSingleError
    431:442:boolean chooseSubject(androidx.constraintlayout.solver.LinearSystem) -> chooseSubject
    457:504:androidx.constraintlayout.solver.SolverVariable chooseSubjectInVariables(androidx.constraintlayout.solver.LinearSystem) -> chooseSubjectInVariables
    665:668:void clear() -> clear
    303:345:androidx.constraintlayout.solver.ArrayRow createRowCentering(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,float,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int) -> createRowCentering
    139:143:androidx.constraintlayout.solver.ArrayRow createRowDefinition(androidx.constraintlayout.solver.SolverVariable,int) -> createRowDefinition
    356:358:androidx.constraintlayout.solver.ArrayRow createRowDimensionPercent(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float) -> createRowDimensionPercent
    375:379:androidx.constraintlayout.solver.ArrayRow createRowDimensionRatio(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float) -> createRowDimensionRatio
    240:268:androidx.constraintlayout.solver.ArrayRow createRowEqualMatchDimensions(float,float,float,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable) -> createRowEqualMatchDimensions
    147:154:androidx.constraintlayout.solver.ArrayRow createRowEquals(androidx.constraintlayout.solver.SolverVariable,int) -> createRowEquals
    158:174:androidx.constraintlayout.solver.ArrayRow createRowEquals(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int) -> createRowEquals
    185:203:androidx.constraintlayout.solver.ArrayRow createRowGreaterThan(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int) -> createRowGreaterThan
    214:232:androidx.constraintlayout.solver.ArrayRow createRowLowerThan(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int) -> createRowLowerThan
    393:398:androidx.constraintlayout.solver.ArrayRow createRowWithAngle(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float) -> createRowWithAngle
    415:420:void ensurePositiveConstant() -> ensurePositiveConstant
    707:707:androidx.constraintlayout.solver.SolverVariable getKey() -> getKey
    660:660:androidx.constraintlayout.solver.SolverVariable getPivotCandidate(androidx.constraintlayout.solver.LinearSystem,boolean[]) -> getPivotCandidate
    63:63:boolean hasKeyVariable() -> hasKeyVariable
    135:135:boolean hasVariable(androidx.constraintlayout.solver.SolverVariable) -> hasVariable
    676:686:void initFromRow(androidx.constraintlayout.solver.LinearSystem$Row) -> initFromRow
    556:556:boolean isEmpty() -> isEmpty
    532:532:boolean isNew(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.LinearSystem) -> isNew
    655:655:androidx.constraintlayout.solver.SolverVariable pickPivot(androidx.constraintlayout.solver.SolverVariable) -> pickPivot
    610:649:androidx.constraintlayout.solver.SolverVariable pickPivotInVariables(boolean[],androidx.constraintlayout.solver.SolverVariable) -> pickPivotInVariables
    536:550:void pivot(androidx.constraintlayout.solver.SolverVariable) -> pivot
    128:132:void reset() -> reset
    75:124:java.lang.String toReadableString() -> toReadableString
    71:71:java.lang.String toString() -> toString
    575:589:void updateFromFinalVariable(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,boolean) -> updateFromFinalVariable
    561:572:void updateFromRow(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.ArrayRow,boolean) -> updateFromRow
    592:607:void updateFromSynonymVariable(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,boolean) -> updateFromSynonymVariable
    712:747:void updateFromSystem(androidx.constraintlayout.solver.LinearSystem) -> updateFromSystem
androidx.constraintlayout.solver.Cache -> androidx.constraintlayout.solver.Cache:
    21:25:void <init>() -> <init>
androidx.constraintlayout.solver.LinearSystem -> androidx.constraintlayout.solver.LinearSystem:
    37:250:void <clinit>() -> <clinit>
    48:104:void <init>() -> <init>
    370:383:androidx.constraintlayout.solver.SolverVariable acquireSolverVariable(androidx.constraintlayout.solver.SolverVariable$Type,java.lang.String) -> acquireSolverVariable
    1445:1463:void addCenterPoint(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintWidget,float,int) -> addCenterPoint
    1288:1294:void addCentering(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,float,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int) -> addCentering
    553:636:void addConstraint(androidx.constraintlayout.solver.ArrayRow) -> addConstraint
    1336:1368:androidx.constraintlayout.solver.ArrayRow addEquality(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int) -> addEquality
    1377:1413:void addEquality(androidx.constraintlayout.solver.SolverVariable,int) -> addEquality
    1229:1234:void addGreaterBarrier(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,boolean) -> addGreaterBarrier
    1214:1223:void addGreaterThan(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int) -> addGreaterThan
    1262:1267:void addLowerBarrier(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,boolean) -> addLowerBarrier
    1247:1256:void addLowerThan(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int) -> addLowerThan
    1300:1306:void addRatio(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float,int) -> addRatio
    639:684:void addRow(androidx.constraintlayout.solver.ArrayRow) -> addRow
    314:325:void addSingleError(androidx.constraintlayout.solver.ArrayRow,int,int) -> addSingleError
    1036:1040:void computeValues() -> computeValues
    348:361:androidx.constraintlayout.solver.SolverVariable createErrorVariable(int,java.lang.String) -> createErrorVariable
    291:302:androidx.constraintlayout.solver.SolverVariable createExtraVariable() -> createExtraVariable
    220:246:androidx.constraintlayout.solver.SolverVariable createObjectVariable(java.lang.Object) -> createObjectVariable
    254:272:androidx.constraintlayout.solver.ArrayRow createRow() -> createRow
    1430:1431:androidx.constraintlayout.solver.ArrayRow createRowDimensionPercent(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float) -> createRowDimensionPercent
    276:287:androidx.constraintlayout.solver.SolverVariable createSlackVariable() -> createSlackVariable
    866:1032:int enforceBFS(androidx.constraintlayout.solver.LinearSystem$Row) -> enforceBFS
    1171:1171:androidx.constraintlayout.solver.Cache getCache() -> getCache
    111:111:androidx.constraintlayout.solver.Metrics getMetrics() -> getMetrics
    409:419:int getObjectVariableValue(java.lang.Object) -> getObjectVariableValue
    140:151:void increaseTableSize() -> increaseTableSize
    448:487:void minimize() -> minimize
    494:520:void minimizeGoal(androidx.constraintlayout.solver.LinearSystem$Row) -> minimizeGoal
    716:857:int optimize(androidx.constraintlayout.solver.LinearSystem$Row,boolean) -> optimize
    157:174:void releaseRows() -> releaseRows
    185:213:void reset() -> reset
androidx.constraintlayout.solver.LinearSystem$ValuesRow -> androidx.constraintlayout.solver.LinearSystem$ValuesRow:
    89:91:void <init>(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.Cache) -> <init>
androidx.constraintlayout.solver.Pools$SimplePool -> androidx.constraintlayout.solver.Pools$SimplePool:
    96:101:void <init>(int) -> <init>
    106:113:java.lang.Object acquire() -> acquire
    123:128:boolean release(java.lang.Object) -> release
    133:148:void releaseAll(java.lang.Object[],int) -> releaseAll
androidx.constraintlayout.solver.PriorityGoalRow -> androidx.constraintlayout.solver.PriorityGoalRow:
    29:162:void <init>(androidx.constraintlayout.solver.Cache) -> <init>
    25:25:void access$000(androidx.constraintlayout.solver.PriorityGoalRow,androidx.constraintlayout.solver.SolverVariable) -> access$000
    196:200:void addError(androidx.constraintlayout.solver.SolverVariable) -> addError
    203:227:void addToGoal(androidx.constraintlayout.solver.SolverVariable) -> addToGoal
    153:155:void clear() -> clear
    173:191:androidx.constraintlayout.solver.SolverVariable getPivotCandidate(androidx.constraintlayout.solver.LinearSystem,boolean[]) -> getPivotCandidate
    166:166:boolean isEmpty() -> isEmpty
    230:240:void removeGoal(androidx.constraintlayout.solver.SolverVariable) -> removeGoal
    265:272:java.lang.String toString() -> toString
    244:261:void updateFromRow(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.ArrayRow,boolean) -> updateFromRow
androidx.constraintlayout.solver.PriorityGoalRow$1 -> androidx.constraintlayout.solver.PriorityGoalRow$1:
    214:214:void <init>(androidx.constraintlayout.solver.PriorityGoalRow) -> <init>
    214:214:int compare(java.lang.Object,java.lang.Object) -> compare
    217:217:int compare(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable) -> compare
androidx.constraintlayout.solver.PriorityGoalRow$GoalVariableAccessor -> androidx.constraintlayout.solver.PriorityGoalRow$GoalVariableAccessor:
    39:41:void <init>(androidx.constraintlayout.solver.PriorityGoalRow,androidx.constraintlayout.solver.PriorityGoalRow) -> <init>
    48:77:boolean addToGoal(androidx.constraintlayout.solver.SolverVariable,float) -> addToGoal
    130:131:int compareTo(java.lang.Object) -> compareTo
    44:45:void init(androidx.constraintlayout.solver.SolverVariable) -> init
    91:100:boolean isNegative() -> isNegative
    104:116:boolean isSmallerThan(androidx.constraintlayout.solver.SolverVariable) -> isSmallerThan
    135:136:void reset() -> reset
    139:146:java.lang.String toString() -> toString
androidx.constraintlayout.solver.SolverVariable -> androidx.constraintlayout.solver.SolverVariable:
    44:48:void <clinit>() -> <clinit>
    53:172:void <init>(androidx.constraintlayout.solver.SolverVariable$Type,java.lang.String) -> <init>
    178:189:void addToRow(androidx.constraintlayout.solver.ArrayRow) -> addToRow
    99:100:void increaseErrorId() -> increaseErrorId
    195:206:void removeFromRow(androidx.constraintlayout.solver.ArrayRow) -> removeFromRow
    257:279:void reset() -> reset
    227:238:void setFinalValue(androidx.constraintlayout.solver.LinearSystem,float) -> setFinalValue
    292:296:void setType(androidx.constraintlayout.solver.SolverVariable$Type,java.lang.String) -> setType
    303:319:java.lang.String toString() -> toString
    215:221:void updateReferencesWithNewDefinition(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.ArrayRow) -> updateReferencesWithNewDefinition
androidx.constraintlayout.solver.SolverVariable$Type -> androidx.constraintlayout.solver.SolverVariable$Type:
    75:95:void <clinit>() -> <clinit>
    75:75:void <init>(java.lang.String,int) -> <init>
    75:75:androidx.constraintlayout.solver.SolverVariable$Type valueOf(java.lang.String) -> valueOf
    75:75:androidx.constraintlayout.solver.SolverVariable$Type[] values() -> values
androidx.constraintlayout.solver.SolverVariableValues -> androidx.constraintlayout.solver.SolverVariableValues:
    28:28:void <clinit>() -> <clinit>
    29:50:void <init>(androidx.constraintlayout.solver.ArrayRow,androidx.constraintlayout.solver.Cache) -> <init>
    410:423:void add(androidx.constraintlayout.solver.SolverVariable,float,boolean) -> add
    216:236:void addToHashMap(androidx.constraintlayout.solver.SolverVariable,int) -> addToHashMap
    289:296:void addVariable(int,androidx.constraintlayout.solver.SolverVariable,float) -> addVariable
    180:196:void clear() -> clear
    94:94:boolean contains(androidx.constraintlayout.solver.SolverVariable) -> contains
    481:490:void divideByAmount(float) -> divideByAmount
    299:304:int findEmptySlot() -> findEmptySlot
    125:129:float get(androidx.constraintlayout.solver.SolverVariable) -> get
    54:54:int getCurrentSize() -> getCurrentSize
    59:73:androidx.constraintlayout.solver.SolverVariable getVariable(int) -> getVariable
    78:89:float getVariableValue(int) -> getVariableValue
    199:210:void increaseSize() -> increaseSize
    99:120:int indexOf(androidx.constraintlayout.solver.SolverVariable) -> indexOf
    308:327:void insertVariable(int,androidx.constraintlayout.solver.SolverVariable,float) -> insertVariable
    468:477:void invert() -> invert
    334:369:void put(androidx.constraintlayout.solver.SolverVariable,float) -> put
    381:402:float remove(androidx.constraintlayout.solver.SolverVariable,boolean) -> remove
    260:286:void removeFromHashMap(androidx.constraintlayout.solver.SolverVariable) -> removeFromHashMap
    148:172:java.lang.String toString() -> toString
    427:463:float use(androidx.constraintlayout.solver.ArrayRow,boolean) -> use
androidx.constraintlayout.solver.widgets.Barrier -> androidx.constraintlayout.solver.widgets.Barrier:
    36:42:void <init>() -> <init>
    119:227:void addToSolver(androidx.constraintlayout.solver.LinearSystem,boolean) -> addToSolver
    253:309:boolean allSolved() -> allSolved
    49:49:boolean allowedInBarrier() -> allowedInBarrier
    60:60:boolean allowsGoneWidget() -> allowsGoneWidget
    52:52:int getBarrierType() -> getBarrierType
    234:234:int getMargin() -> getMargin
    238:246:int getOrientation() -> getOrientation
    63:63:boolean isResolvedHorizontally() -> isResolvedHorizontally
    67:67:boolean isResolvedVertically() -> isResolvedVertically
    94:102:void markWidgets() -> markWidgets
    58:58:void setAllowsGoneWidget(boolean) -> setAllowsGoneWidget
    55:56:void setBarrierType(int) -> setBarrierType
    230:231:void setMargin(int) -> setMargin
    81:90:java.lang.String toString() -> toString
androidx.constraintlayout.solver.widgets.Chain -> androidx.constraintlayout.solver.widgets.Chain:
    47:69:void applyChainConstraints(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.LinearSystem,java.util.ArrayList,int) -> applyChainConstraints
    83:459:void applyChainConstraints(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.LinearSystem,int,int,androidx.constraintlayout.solver.widgets.ChainHead) -> applyChainConstraints
androidx.constraintlayout.solver.widgets.ChainHead -> androidx.constraintlayout.solver.widgets.ChainHead:
    42:67:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget,int,boolean) -> <init>
    234:238:void define() -> define
    84:199:void defineChainProperties() -> defineChainProperties
    77:77:boolean isMatchConstraintEqualityCandidate(androidx.constraintlayout.solver.widgets.ConstraintWidget,int) -> isMatchConstraintEqualityCandidate
androidx.constraintlayout.solver.widgets.ConstraintAnchor -> androidx.constraintlayout.solver.widgets.ConstraintAnchor:
    36:134:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type) -> <init>
    215:235:boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,int,boolean) -> connect
    41:46:void findDependents(int,java.util.ArrayList,androidx.constraintlayout.solver.widgets.analyzer.WidgetGroup) -> findDependents
    48:48:java.util.HashSet getDependents() -> getDependents
    75:78:int getFinalValue() -> getFinalValue
    170:177:int getMargin() -> getMargin
    489:509:androidx.constraintlayout.solver.widgets.ConstraintAnchor getOpposite() -> getOpposite
    157:157:androidx.constraintlayout.solver.widgets.ConstraintWidget getOwner() -> getOwner
    140:140:androidx.constraintlayout.solver.SolverVariable getSolverVariable() -> getSolverVariable
    184:184:androidx.constraintlayout.solver.widgets.ConstraintAnchor getTarget() -> getTarget
    163:163:androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type getType() -> getType
    57:66:boolean hasCenteredDependents() -> hasCenteredDependents
    50:53:boolean hasDependents() -> hasDependents
    86:86:boolean hasFinalValue() -> hasFinalValue
    254:254:boolean isConnected() -> isConnected
    263:302:boolean isValidConnection(androidx.constraintlayout.solver.widgets.ConstraintAnchor) -> isValidConnection
    190:202:void reset() -> reset
    82:84:void resetFinalResolution() -> resetFinalResolution
    146:151:void resetSolverVariable(androidx.constraintlayout.solver.Cache) -> resetSolverVariable
    70:72:void setFinalValue(int) -> setFinalValue
    409:409:java.lang.String toString() -> toString
androidx.constraintlayout.solver.widgets.ConstraintAnchor$1 -> androidx.constraintlayout.solver.widgets.ConstraintAnchor$1:
    274:274:void <clinit>() -> <clinit>
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type -> androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type:
    91:91:void <clinit>() -> <clinit>
    91:91:void <init>(java.lang.String,int) -> <init>
    91:91:androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type valueOf(java.lang.String) -> valueOf
    91:91:androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type[] values() -> values
androidx.constraintlayout.solver.widgets.ConstraintWidget -> androidx.constraintlayout.solver.widgets.ConstraintWidget:
    391:391:void <clinit>() -> <clinit>
    61:525:void <init>() -> <init>
    595:603:void addAnchors() -> addAnchors
    3245:3287:void addChildrenToSolverByDependency(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.LinearSystem,java.util.HashSet,int,boolean) -> addChildrenToSolverByDependency
    2518:2518:boolean addFirst() -> addFirst
    2167:2511:void addToSolver(androidx.constraintlayout.solver.LinearSystem,boolean) -> addToSolver
    1601:1601:boolean allowedInBarrier() -> allowedInBarrier
    2614:3047:void applyConstraints(androidx.constraintlayout.solver.LinearSystem,boolean,boolean,boolean,boolean,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour,boolean,androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,int,int,int,float,boolean,boolean,boolean,boolean,boolean,int,int,int,int,float,boolean) -> applyConstraints
    676:679:void connectCircularConstraint(androidx.constraintlayout.solver.widgets.ConstraintWidget,float,int) -> connectCircularConstraint
    770:777:void createObjectVariables(androidx.constraintlayout.solver.LinearSystem) -> createObjectVariables
    564:570:void ensureWidgetRuns() -> ensureWidgetRuns
    1929:1957:androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type) -> getAnchor
    1055:1055:int getBaselineDistance() -> getBaselineDistance
    1031:1036:float getBiasPercent(int) -> getBiasPercent
    972:972:int getBottom() -> getBottom
    1065:1065:java.lang.Object getCompanionWidget() -> getCompanionWidget
    723:723:java.lang.String getDebugName() -> getDebugName
    1985:1990:androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getDimensionBehaviour(int) -> getDimensionBehaviour
    1302:1302:float getDimensionRatio() -> getDimensionRatio
    1311:1311:int getDimensionRatioSide() -> getDimensionRatioSide
    879:882:int getHeight() -> getHeight
    1010:1010:float getHorizontalBiasPercent() -> getHorizontalBiasPercent
    1574:1574:int getHorizontalChainStyle() -> getHorizontalChainStyle
    1966:1966:androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getHorizontalDimensionBehaviour() -> getHorizontalDimensionBehaviour
    979:986:int getHorizontalMargin() -> getHorizontalMargin
    321:321:int getLastHorizontalMeasureSpec() -> getLastHorizontalMeasureSpec
    322:322:int getLastVerticalMeasureSpec() -> getLastVerticalMeasureSpec
    892:897:int getLength(int) -> getLength
    256:256:int getMaxHeight() -> getMaxHeight
    260:260:int getMaxWidth() -> getMaxWidth
    936:936:int getMinHeight() -> getMinHeight
    927:927:int getMinWidth() -> getMinWidth
    2051:2060:androidx.constraintlayout.solver.widgets.ConstraintWidget getNextChainMember(int) -> getNextChainMember
    620:620:androidx.constraintlayout.solver.widgets.ConstraintWidget getParent() -> getParent
    2032:2041:androidx.constraintlayout.solver.widgets.ConstraintWidget getPreviousChainMember(int) -> getPreviousChainMember
    963:963:int getRight() -> getRight
    76:81:androidx.constraintlayout.solver.widgets.analyzer.WidgetRun getRun(int) -> getRun
    1020:1020:float getVerticalBiasPercent() -> getVerticalBiasPercent
    1594:1594:int getVerticalChainStyle() -> getVerticalChainStyle
    1975:1975:androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getVerticalDimensionBehaviour() -> getVerticalDimensionBehaviour
    993:1000:int getVerticalMargin() -> getVerticalMargin
    714:714:int getVisibility() -> getVisibility
    831:834:int getWidth() -> getWidth
    807:810:int getX() -> getX
    819:822:int getY() -> getY
    1046:1046:boolean hasBaseline() -> hasBaseline
    187:192:boolean hasDanglingDimension(int) -> hasDanglingDimension
    177:183:boolean hasDependencies() -> hasDependencies
    1619:1622:void immediateConnect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int,int) -> immediateConnect
    2142:2143:boolean isChainHead(int) -> isChainHead
    2018:2022:boolean isInHorizontalChain() -> isInHorizontalChain
    296:296:boolean isInPlaceholder() -> isInPlaceholder
    2099:2103:boolean isInVerticalChain() -> isInVerticalChain
    248:248:boolean isInVirtualLayout() -> isInVirtualLayout
    312:312:boolean isMeasureRequested() -> isMeasureRequested
    156:156:boolean isResolvedHorizontally() -> isResolvedHorizontally
    160:160:boolean isResolvedVertically() -> isResolvedVertically
    511:511:boolean oppositeDimensionsTied() -> oppositeDimensionsTied
    437:496:void reset() -> reset
    164:170:void resetFinalResolution() -> resetFinalResolution
    581:589:void resetSolverVariables(androidx.constraintlayout.solver.Cache) -> resetSolverVariables
    1500:1502:void setBaselineDistance(int) -> setBaselineDistance
    1511:1512:void setCompanionWidget(java.lang.Object) -> setCompanionWidget
    730:731:void setDebugName(java.lang.String) -> setDebugName
    1230:1284:void setDimensionRatio(java.lang.String) -> setDimensionRatio
    143:153:void setFinalBaseline(int) -> setFinalBaseline
    116:125:void setFinalHorizontal(int,int) -> setFinalHorizontal
    106:108:void setFinalLeft(int) -> setFinalLeft
    111:113:void setFinalTop(int) -> setFinalTop
    128:140:void setFinalVertical(int,int) -> setFinalVertical
    1386:1419:void setFrame(int,int,int,int) -> setFrame
    288:289:void setHasBaseline(boolean) -> setHasBaseline
    1168:1172:void setHeight(int) -> setHeight
    1321:1322:void setHorizontalBiasPercent(float) -> setHorizontalBiasPercent
    1564:1565:void setHorizontalChainStyle(int) -> setHorizontalChainStyle
    1443:1448:void setHorizontalDimension(int,int) -> setHorizontalDimension
    2000:2001:void setHorizontalDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour) -> setHorizontalDimensionBehaviour
    1197:1204:void setHorizontalMatchStyle(int,int,int,float) -> setHorizontalMatchStyle
    1545:1546:void setHorizontalWeight(float) -> setHorizontalWeight
    304:305:void setInBarrier(int,boolean) -> setInBarrier
    300:301:void setInPlaceholder(boolean) -> setInPlaceholder
    252:253:void setInVirtualLayout(boolean) -> setInVirtualLayout
    324:327:void setLastMeasureSpec(int,int) -> setLastMeasureSpec
    268:269:void setMaxHeight(int) -> setMaxHeight
    264:265:void setMaxWidth(int) -> setMaxWidth
    308:309:void setMeasureRequested(boolean) -> setMeasureRequested
    1353:1358:void setMinHeight(int) -> setMinHeight
    1340:1345:void setMinWidth(int) -> setMinWidth
    1102:1104:void setOrigin(int,int) -> setOrigin
    629:630:void setParent(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> setParent
    1331:1332:void setVerticalBiasPercent(float) -> setVerticalBiasPercent
    1584:1585:void setVerticalChainStyle(int) -> setVerticalChainStyle
    1457:1462:void setVerticalDimension(int,int) -> setVerticalDimension
    2009:2010:void setVerticalDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour) -> setVerticalDimensionBehaviour
    1215:1222:void setVerticalMatchStyle(int,int,int,float) -> setVerticalMatchStyle
    1554:1555:void setVerticalWeight(float) -> setVerticalWeight
    705:706:void setVisibility(int) -> setVisibility
    1156:1160:void setWidth(int) -> setWidth
    1083:1084:void setX(int) -> setX
    1092:1093:void setY(int) -> setY
    2531:2585:void setupDimensionRatio(boolean,boolean,boolean,boolean) -> setupDimensionRatio
    786:786:java.lang.String toString() -> toString
    3186:3242:void updateFromRuns(boolean,boolean) -> updateFromRuns
    3056:3086:void updateFromSolver(androidx.constraintlayout.solver.LinearSystem,boolean) -> updateFromSolver
androidx.constraintlayout.solver.widgets.ConstraintWidget$1 -> androidx.constraintlayout.solver.widgets.ConstraintWidget$1:
    1124:2643:void <clinit>() -> <clinit>
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour -> androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour:
    332:333:void <clinit>() -> <clinit>
    332:332:void <init>(java.lang.String,int) -> <init>
    332:332:androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour valueOf(java.lang.String) -> valueOf
    332:332:androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] values() -> values
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer -> androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer:
    597:597:void <clinit>() -> <clinit>
    48:480:void <init>() -> <init>
    1004:1010:void addChain(androidx.constraintlayout.solver.widgets.ConstraintWidget,int) -> addChain
    332:414:boolean addChildrenToSolver(androidx.constraintlayout.solver.LinearSystem) -> addChildrenToSolver
    1019:1025:void addHorizontalChain(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> addHorizontalChain
    301:305:void addHorizontalWrapMaxVariable(androidx.constraintlayout.solver.widgets.ConstraintAnchor) -> addHorizontalWrapMaxVariable
    287:291:void addHorizontalWrapMinVariable(androidx.constraintlayout.solver.widgets.ConstraintAnchor) -> addHorizontalWrapMinVariable
    314:317:void addMaxWrap(androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.SolverVariable) -> addMaxWrap
    308:311:void addMinWrap(androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.SolverVariable) -> addMinWrap
    1034:1040:void addVerticalChain(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> addVerticalChain
    294:298:void addVerticalWrapMaxVariable(androidx.constraintlayout.solver.widgets.ConstraintAnchor) -> addVerticalWrapMaxVariable
    280:284:void addVerticalWrapMinVariable(androidx.constraintlayout.solver.widgets.ConstraintAnchor) -> addVerticalWrapMinVariable
    72:72:boolean directMeasure(boolean) -> directMeasure
    91:91:boolean directMeasureSetup(boolean) -> directMeasureSetup
    95:95:boolean directMeasureWithOrientation(boolean,int) -> directMeasureWithOrientation
    135:135:androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measurer getMeasurer() -> getMeasurer
    224:224:int getOptimizationLevel() -> getOptimizationLevel
    982:982:androidx.constraintlayout.solver.LinearSystem getSystem() -> getSystem
    60:61:void invalidateGraph() -> invalidateGraph
    67:68:void invalidateMeasures() -> invalidateMeasures
    269:269:boolean isHeightMeasuredTooSmall() -> isHeightMeasuredTooSmall
    473:473:boolean isRtl() -> isRtl
    262:262:boolean isWidthMeasuredTooSmall() -> isWidthMeasuredTooSmall
    611:928:void layout() -> layout
    117:119:long measure(int,int,int,int,int,int,int,int,int) -> measure
    486:594:boolean measure(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measurer,androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measure,int) -> measure
    234:234:boolean optimizeFor(int) -> optimizeFor
    249:256:void reset() -> reset
    993:995:void resetChains() -> resetChains
    130:132:void setMeasurer(androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measurer) -> setMeasurer
    214:216:void setOptimizationLevel(int) -> setOptimizationLevel
    464:465:void setRtl(boolean) -> setRtl
    423:431:void updateChildrenFromSolver(androidx.constraintlayout.solver.LinearSystem,boolean[]) -> updateChildrenFromSolver
    435:441:void updateFromRuns(boolean,boolean) -> updateFromRuns
    124:125:void updateHierarchy() -> updateHierarchy
androidx.constraintlayout.solver.widgets.Guideline -> androidx.constraintlayout.solver.widgets.Guideline:
    37:53:void <init>() -> <init>
    215:269:void addToSolver(androidx.constraintlayout.solver.LinearSystem,boolean) -> addToSolver
    67:67:boolean allowedInBarrier() -> allowedInBarrier
    102:102:androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor() -> getAnchor
    125:147:androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type) -> getAnchor
    116:116:int getOrientation() -> getOrientation
    183:183:int getRelativeBegin() -> getRelativeBegin
    187:187:int getRelativeEnd() -> getRelativeEnd
    179:179:float getRelativePercent() -> getRelativePercent
    199:199:boolean isResolvedHorizontally() -> isResolvedHorizontally
    203:203:boolean isResolvedVertically() -> isResolvedVertically
    194:196:void setFinalValue(int) -> setFinalValue
    163:168:void setGuideBegin(int) -> setGuideBegin
    171:176:void setGuideEnd(int) -> setGuideEnd
    155:160:void setGuidePercent(float) -> setGuidePercent
    84:99:void setOrientation(int) -> setOrientation
    273:288:void updateFromSolver(androidx.constraintlayout.solver.LinearSystem,boolean) -> updateFromSolver
androidx.constraintlayout.solver.widgets.Guideline$1 -> androidx.constraintlayout.solver.widgets.Guideline$1:
    125:125:void <clinit>() -> <clinit>
androidx.constraintlayout.solver.widgets.HelperWidget -> androidx.constraintlayout.solver.widgets.HelperWidget:
    13:15:void <init>() -> <init>
    28:36:void add(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> add
    58:66:void addDependents(java.util.ArrayList,int,androidx.constraintlayout.solver.widgets.analyzer.WidgetGroup) -> addDependents
    69:78:int findGroupInDependents(int) -> findGroupInDependents
    53:55:void removeAllIds() -> removeAllIds
    20:20:void updateConstraints(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer) -> updateConstraints
androidx.constraintlayout.solver.widgets.Optimizer -> androidx.constraintlayout.solver.widgets.Optimizer:
    52:52:void <clinit>() -> <clinit>
    65:97:void checkMatchParent(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.widgets.ConstraintWidget) -> checkMatchParent
    100:100:boolean enabled(int,int) -> enabled
androidx.constraintlayout.solver.widgets.VirtualLayout -> androidx.constraintlayout.solver.widgets.VirtualLayout:
    26:202:void <init>() -> <init>
    130:136:void captureWidgets() -> captureWidgets
    113:113:boolean needSolverPass() -> needSolverPass
    126:127:void updateConstraints(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer) -> updateConstraints
androidx.constraintlayout.solver.widgets.WidgetContainer -> androidx.constraintlayout.solver.widgets.WidgetContainer:
    26:36:void <init>() -> <init>
    72:78:void add(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> add
    108:108:java.util.ArrayList getChildren() -> getChildren
    158:168:void layout() -> layout
    98:100:void remove(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> remove
    181:182:void removeAllChildren() -> removeAllChildren
    62:64:void reset() -> reset
    172:178:void resetSolverVariables(androidx.constraintlayout.solver.Cache) -> resetSolverVariables
androidx.constraintlayout.solver.widgets.analyzer.BaselineDimensionDependency -> androidx.constraintlayout.solver.widgets.analyzer.BaselineDimensionDependency:
    22:23:void <init>(androidx.constraintlayout.solver.widgets.analyzer.WidgetRun) -> <init>
androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure -> androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure:
    52:72:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer) -> <init>
    457:486:boolean measure(androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measurer,androidx.constraintlayout.solver.widgets.ConstraintWidget,int) -> measure
    75:140:void measureChildren(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer) -> measureChildren
    148:164:void solveLinearSystem(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,java.lang.String,int,int) -> solveLinearSystem
    185:445:long solverMeasure(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,int,int,int,int,int,int,int,int,int) -> solverMeasure
    56:66:void updateHierarchy(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer) -> updateHierarchy
androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measure -> androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measure:
    495:497:void <clinit>() -> <clinit>
    494:494:void <init>() -> <init>
androidx.constraintlayout.solver.widgets.analyzer.ChainRun -> androidx.constraintlayout.solver.widgets.analyzer.ChainRun:
    32:39:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget,int) -> <init>
    523:580:void apply() -> apply
    494:498:void applyToWidget() -> applyToWidget
    77:103:void build() -> build
    108:112:void clear() -> clear
    501:507:androidx.constraintlayout.solver.widgets.ConstraintWidget getFirstVisibleWidget() -> getFirstVisibleWidget
    511:517:androidx.constraintlayout.solver.widgets.ConstraintWidget getLastVisibleWidget() -> getLastVisibleWidget
    65:73:long getWrapDimension() -> getWrapDimension
    54:61:boolean supportsWrapComputation() -> supportsWrapComputation
    43:49:java.lang.String toString() -> toString
    122:491:void update(androidx.constraintlayout.solver.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph -> androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph:
    44:629:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer) -> <init>
    715:761:void applyGroup(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,int,int,androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,java.util.ArrayList,androidx.constraintlayout.solver.widgets.analyzer.RunGroup) -> applyGroup
    387:564:boolean basicMeasureWidgets(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer) -> basicMeasureWidgets
    633:643:void buildGraph() -> buildGraph
    646:701:void buildGraph(java.util.ArrayList) -> buildGraph
    64:71:int computeWrap(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,int) -> computeWrap
    109:228:boolean directMeasure(boolean) -> directMeasure
    232:263:boolean directMeasureSetup(boolean) -> directMeasureSetup
    267:360:boolean directMeasureWithOrientation(boolean,int) -> directMeasureWithOrientation
    764:790:void findGroup(androidx.constraintlayout.solver.widgets.analyzer.WidgetRun,int,java.util.ArrayList) -> findGroup
    619:620:void invalidateGraph() -> invalidateGraph
    626:627:void invalidateMeasures() -> invalidateMeasures
    375:384:void measure(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour,int,androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour,int) -> measure
    568:613:void measureWidgets() -> measureWidgets
    60:61:void setMeasurer(androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measurer) -> setMeasurer
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode -> androidx.constraintlayout.solver.widgets.analyzer.DependencyNode:
    23:41:void <init>(androidx.constraintlayout.solver.widgets.analyzer.WidgetRun) -> <init>
    100:104:void addDependency(androidx.constraintlayout.solver.widgets.analyzer.Dependency) -> addDependency
    119:125:void clear() -> clear
    50:59:void resolve(int) -> resolve
    45:46:java.lang.String toString() -> toString
    62:97:void update(androidx.constraintlayout.solver.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type -> androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type:
    27:27:void <clinit>() -> <clinit>
    27:27:void <init>(java.lang.String,int) -> <init>
    27:27:androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type valueOf(java.lang.String) -> valueOf
    27:27:androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type[] values() -> values
androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency -> androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency:
    24:30:void <init>(androidx.constraintlayout.solver.widgets.analyzer.WidgetRun) -> <init>
    33:41:void resolve(int) -> resolve
androidx.constraintlayout.solver.widgets.analyzer.Direct -> androidx.constraintlayout.solver.widgets.analyzer.Direct:
    45:45:void <clinit>() -> <clinit>
    647:676:boolean canMeasure(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> canMeasure
    232:339:void horizontalSolvingPass(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measurer,boolean) -> horizontalSolvingPass
    211:218:void solveBarrier(androidx.constraintlayout.solver.widgets.Barrier,androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measurer,int,boolean) -> solveBarrier
    499:523:void solveHorizontalCenterConstraints(androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measurer,androidx.constraintlayout.solver.widgets.ConstraintWidget,boolean) -> solveHorizontalCenterConstraints
    569:598:void solveHorizontalMatchConstraint(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measurer,androidx.constraintlayout.solver.widgets.ConstraintWidget,boolean) -> solveHorizontalMatchConstraint
    534:558:void solveVerticalCenterConstraints(androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measurer,androidx.constraintlayout.solver.widgets.ConstraintWidget) -> solveVerticalCenterConstraints
    609:638:void solveVerticalMatchConstraint(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measurer,androidx.constraintlayout.solver.widgets.ConstraintWidget) -> solveVerticalMatchConstraint
    54:202:void solvingPass(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measurer) -> solvingPass
    353:488:void verticalSolvingPass(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measurer) -> verticalSolvingPass
androidx.constraintlayout.solver.widgets.analyzer.Grouping -> androidx.constraintlayout.solver.widgets.analyzer.Grouping:
    367:444:androidx.constraintlayout.solver.widgets.analyzer.WidgetGroup findDependents(androidx.constraintlayout.solver.widgets.ConstraintWidget,int,java.util.ArrayList,androidx.constraintlayout.solver.widgets.analyzer.WidgetGroup) -> findDependents
    356:363:androidx.constraintlayout.solver.widgets.analyzer.WidgetGroup findGroup(java.util.ArrayList,int) -> findGroup
    63:352:boolean simpleSolvingPass(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measurer) -> simpleSolvingPass
    48:55:boolean validInGroup(androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour,androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour,androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour,androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour) -> validInGroup
androidx.constraintlayout.solver.widgets.analyzer.GuidelineReference -> androidx.constraintlayout.solver.widgets.analyzer.GuidelineReference:
    25:29:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> <init>
    48:50:void addDependency(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode) -> addDependency
    69:108:void apply() -> apply
    112:118:void applyToWidget() -> applyToWidget
    33:34:void clear() -> clear
    44:44:boolean supportsWrapComputation() -> supportsWrapComputation
    54:65:void update(androidx.constraintlayout.solver.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.solver.widgets.analyzer.HelperReferences -> androidx.constraintlayout.solver.widgets.analyzer.HelperReferences:
    24:25:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> <init>
    44:46:void addDependency(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode) -> addDependency
    50:118:void apply() -> apply
    144:154:void applyToWidget() -> applyToWidget
    29:31:void clear() -> clear
    40:40:boolean supportsWrapComputation() -> supportsWrapComputation
    122:141:void update(androidx.constraintlayout.solver.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.solver.widgets.analyzer.HorizontalWidgetRun -> androidx.constraintlayout.solver.widgets.analyzer.HorizontalWidgetRun:
    37:37:void <clinit>() -> <clinit>
    40:44:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> <init>
    83:268:void apply() -> apply
    548:551:void applyToWidget() -> applyToWidget
    53:58:void clear() -> clear
    271:301:void computeInsetRatio(int[],int,int,int,int,float,int) -> computeInsetRatio
    62:68:void reset() -> reset
    72:78:boolean supportsWrapComputation() -> supportsWrapComputation
    48:48:java.lang.String toString() -> toString
    305:545:void update(androidx.constraintlayout.solver.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.solver.widgets.analyzer.HorizontalWidgetRun$1 -> androidx.constraintlayout.solver.widgets.analyzer.HorizontalWidgetRun$1:
    305:305:void <clinit>() -> <clinit>
androidx.constraintlayout.solver.widgets.analyzer.RunGroup -> androidx.constraintlayout.solver.widgets.analyzer.RunGroup:
    33:49:void <init>(androidx.constraintlayout.solver.widgets.analyzer.WidgetRun,int) -> <init>
    52:54:void add(androidx.constraintlayout.solver.widgets.analyzer.WidgetRun) -> add
    121:182:long computeWrapSize(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,int) -> computeWrapSize
    89:117:long traverseEnd(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,long) -> traverseEnd
    57:85:long traverseStart(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,long) -> traverseStart
androidx.constraintlayout.solver.widgets.analyzer.VerticalWidgetRun -> androidx.constraintlayout.solver.widgets.analyzer.VerticalWidgetRun:
    34:43:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> <init>
    200:421:void apply() -> apply
    424:427:void applyToWidget() -> applyToWidget
    52:58:void clear() -> clear
    62:70:void reset() -> reset
    74:80:boolean supportsWrapComputation() -> supportsWrapComputation
    47:47:java.lang.String toString() -> toString
    85:196:void update(androidx.constraintlayout.solver.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.solver.widgets.analyzer.VerticalWidgetRun$1 -> androidx.constraintlayout.solver.widgets.analyzer.VerticalWidgetRun$1:
    85:85:void <clinit>() -> <clinit>
androidx.constraintlayout.solver.widgets.analyzer.WidgetGroup -> androidx.constraintlayout.solver.widgets.analyzer.WidgetGroup:
    36:36:void <clinit>() -> <clinit>
    35:46:void <init>(int) -> <init>
    52:56:boolean add(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> add
    210:223:void cleanup(java.util.ArrayList) -> cleanup
    49:49:int getId() -> getId
    48:48:int getOrientation() -> getOrientation
    63:70:java.lang.String getOrientationString() -> getOrientationString
    119:124:int measureWrap(androidx.constraintlayout.solver.LinearSystem,int) -> measureWrap
    87:96:void moveTo(int,androidx.constraintlayout.solver.widgets.analyzer.WidgetGroup) -> moveTo
    59:59:void setAuthoritative(boolean) -> setAuthoritative
    175:176:void setOrientation(int) -> setOrientation
    128:170:int solverMeasure(androidx.constraintlayout.solver.LinearSystem,java.util.ArrayList,int) -> solverMeasure
    75:80:java.lang.String toString() -> toString
androidx.constraintlayout.solver.widgets.analyzer.WidgetGroup$MeasureResult -> androidx.constraintlayout.solver.widgets.analyzer.WidgetGroup$MeasureResult:
    235:243:void <init>(androidx.constraintlayout.solver.widgets.analyzer.WidgetGroup,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.LinearSystem,int) -> <init>
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun -> androidx.constraintlayout.solver.widgets.analyzer.WidgetRun:
    34:45:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> <init>
    280:283:void addTarget(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,int) -> addTarget
    286:292:void addTarget(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,int,androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency) -> addTarget
    233:254:int getLimitedDimension(int,int) -> getLimitedDimension
    95:123:androidx.constraintlayout.solver.widgets.analyzer.DependencyNode getTarget(androidx.constraintlayout.solver.widgets.ConstraintAnchor) -> getTarget
    258:276:androidx.constraintlayout.solver.widgets.analyzer.DependencyNode getTarget(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int) -> getTarget
    295:298:long getWrapDimension() -> getWrapDimension
    301:301:boolean isResolved() -> isResolved
    171:220:void resolveDimension(int,int) -> resolveDimension
    230:230:void update(androidx.constraintlayout.solver.widgets.analyzer.Dependency) -> update
    127:168:void updateRunCenter(androidx.constraintlayout.solver.widgets.analyzer.Dependency,androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int) -> updateRunCenter
    228:228:void updateRunEnd(androidx.constraintlayout.solver.widgets.analyzer.Dependency) -> updateRunEnd
    224:224:void updateRunStart(androidx.constraintlayout.solver.widgets.analyzer.Dependency) -> updateRunStart
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$1 -> androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$1:
    101:101:void <clinit>() -> <clinit>
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType -> androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType:
    303:303:void <clinit>() -> <clinit>
    303:303:void <init>(java.lang.String,int) -> <init>
    303:303:androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType valueOf(java.lang.String) -> valueOf
    303:303:androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType[] values() -> values
androidx.constraintlayout.widget.Barrier -> androidx.constraintlayout.widget.Barrier:
    118:120:void <init>(android.content.Context) -> <init>
    220:220:boolean allowsGoneWidget() -> allowsGoneWidget
    240:240:int getMargin() -> getMargin
    138:138:int getType() -> getType
    193:213:void init(android.util.AttributeSet) -> init
    184:185:void resolveRtl(androidx.constraintlayout.solver.widgets.ConstraintWidget,boolean) -> resolveRtl
    216:217:void setAllowsGoneWidget(boolean) -> setAllowsGoneWidget
    229:232:void setDpMargin(int) -> setDpMargin
    249:250:void setMargin(int) -> setMargin
    147:148:void setType(int) -> setType
    151:180:void updateType(androidx.constraintlayout.solver.widgets.ConstraintWidget,int,boolean) -> updateType
androidx.constraintlayout.widget.ConstraintAttribute -> androidx.constraintlayout.widget.ConstraintAttribute:
    211:215:void <init>(java.lang.String,androidx.constraintlayout.widget.ConstraintAttribute$AttributeType,java.lang.Object) -> <init>
    217:222:void <init>(androidx.constraintlayout.widget.ConstraintAttribute,java.lang.Object) -> <init>
    250:274:java.util.HashMap extractAttributes(java.util.HashMap,android.view.View) -> extractAttributes
    399:445:void parse(android.content.Context,org.xmlpull.v1.XmlPullParser,java.util.HashMap) -> parse
    278:328:void setAttributes(android.view.View,java.util.HashMap) -> setAttributes
    225:246:void setValue(java.lang.Object) -> setValue
androidx.constraintlayout.widget.ConstraintAttribute$1 -> androidx.constraintlayout.widget.ConstraintAttribute$1:
    88:88:void <clinit>() -> <clinit>
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType -> androidx.constraintlayout.widget.ConstraintAttribute$AttributeType:
    51:58:void <clinit>() -> <clinit>
    51:51:void <init>(java.lang.String,int) -> <init>
    51:51:androidx.constraintlayout.widget.ConstraintAttribute$AttributeType valueOf(java.lang.String) -> valueOf
    51:51:androidx.constraintlayout.widget.ConstraintAttribute$AttributeType[] values() -> values
androidx.constraintlayout.widget.ConstraintHelper -> androidx.constraintlayout.widget.ConstraintHelper:
    48:86:void <init>(android.content.Context) -> <init>
    252:272:void addID(java.lang.String) -> addID
    203:211:void addRscID(int) -> addRscID
    278:311:void addTag(java.lang.String) -> addTag
    440:455:void applyLayoutFeatures(androidx.constraintlayout.widget.ConstraintLayout) -> applyLayoutFeatures
    461:465:void applyLayoutFeatures() -> applyLayoutFeatures
    319:356:int findId(java.lang.String) -> findId
    368:390:int findId(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String) -> findId
    184:184:int[] getReferencedIds() -> getReferencedIds
    104:119:void init(android.util.AttributeSet) -> init
    123:130:void onAttachedToWindow() -> onAttachedToWindow
    219:219:void onDraw(android.graphics.Canvas) -> onDraw
    226:231:void onMeasure(int,int) -> onMeasure
    594:594:void resolveRtl(androidx.constraintlayout.solver.widgets.ConstraintWidget,boolean) -> resolveRtl
    397:412:void setIds(java.lang.String) -> setIds
    417:432:void setReferenceTags(java.lang.String) -> setReferenceTags
    192:197:void setReferencedIds(int[]) -> setReferencedIds
    598:602:void setTag(int,java.lang.Object) -> setTag
    533:533:void updatePostLayout(androidx.constraintlayout.widget.ConstraintLayout) -> updatePostLayout
    541:541:void updatePostMeasure(androidx.constraintlayout.widget.ConstraintLayout) -> updatePostMeasure
    549:549:void updatePreDraw(androidx.constraintlayout.widget.ConstraintLayout) -> updatePreDraw
    474:500:void updatePreLayout(androidx.constraintlayout.widget.ConstraintLayout) -> updatePreLayout
    238:246:void validateParams() -> validateParams
androidx.constraintlayout.widget.ConstraintLayout -> androidx.constraintlayout.widget.ConstraintLayout:
    494:1534:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    482:482:int access$000(androidx.constraintlayout.widget.ConstraintLayout) -> access$000
    482:482:java.util.ArrayList access$100(androidx.constraintlayout.widget.ConstraintLayout) -> access$100
    982:986:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    1263:1492:void applyConstraintsFromLayoutParams(boolean,android.view.View,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams,android.util.SparseArray) -> applyConstraintsFromLayoutParams
    1940:1940:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1966:2055:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    3244:3246:void forceLayout() -> forceLayout
    482:482:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1924:1924:androidx.constraintlayout.widget.ConstraintLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    482:482:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1916:1916:androidx.constraintlayout.widget.ConstraintLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1932:1932:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    553:559:java.lang.Object getDesignInformation(int,java.lang.Object) -> getDesignInformation
    1134:1134:int getMaxHeight() -> getMaxHeight
    1124:1124:int getMaxWidth() -> getMaxWidth
    1087:1087:int getMinHeight() -> getMinHeight
    1077:1077:int getMinWidth() -> getMinWidth
    1908:1908:int getOptimizationLevel() -> getOptimizationLevel
    1716:1725:int getPaddingWidth() -> getPaddingWidth
    1495:1508:androidx.constraintlayout.solver.widgets.ConstraintWidget getTargetWidget(int) -> getTargetWidget
    1958:1958:android.view.View getViewById(int) -> getViewById
    1518:1521:androidx.constraintlayout.solver.widgets.ConstraintWidget getViewWidget(android.view.View) -> getViewWidget
    924:966:void init(android.util.AttributeSet,int,int) -> init
    1704:1706:boolean isRtl() -> isRtl
    3249:3257:void markHierarchyDirty() -> markHierarchyDirty
    1821:1872:void onLayout(boolean,int,int,int,int) -> onLayout
    1631:1701:void onMeasure(int,int) -> onMeasure
    1004:1027:void onViewAdded(android.view.View) -> onViewAdded
    1034:1042:void onViewRemoved(android.view.View) -> onViewRemoved
    974:975:void parseLayoutDescription(int) -> parseLayoutDescription
    993:997:void removeView(android.view.View) -> removeView
    3238:3240:void requestLayout() -> requestLayout
    1595:1624:void resolveMeasuredDimension(int,int,int,int,boolean,boolean) -> resolveMeasuredDimension
    1546:1580:void resolveSystem(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,int,int,int) -> resolveSystem
    1155:1255:void setChildrenConstraints() -> setChildrenConstraints
    1949:1950:void setConstraintSet(androidx.constraintlayout.widget.ConstraintSet) -> setConstraintSet
    535:547:void setDesignInformation(int,java.lang.Object,java.lang.Object) -> setDesignInformation
    588:591:void setId(int) -> setId
    1109:1114:void setMaxHeight(int) -> setMaxHeight
    1096:1101:void setMaxWidth(int) -> setMaxWidth
    1063:1068:void setMinHeight(int) -> setMinHeight
    1050:1055:void setMinWidth(int) -> setMinWidth
    2058:2062:void setOnConstraintsChanged(androidx.constraintlayout.widget.ConstraintsChangedListener) -> setOnConstraintsChanged
    1897:1899:void setOptimizationLevel(int) -> setOptimizationLevel
    1730:1796:void setSelfDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,int,int,int,int) -> setSelfDimensionBehaviour
    3266:3266:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    1138:1151:boolean updateHierarchy() -> updateHierarchy
androidx.constraintlayout.widget.ConstraintLayout$1 -> androidx.constraintlayout.widget.ConstraintLayout$1:
    660:660:void <clinit>() -> <clinit>
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams -> androidx.constraintlayout.widget.ConstraintLayout$LayoutParams:
    2184:3042:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2184:3093:void <init>(int,int) -> <init>
    2184:3097:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    3105:3220:void resolveLayoutDirection(int) -> resolveLayoutDirection
    3045:3089:void validate() -> validate
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams$Table -> androidx.constraintlayout.widget.ConstraintLayout$LayoutParams$Table:
    2633:2687:void <clinit>() -> <clinit>
androidx.constraintlayout.widget.ConstraintLayout$Measurer -> androidx.constraintlayout.widget.ConstraintLayout$Measurer:
    618:620:void <init>(androidx.constraintlayout.widget.ConstraintLayout,androidx.constraintlayout.widget.ConstraintLayout) -> <init>
    610:616:void captureLayoutInfos(int,int,int,int,int,int) -> captureLayoutInfos
    903:918:void didMeasures() -> didMeasures
    886:898:boolean isSimilarSpec(int,int,int) -> isSimilarSpec
    626:872:void measure(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measure) -> measure
androidx.constraintlayout.widget.ConstraintLayoutStates -> androidx.constraintlayout.widget.ConstraintLayoutStates:
    42:51:void <init>(android.content.Context,androidx.constraintlayout.widget.ConstraintLayout,int) -> <init>
    285:344:void load(android.content.Context,int) -> load
    347:374:void parseConstraintSet(android.content.Context,org.xmlpull.v1.XmlPullParser) -> parseConstraintSet
    133:134:void setOnConstraintsChanged(androidx.constraintlayout.widget.ConstraintsChangedListener) -> setOnConstraintsChanged
androidx.constraintlayout.widget.ConstraintLayoutStates$State -> androidx.constraintlayout.widget.ConstraintLayoutStates$State:
    141:168:void <init>(android.content.Context,org.xmlpull.v1.XmlPullParser) -> <init>
    171:172:void add(androidx.constraintlayout.widget.ConstraintLayoutStates$Variant) -> add
androidx.constraintlayout.widget.ConstraintLayoutStates$Variant -> androidx.constraintlayout.widget.ConstraintLayoutStates$Variant:
    186:251:void <init>(android.content.Context,org.xmlpull.v1.XmlPullParser) -> <init>
androidx.constraintlayout.widget.ConstraintSet -> androidx.constraintlayout.widget.ConstraintSet:
    220:400:void <clinit>() -> <clinit>
    74:223:void <init>() -> <init>
    74:74:int access$100(android.content.res.TypedArray,int,int) -> access$100
    74:74:int[] access$200() -> access$200
    1662:1775:void applyToInternal(androidx.constraintlayout.widget.ConstraintLayout,boolean) -> applyToInternal
    1478:1479:void clone(android.content.Context,int) -> clone
    1499:1549:void clone(androidx.constraintlayout.widget.ConstraintLayout) -> clone
    1557:1577:void clone(androidx.constraintlayout.widget.Constraints) -> clone
    3750:3782:int[] convertReferenceString(android.view.View,java.lang.String) -> convertReferenceString
    3417:3421:androidx.constraintlayout.widget.ConstraintSet$Constraint fillFromAttributeList(android.content.Context,android.util.AttributeSet) -> fillFromAttributeList
    3276:3309:void load(android.content.Context,int) -> load
    3318:3406:void load(android.content.Context,org.xmlpull.v1.XmlPullParser) -> load
    3409:3413:int lookupID(android.content.res.TypedArray,int,int) -> lookupID
    3425:3747:void populateConstraint(android.content.Context,androidx.constraintlayout.widget.ConstraintSet$Constraint,android.content.res.TypedArray) -> populateConstraint
androidx.constraintlayout.widget.ConstraintSet$Constraint -> androidx.constraintlayout.widget.ConstraintSet$Constraint:
    1256:1263:void <init>() -> <init>
    1256:1256:void access$000(androidx.constraintlayout.widget.ConstraintSet$Constraint,int,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) -> access$000
    1256:1256:void access$300(androidx.constraintlayout.widget.ConstraintSet$Constraint,androidx.constraintlayout.widget.ConstraintHelper,int,androidx.constraintlayout.widget.Constraints$LayoutParams) -> access$300
    1256:1256:void access$400(androidx.constraintlayout.widget.ConstraintSet$Constraint,int,androidx.constraintlayout.widget.Constraints$LayoutParams) -> access$400
    1401:1467:void applyTo(androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) -> applyTo
    1256:1256:java.lang.Object clone() -> clone
    1297:1304:androidx.constraintlayout.widget.ConstraintSet$Constraint clone() -> clone
    1336:1398:void fillFrom(int,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) -> fillFrom
    1308:1316:void fillFromConstraints(androidx.constraintlayout.widget.ConstraintHelper,int,androidx.constraintlayout.widget.Constraints$LayoutParams) -> fillFromConstraints
    1319:1333:void fillFromConstraints(int,androidx.constraintlayout.widget.Constraints$LayoutParams) -> fillFromConstraints
androidx.constraintlayout.widget.ConstraintSet$Layout -> androidx.constraintlayout.widget.ConstraintSet$Layout:
    654:768:void <clinit>() -> <clinit>
    517:581:void <init>() -> <init>
    584:652:void copyFrom(androidx.constraintlayout.widget.ConstraintSet$Layout) -> copyFrom
    771:971:void fillFromAttributeList(android.content.Context,android.util.AttributeSet) -> fillFromAttributeList
androidx.constraintlayout.widget.ConstraintSet$Motion -> androidx.constraintlayout.widget.ConstraintSet$Motion:
    1198:1213:void <clinit>() -> <clinit>
    1179:1186:void <init>() -> <init>
    1189:1196:void copyFrom(androidx.constraintlayout.widget.ConstraintSet$Motion) -> copyFrom
    1216:1249:void fillFromAttributeList(android.content.Context,android.util.AttributeSet) -> fillFromAttributeList
androidx.constraintlayout.widget.ConstraintSet$PropertySet -> androidx.constraintlayout.widget.ConstraintSet$PropertySet:
    1139:1144:void <init>() -> <init>
    1147:1152:void copyFrom(androidx.constraintlayout.widget.ConstraintSet$PropertySet) -> copyFrom
    1155:1173:void fillFromAttributeList(android.content.Context,android.util.AttributeSet) -> fillFromAttributeList
androidx.constraintlayout.widget.ConstraintSet$Transform -> androidx.constraintlayout.widget.ConstraintSet$Transform:
    1057:1082:void <clinit>() -> <clinit>
    1026:1039:void <init>() -> <init>
    1042:1055:void copyFrom(androidx.constraintlayout.widget.ConstraintSet$Transform) -> copyFrom
    1085:1133:void fillFromAttributeList(android.content.Context,android.util.AttributeSet) -> fillFromAttributeList
androidx.constraintlayout.widget.Constraints -> androidx.constraintlayout.widget.Constraints:
    35:35:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    136:136:androidx.constraintlayout.widget.Constraints$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    35:35:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    62:62:androidx.constraintlayout.widget.Constraints$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    148:148:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    152:157:androidx.constraintlayout.widget.ConstraintSet getConstraintSet() -> getConstraintSet
    163:163:void onLayout(boolean,int,int,int,int) -> onLayout
androidx.constraintlayout.widget.Constraints$LayoutParams -> androidx.constraintlayout.widget.Constraints$LayoutParams:
    67:83:void <init>(int,int) -> <init>
    67:127:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.constraintlayout.widget.Guideline -> androidx.constraintlayout.widget.Guideline:
    55:57:void <init>(android.content.Context) -> <init>
    60:62:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    86:86:void draw(android.graphics.Canvas) -> draw
    93:94:void onMeasure(int,int) -> onMeasure
    102:105:void setGuidelineBegin(int) -> setGuidelineBegin
    113:116:void setGuidelineEnd(int) -> setGuidelineEnd
    123:126:void setGuidelinePercent(float) -> setGuidelinePercent
    79:79:void setVisibility(int) -> setVisibility
androidx.constraintlayout.widget.Placeholder -> androidx.constraintlayout.widget.Placeholder:
    113:113:android.view.View getContent() -> getContent
    105:105:int getEmptyVisibility() -> getEmptyVisibility
    121:140:void onDraw(android.graphics.Canvas) -> onDraw
    169:187:void setContentId(int) -> setContentId
    96:97:void setEmptyVisibility(int) -> setEmptyVisibility
    194:208:void updatePostMeasure(androidx.constraintlayout.widget.ConstraintLayout) -> updatePostMeasure
    147:161:void updatePreLayout(androidx.constraintlayout.widget.ConstraintLayout) -> updatePreLayout
androidx.constraintlayout.widget.VirtualLayout -> androidx.constraintlayout.widget.VirtualLayout:
    48:62:void init(android.util.AttributeSet) -> init
    73:99:void onAttachedToWindow() -> onAttachedToWindow
    66:66:void onMeasure(androidx.constraintlayout.solver.widgets.VirtualLayout,int,int) -> onMeasure
    115:117:void setElevation(float) -> setElevation
    106:108:void setVisibility(int) -> setVisibility
androidx.coordinatorlayout.widget.CoordinatorLayout -> androidx.coordinatorlayout.widget.CoordinatorLayout:
    116:150:void <clinit>() -> <clinit>
    201:202:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    166:228:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    154:158:android.graphics.Rect acquireTempRect() -> acquireTempRect
    1580:1592:void addPreDrawListener() -> addPreDrawListener
    1724:1724:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1250:1255:int clamp(int,int,int) -> clamp
    1036:1048:void constrainChildRect(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams,android.graphics.Rect,int,int) -> constrainChildRect
    825:846:androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsetsToBehaviors(androidx.core.view.WindowInsetsCompat) -> dispatchApplyWindowInsetsToBehaviors
    1489:1501:void dispatchDependentViewsChanged(android.view.View) -> dispatchDependentViewsChanged
    1222:1246:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    305:318:void drawableStateChanged() -> drawableStateChanged
    1549:1566:void ensurePreDrawListener() -> ensurePreDrawListener
    111:111:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1719:1719:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    111:111:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    111:111:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1704:1704:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1709:1714:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    949:958:void getChildRect(android.view.View,boolean,android.graphics.Rect) -> getChildRect
    1513:1518:java.util.List getDependencies(android.view.View) -> getDependencies
    1541:1542:java.util.List getDependencySortedChildren() -> getDependencySortedChildren
    1531:1536:java.util.List getDependents(android.view.View) -> getDependents
    705:706:void getDescendantRect(android.view.View,android.graphics.Rect) -> getDescendantRect
    1060:1066:void getDesiredAnchoredChildRect(android.view.View,int,android.graphics.Rect,android.graphics.Rect) -> getDesiredAnchoredChildRect
    962:1033:void getDesiredAnchoredChildRectWithoutConstraints(android.view.View,int,android.graphics.Rect,android.graphics.Rect,androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams,int,int) -> getDesiredAnchoredChildRectWithoutConstraints
    574:584:int getKeyline(int) -> getKeyline
    935:937:void getLastChildRect(android.view.View,android.graphics.Rect) -> getLastChildRect
    374:374:androidx.core.view.WindowInsetsCompat getLastWindowInsets() -> getLastWindowInsets
    1950:1950:int getNestedScrollAxes() -> getNestedScrollAxes
    627:658:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams getResolvedLayoutParams(android.view.View) -> getResolvedLayoutParams
    300:300:android.graphics.drawable.Drawable getStatusBarBackground() -> getStatusBarBackground
    715:715:int getSuggestedMinimumHeight() -> getSuggestedMinimumHeight
    710:710:int getSuggestedMinimumWidth() -> getSuggestedMinimumWidth
    416:429:void getTopSortedChildren(java.util.List) -> getTopSortedChildren
    1572:1572:boolean hasDependencies(android.view.View) -> hasDependencies
    1668:1673:boolean isPointInChildBounds(android.view.View,int,int) -> isPointInChildBounds
    1163:1187:void layoutChild(android.view.View,int) -> layoutChild
    1076:1086:void layoutChildWithAnchor(android.view.View,android.view.View,int) -> layoutChildWithAnchor
    1100:1153:void layoutChildWithKeyline(android.view.View,int,int) -> layoutChildWithKeyline
    1380:1458:void offsetChildByInset(android.view.View,android.graphics.Rect,int) -> offsetChildByInset
    1617:1656:void offsetChildToAnchor(android.view.View,int) -> offsetChildToAnchor
    237:252:void onAttachedToWindow() -> onAttachedToWindow
    1275:1377:void onChildViewsChanged(int) -> onChildViewsChanged
    256:266:void onDetachedFromWindow() -> onDetachedFromWindow
    896:904:void onDraw(android.graphics.Canvas) -> onDraw
    503:516:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    876:892:void onLayout(boolean,int,int,int,int) -> onLayout
    860:872:void onLayoutChild(android.view.View,int) -> onLayoutChild
    739:822:void onMeasure(int,int) -> onMeasure
    733:735:void onMeasureChild(android.view.View,int,int,int,int) -> onMeasureChild
    1896:1920:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    1925:1945:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    1850:1851:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    1855:1892:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    1813:1815:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    1820:1846:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    1759:1760:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    1764:1781:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    3147:3170:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    3174:3192:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1729:1729:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    1734:1754:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    1785:1786:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    1790:1808:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    521:561:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    588:622:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String) -> parseBehavior
    432:498:boolean performIntercept(android.view.MotionEvent,int) -> performIntercept
    662:695:void prepareChildren() -> prepareChildren
    923:925:void recordLastChildRect(android.view.View,android.graphics.Rect) -> recordLastChildRect
    162:164:void releaseTempRect(android.graphics.Rect) -> releaseTempRect
    1599:1606:void removePreDrawListener() -> removePreDrawListener
    3197:3205:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    566:571:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    384:409:void resetTouchBehaviors(boolean) -> resetTouchBehaviors
    1217:1217:int resolveAnchoredChildGravity(int) -> resolveAnchoredChildGravity
    1195:1201:int resolveGravity(int) -> resolveGravity
    1209:1209:int resolveKeylineGravity(int) -> resolveKeylineGravity
    908:910:void setFitsSystemWindows(boolean) -> setFitsSystemWindows
    1461:1467:void setInsetOffsetX(android.view.View,int) -> setInsetOffsetX
    1470:1476:void setInsetOffsetY(android.view.View,int) -> setInsetOffsetY
    232:233:void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener) -> setOnHierarchyChangeListener
    275:291:void setStatusBarBackground(android.graphics.drawable.Drawable) -> setStatusBarBackground
    353:354:void setStatusBarBackgroundColor(int) -> setStatusBarBackgroundColor
    342:343:void setStatusBarBackgroundResource(int) -> setStatusBarBackgroundResource
    327:333:void setVisibility(int) -> setVisibility
    357:366:androidx.core.view.WindowInsetsCompat setWindowInsets(androidx.core.view.WindowInsetsCompat) -> setWindowInsets
    3209:3233:void setupForInsets() -> setupForInsets
    322:322:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.coordinatorlayout.widget.CoordinatorLayout$1 -> androidx.coordinatorlayout.widget.CoordinatorLayout$1:
    3216:3216:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout) -> <init>
    3220:3220:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior -> androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior:
    2024:2025:void <init>() -> <init>
    2035:2036:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2162:2162:boolean blocksInteractionBelow(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> blocksInteractionBelow
    2705:2705:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect) -> getInsetDodgeRect
    2128:2128:int getScrimColor(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> getScrimColor
    2146:2146:float getScrimOpacity(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> getScrimOpacity
    2189:2189:boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> layoutDependsOn
    2625:2625:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
    2047:2047:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    2219:2219:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    2238:2238:void onDependentViewRemoved(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewRemoved
    2057:2057:void onDetachedFromLayoutParams() -> onDetachedFromLayoutParams
    2084:2084:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    2292:2292:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    2263:2263:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    2577:2577:boolean onNestedFling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float,boolean) -> onNestedFling
    2605:2605:boolean onNestedPreFling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float) -> onNestedPreFling
    2508:2508:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[]) -> onNestedPreScroll
    2542:2545:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int) -> onNestedPreScroll
    2458:2458:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int) -> onNestedScroll
    2492:2496:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int) -> onNestedScroll
    2376:2376:void onNestedScrollAccepted(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int) -> onNestedScrollAccepted
    2402:2406:void onNestedScrollAccepted(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    2647:2647:boolean onRequestChildRectangleOnScreen(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect,boolean) -> onRequestChildRectangleOnScreen
    2665:2665:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.os.Parcelable) -> onRestoreInstanceState
    2687:2687:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onSaveInstanceState
    2331:2331:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int) -> onStartNestedScroll
    2359:2363:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    2417:2417:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onStopNestedScroll
    2442:2445:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int) -> onStopNestedScroll
    2108:2108:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
androidx.coordinatorlayout.widget.CoordinatorLayout$HierarchyChangeListener -> androidx.coordinatorlayout.widget.CoordinatorLayout$HierarchyChangeListener:
    3125:3126:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout) -> <init>
    3130:3133:void onChildViewAdded(android.view.View,android.view.View) -> onChildViewAdded
    3137:3142:void onChildViewRemoved(android.view.View,android.view.View) -> onChildViewRemoved
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams -> androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams:
    2718:2779:void <init>(int,int) -> <init>
    2718:2814:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2718:2818:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> <init>
    2718:2822:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2718:2826:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2912:2912:boolean checkAnchorChanged() -> checkAnchorChanged
    3007:3009:boolean dependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> dependsOn
    2923:2926:boolean didBlockInteraction() -> didBlockInteraction
    3032:3040:android.view.View findAnchorView(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> findAnchorView
    2835:2835:int getAnchorId() -> getAnchorId
    2861:2861:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior() -> getBehavior
    2987:2987:boolean getChangedAfterNestedScroll() -> getChangedAfterNestedScroll
    2904:2904:android.graphics.Rect getLastChildRect() -> getLastChildRect
    2941:2946:boolean isBlockingInteractionBelow(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> isBlockingInteractionBelow
    2977:2983:boolean isNestedScrollAccepted(int) -> isNestedScrollAccepted
    2995:2996:void resetChangedAfterNestedScroll() -> resetChangedAfterNestedScroll
    2962:2963:void resetNestedScroll(int) -> resetNestedScroll
    2958:2959:void resetTouchBehaviorTracking() -> resetTouchBehaviorTracking
    3048:3085:void resolveAnchorView(android.view.View,androidx.coordinatorlayout.widget.CoordinatorLayout) -> resolveAnchorView
    2874:2889:void setBehavior(androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior) -> setBehavior
    2991:2992:void setChangedAfterNestedScroll(boolean) -> setChangedAfterNestedScroll
    2896:2897:void setLastChildRect(android.graphics.Rect) -> setLastChildRect
    2966:2974:void setNestedScrollAccepted(int,boolean) -> setNestedScrollAccepted
    3117:3120:boolean shouldDodge(android.view.View,int) -> shouldDodge
    3093:3110:boolean verifyAnchorView(android.view.View,androidx.coordinatorlayout.widget.CoordinatorLayout) -> verifyAnchorView
androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener -> androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener:
    1953:1953:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout) -> <init>
    1956:1957:boolean onPreDraw() -> onPreDraw
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState -> androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState:
    3277:3277:void <clinit>() -> <clinit>
    3239:3252:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    3255:3256:void <init>(android.os.Parcelable) -> <init>
    3260:3275:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState$1 -> androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState$1:
    3278:3278:void <init>() -> <init>
    3278:3278:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3278:3278:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    3281:3281:androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    3286:3286:androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    3278:3278:java.lang.Object[] newArray(int) -> newArray
    3291:3291:androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState[] newArray(int) -> newArray
androidx.coordinatorlayout.widget.CoordinatorLayout$ViewElevationComparator -> androidx.coordinatorlayout.widget.CoordinatorLayout$ViewElevationComparator:
    1964:1964:void <init>() -> <init>
    1964:1964:int compare(java.lang.Object,java.lang.Object) -> compare
    1967:1974:int compare(android.view.View,android.view.View) -> compare
androidx.coordinatorlayout.widget.DirectedAcyclicGraph -> androidx.coordinatorlayout.widget.DirectedAcyclicGraph:
    39:44:void <init>() -> <init>
    76:89:void addEdge(java.lang.Object,java.lang.Object) -> addEdge
    54:57:void addNode(java.lang.Object) -> addNode
    143:150:void clear() -> clear
    63:63:boolean contains(java.lang.Object) -> contains
    174:194:void dfs(java.lang.Object,java.util.ArrayList,java.util.HashSet) -> dfs
    205:209:java.util.ArrayList getEmptyList() -> getEmptyList
    98:98:java.util.List getIncomingEdges(java.lang.Object) -> getIncomingEdges
    109:119:java.util.List getOutgoingEdges(java.lang.Object) -> getOutgoingEdges
    162:170:java.util.ArrayList getSortedList() -> getSortedList
    130:136:boolean hasOutgoingEdges(java.lang.Object) -> hasOutgoingEdges
    213:215:void poolList(java.util.ArrayList) -> poolList
androidx.coordinatorlayout.widget.ViewGroupUtils -> androidx.coordinatorlayout.widget.ViewGroupUtils:
    35:36:void <clinit>() -> <clinit>
    77:79:void getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> getDescendantRect
    82:94:void offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix) -> offsetDescendantMatrix
    48:67:void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> offsetDescendantRect
androidx.core.app.ActivityCompat -> androidx.core.app.ActivityCompat:
    287:292:void finishAffinity(android.app.Activity) -> finishAffinity
    169:169:androidx.core.app.ActivityCompat$PermissionCompatDelegate getPermissionCompatDelegate() -> getPermissionCompatDelegate
    577:585:void recreate(android.app.Activity) -> recreate
androidx.core.app.ActivityRecreator -> androidx.core.app.ActivityRecreator:
    90:99:void <clinit>() -> <clinit>
    361:363:java.lang.Class getActivityThreadClass() -> getActivityThreadClass
    341:345:java.lang.reflect.Field getMainThreadField() -> getMainThreadField
    299:308:java.lang.reflect.Method getPerformStopActivity2Params(java.lang.Class) -> getPerformStopActivity2Params
    285:294:java.lang.reflect.Method getPerformStopActivity3Params(java.lang.Class) -> getPerformStopActivity3Params
    317:335:java.lang.reflect.Method getRequestRelaunchActivityMethod(java.lang.Class) -> getRequestRelaunchActivityMethod
    351:355:java.lang.reflect.Field getTokenField() -> getTokenField
    313:313:boolean needsRelaunchCall() -> needsRelaunchCall
    244:280:boolean queueOnStopIfNecessary(java.lang.Object,android.app.Activity) -> queueOnStopIfNecessary
    108:170:boolean recreate(android.app.Activity) -> recreate
androidx.core.app.ActivityRecreator$1 -> androidx.core.app.ActivityRecreator$1:
    142:142:void <init>(androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks,java.lang.Object) -> <init>
    145:146:void run() -> run
androidx.core.app.ActivityRecreator$2 -> androidx.core.app.ActivityRecreator$2:
    158:158:void <init>(android.app.Application,androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks) -> <init>
    165:166:void run() -> run
androidx.core.app.ActivityRecreator$3 -> androidx.core.app.ActivityRecreator$3:
    252:252:void <init>(java.lang.Object,java.lang.Object) -> <init>
    256:275:void run() -> run
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks -> androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks:
    178:184:void <init>(android.app.Activity) -> <init>
    188:188:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    228:235:void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    206:215:void onActivityPaused(android.app.Activity) -> onActivityPaused
    202:202:void onActivityResumed(android.app.Activity) -> onActivityResumed
    219:219:void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    195:198:void onActivityStarted(android.app.Activity) -> onActivityStarted
    224:224:void onActivityStopped(android.app.Activity) -> onActivityStopped
androidx.core.app.AppOpsManagerCompat -> androidx.core.app.AppOpsManagerCompat:
    175:177:int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String) -> noteProxyOpNoThrow
    75:76:java.lang.String permissionToOp(java.lang.String) -> permissionToOp
androidx.core.app.ComponentActivity -> androidx.core.app.ComponentActivity:
    48:63:void <init>() -> <init>
    136:140:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    127:131:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    113:113:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    85:87:void onCreate(android.os.Bundle) -> onCreate
    92:94:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    122:122:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
androidx.core.app.CoreComponentFactory -> androidx.core.app.CoreComponentFactory:
    39:39:void <init>() -> <init>
    80:86:java.lang.Object checkCompatWrapper(java.lang.Object) -> checkCompatWrapper
    45:45:android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateActivity
    52:52:android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String) -> instantiateApplication
    67:67:android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String) -> instantiateProvider
    60:60:android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateReceiver
    75:75:android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateService
androidx.core.app.NavUtils -> androidx.core.app.NavUtils:
    129:150:android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    195:205:android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    220:223:java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    240:278:java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
    108:115:void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    60:61:boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
androidx.core.app.RemoteActionCompat -> androidx.core.app.RemoteActionCompat:
    94:94:void <init>() -> <init>
androidx.core.app.RemoteActionCompatParcelizer -> androidx.core.app.RemoteActionCompatParcelizer:
    11:11:void <init>() -> <init>
    14:21:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    26:33:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.core.app.TaskStackBuilder -> androidx.core.app.TaskStackBuilder:
    79:84:void <init>(android.content.Context) -> <init>
    121:122:androidx.core.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    159:177:androidx.core.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    201:212:androidx.core.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    95:95:androidx.core.app.TaskStackBuilder create(android.content.Context) -> create
    256:256:java.util.Iterator iterator() -> iterator
    268:269:void startActivities() -> startActivities
    283:296:void startActivities(android.os.Bundle) -> startActivities
androidx.core.content.ContextCompat -> androidx.core.content.ContextCompat:
    153:153:void <clinit>() -> <clinit>
    534:538:int checkSelfPermission(android.content.Context,java.lang.String) -> checkSelfPermission
    516:517:int getColor(android.content.Context,int) -> getColor
    454:455:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    223:228:boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
androidx.core.content.PermissionChecker -> androidx.core.content.PermissionChecker:
    97:119:int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String) -> checkPermission
    134:135:int checkSelfPermission(android.content.Context,java.lang.String) -> checkSelfPermission
androidx.core.content.res.FontResourcesParserCompat -> androidx.core.content.res.FontResourcesParserCompat:
    230:231:int getType(android.content.res.TypedArray,int) -> getType
    168:176:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> parse
    246:271:java.util.List readCerts(android.content.res.Resources,int) -> readCerts
    181:187:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFamilies
    193:226:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFamily
    285:313:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry readFont(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFont
    318:329:void skip(org.xmlpull.v1.XmlPullParser) -> skip
    276:280:java.util.List toByteArrayList(java.lang.String[]) -> toByteArrayList
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry:
    153:155:void <init>(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[]) -> <init>
    158:158:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] getEntries() -> getEntries
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry:
    113:120:void <init>(java.lang.String,int,boolean,java.lang.String,int,int) -> <init>
    123:123:java.lang.String getFileName() -> getFileName
    143:143:int getResourceId() -> getResourceId
    139:139:int getTtcIndex() -> getTtcIndex
    135:135:java.lang.String getVariationSettings() -> getVariationSettings
    127:127:int getWeight() -> getWeight
    131:131:boolean isItalic() -> isItalic
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry:
    82:86:void <init>(androidx.core.provider.FontRequest,int,int) -> <init>
    93:93:int getFetchStrategy() -> getFetchStrategy
    89:89:androidx.core.provider.FontRequest getRequest() -> getRequest
    97:97:int getTimeout() -> getTimeout
androidx.core.content.res.ResourcesCompat -> androidx.core.content.res.ResourcesCompat:
    156:157:int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getColor
    93:94:android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getDrawable
    347:350:android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback) -> getFont
    370:378:android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean) -> loadFont
    390:449:android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean) -> loadFont
androidx.core.content.res.ResourcesCompat$FontCallback -> androidx.core.content.res.ResourcesCompat$FontCallback:
    248:248:void <init>() -> <init>
    297:306:void callbackFailAsync(int,android.os.Handler) -> callbackFailAsync
    278:287:void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler) -> callbackSuccessAsync
androidx.core.content.res.ResourcesCompat$FontCallback$1 -> androidx.core.content.res.ResourcesCompat$FontCallback$1:
    281:281:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback,android.graphics.Typeface) -> <init>
    284:285:void run() -> run
androidx.core.content.res.ResourcesCompat$FontCallback$2 -> androidx.core.content.res.ResourcesCompat$FontCallback$2:
    300:300:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback,int) -> <init>
    303:304:void run() -> run
androidx.core.content.res.ResourcesCompat$ThemeCompat -> androidx.core.content.res.ResourcesCompat$ThemeCompat:
    474:479:void rebase(android.content.res.Resources$Theme) -> rebase
androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi23 -> androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi23:
    492:492:void <clinit>() -> <clinit>
    498:517:void rebase(android.content.res.Resources$Theme) -> rebase
androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi29 -> androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi29:
    485:486:void rebase(android.content.res.Resources$Theme) -> rebase
androidx.core.graphics.ColorUtils -> androidx.core.graphics.ColorUtils:
    45:45:void <clinit>() -> <clinit>
    131:131:int compositeAlpha(int,int) -> compositeAlpha
    53:64:int compositeColors(int,int) -> compositeColors
    135:136:int compositeComponent(int,int,int,int,int) -> compositeComponent
    365:368:int setAlphaComponent(int,int) -> setAlphaComponent
androidx.core.graphics.Insets -> androidx.core.graphics.Insets:
    36:36:void <clinit>() -> <clinit>
    43:48:void <init>(int,int,int,int) -> <init>
    89:99:boolean equals(java.lang.Object) -> equals
    104:108:int hashCode() -> hashCode
    63:66:androidx.core.graphics.Insets of(int,int,int,int) -> of
    146:146:android.graphics.Insets toPlatformInsets() -> toPlatformInsets
    113:113:java.lang.String toString() -> toString
androidx.core.graphics.TypefaceCompat -> androidx.core.graphics.TypefaceCompat:
    48:67:void <clinit>() -> <clinit>
    194:206:android.graphics.Typeface create(android.content.Context,android.graphics.Typeface,int) -> create
    164:164:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    109:135:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean) -> createFromResourcesFamilyXml
    147:153:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    92:92:java.lang.String createResourceUid(android.content.res.Resources,int,int) -> createResourceUid
    80:80:android.graphics.Typeface findFromCache(android.content.res.Resources,int,int) -> findFromCache
androidx.core.graphics.TypefaceCompatApi21Impl -> androidx.core.graphics.TypefaceCompatApi21Impl:
    65:65:void <clinit>() -> <clinit>
    54:54:void <init>() -> <init>
    136:142:boolean addFontWeightStyle(java.lang.Object,java.lang.String,int,boolean) -> addFontWeightStyle
    123:130:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    176:199:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    149:169:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    101:109:java.io.File getFile(android.os.ParcelFileDescriptor) -> getFile
    68:97:void init() -> init
    114:118:java.lang.Object newFamily() -> newFamily
androidx.core.graphics.TypefaceCompatApi24Impl -> androidx.core.graphics.TypefaceCompatApi24Impl:
    69:88:void <clinit>() -> <clinit>
    51:51:void <init>() -> <init>
    112:116:boolean addFontWeightStyle(java.lang.Object,java.nio.ByteBuffer,int,int,boolean) -> addFontWeightStyle
    122:127:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    167:181:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    135:160:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    94:98:boolean isUsable() -> isUsable
    103:105:java.lang.Object newFamily() -> newFamily
androidx.core.graphics.TypefaceCompatApi26Impl -> androidx.core.graphics.TypefaceCompatApi26Impl:
    74:108:void <init>() -> <init>
    194:196:void abortCreation(java.lang.Object) -> abortCreation
    140:144:boolean addFontFromAssetManager(android.content.Context,java.lang.Object,java.lang.String,int,int,int,android.graphics.fonts.FontVariationAxis[]) -> addFontFromAssetManager
    155:158:boolean addFontFromBuffer(java.lang.Object,java.nio.ByteBuffer,int,int,int) -> addFontFromBuffer
    169:174:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    203:221:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    229:281:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    291:307:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    183:185:boolean freeze(java.lang.Object) -> freeze
    114:118:boolean isFontFamilyPrivateAPIAvailable() -> isFontFamilyPrivateAPIAvailable
    127:129:java.lang.Object newFamily() -> newFamily
    343:343:java.lang.reflect.Method obtainAbortCreationMethod(java.lang.Class) -> obtainAbortCreationMethod
    326:326:java.lang.reflect.Method obtainAddFontFromAssetManagerMethod(java.lang.Class) -> obtainAddFontFromAssetManagerMethod
    333:333:java.lang.reflect.Method obtainAddFontFromBufferMethod(java.lang.Class) -> obtainAddFontFromBufferMethod
    348:352:java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class) -> obtainCreateFromFamiliesWithDefaultMethod
    316:316:java.lang.Class obtainFontFamily() -> obtainFontFamily
    321:321:java.lang.reflect.Constructor obtainFontFamilyCtor(java.lang.Class) -> obtainFontFamilyCtor
    339:339:java.lang.reflect.Method obtainFreezeMethod(java.lang.Class) -> obtainFreezeMethod
androidx.core.graphics.TypefaceCompatApi28Impl -> androidx.core.graphics.TypefaceCompatApi28Impl:
    36:36:void <init>() -> <init>
    49:54:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    61:65:java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class) -> obtainCreateFromFamiliesWithDefaultMethod
androidx.core.graphics.TypefaceCompatApi29Impl -> androidx.core.graphics.TypefaceCompatApi29Impl:
    44:44:void <init>() -> <init>
    104:134:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    62:96:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    144:155:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    48:48:androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int) -> findBestInfo
androidx.core.graphics.TypefaceCompatBaseImpl -> androidx.core.graphics.TypefaceCompatBaseImpl:
    45:52:void <init>() -> <init>
    114:130:android.graphics.Typeface createFromInputStream(android.content.Context,java.io.InputStream) -> createFromInputStream
    187:203:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    61:76:java.lang.Object findBestFont(java.lang.Object[],int,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor) -> findBestFont
    99:99:androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int) -> findBestInfo
androidx.core.graphics.TypefaceCompatBaseImpl$1 -> androidx.core.graphics.TypefaceCompatBaseImpl$1:
    99:99:void <init>(androidx.core.graphics.TypefaceCompatBaseImpl) -> <init>
    99:99:int getWeight(java.lang.Object) -> getWeight
    102:102:int getWeight(androidx.core.provider.FontsContractCompat$FontInfo) -> getWeight
    99:99:boolean isItalic(java.lang.Object) -> isItalic
    107:107:boolean isItalic(androidx.core.provider.FontsContractCompat$FontInfo) -> isItalic
androidx.core.graphics.TypefaceCompatUtil -> androidx.core.graphics.TypefaceCompatUtil:
    175:181:void closeQuietly(java.io.Closeable) -> closeQuietly
    124:135:java.nio.ByteBuffer copyToDirectBuffer(android.content.Context,android.content.res.Resources,int) -> copyToDirectBuffer
    142:158:boolean copyToFile(java.io.File,java.io.InputStream) -> copyToFile
    165:171:boolean copyToFile(java.io.File,android.content.res.Resources,int) -> copyToFile
    63:79:java.io.File getTempFile(android.content.Context) -> getTempFile
    88:93:java.nio.ByteBuffer mmap(java.io.File) -> mmap
    103:114:java.nio.ByteBuffer mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri) -> mmap
androidx.core.graphics.drawable.DrawableCompat -> androidx.core.graphics.drawable.DrawableCompat:
    221:252:void clearColorFilter(android.graphics.drawable.Drawable) -> clearColorFilter
    391:392:int getLayoutDirection(android.graphics.drawable.Drawable) -> getLayoutDirection
    95:96:boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    78:81:void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    110:113:void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    123:126:void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    354:355:boolean setLayoutDirection(android.graphics.drawable.Drawable,int) -> setLayoutDirection
    135:140:void setTint(android.graphics.drawable.Drawable,int) -> setTint
    149:154:void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    163:168:void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
    334:337:android.graphics.drawable.Drawable unwrap(android.graphics.drawable.Drawable) -> unwrap
    307:308:android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
androidx.core.graphics.drawable.IconCompat -> androidx.core.graphics.drawable.IconCompat:
    198:198:void <clinit>() -> <clinit>
    146:364:void <init>() -> <init>
    412:418:int getResId() -> getResId
    1104:1117:int getResId(android.graphics.drawable.Icon) -> getResId
    394:400:java.lang.String getResPackage() -> getResPackage
    1075:1088:java.lang.String getResPackage(android.graphics.drawable.Icon) -> getResPackage
    894:924:void onPostParceling() -> onPostParceling
    857:890:void onPreParceling(boolean) -> onPreParceling
    815:852:java.lang.String toString() -> toString
    927:934:java.lang.String typeToString(int) -> typeToString
androidx.core.graphics.drawable.IconCompatParcelizer -> androidx.core.graphics.drawable.IconCompatParcelizer:
    11:11:void <init>() -> <init>
    14:23:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    28:51:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.core.math.MathUtils -> androidx.core.math.MathUtils:
    81:86:int clamp(int,int,int) -> clamp
androidx.core.os.TraceCompat -> androidx.core.os.TraceCompat:
    46:62:void <clinit>() -> <clinit>
    100:103:void beginSection(java.lang.String) -> beginSection
    113:116:void endSection() -> endSection
androidx.core.provider.FontRequest -> androidx.core.provider.FontRequest:
    56:64:void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List) -> <init>
    125:125:java.util.List getCertificates() -> getCertificates
    137:137:int getCertificatesArrayResId() -> getCertificatesArrayResId
    143:143:java.lang.String getIdentifier() -> getIdentifier
    95:95:java.lang.String getProviderAuthority() -> getProviderAuthority
    104:104:java.lang.String getProviderPackage() -> getProviderPackage
    113:113:java.lang.String getQuery() -> getQuery
    148:167:java.lang.String toString() -> toString
androidx.core.provider.FontsContractCompat -> androidx.core.provider.FontsContractCompat:
    172:784:void <clinit>() -> <clinit>
    813:817:java.util.List convertToByteArrayList(android.content.pm.Signature[]) -> convertToByteArrayList
    801:809:boolean equalsByteArrayList(java.util.List,java.util.List) -> equalsByteArrayList
    727:735:androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest) -> fetchFonts
    777:781:java.util.List getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources) -> getCertificates
    824:881:androidx.core.provider.FontsContractCompat$FontInfo[] getFontFromProvider(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal) -> getFontFromProvider
    184:198:androidx.core.provider.FontsContractCompat$TypefaceResult getFontInternal(android.content.Context,androidx.core.provider.FontRequest,int) -> getFontInternal
    232:319:android.graphics.Typeface getFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,int,int) -> getFontSync
    744:773:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources) -> getProvider
    689:704:java.util.Map prepareFontData(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal) -> prepareFontData
androidx.core.provider.FontsContractCompat$1 -> androidx.core.provider.FontsContractCompat$1:
    254:254:void <init>(android.content.Context,androidx.core.provider.FontRequest,int,java.lang.String) -> <init>
    254:254:java.lang.Object call() -> call
    257:261:androidx.core.provider.FontsContractCompat$TypefaceResult call() -> call
androidx.core.provider.FontsContractCompat$2 -> androidx.core.provider.FontsContractCompat$2:
    273:273:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler) -> <init>
    273:273:void onReply(java.lang.Object) -> onReply
    276:284:void onReply(androidx.core.provider.FontsContractCompat$TypefaceResult) -> onReply
androidx.core.provider.FontsContractCompat$3 -> androidx.core.provider.FontsContractCompat$3:
    303:303:void <init>(java.lang.String) -> <init>
    303:303:void onReply(java.lang.Object) -> onReply
    307:317:void onReply(androidx.core.provider.FontsContractCompat$TypefaceResult) -> onReply
androidx.core.provider.FontsContractCompat$5 -> androidx.core.provider.FontsContractCompat$5:
    784:784:void <init>() -> <init>
    784:784:int compare(java.lang.Object,java.lang.Object) -> compare
    787:795:int compare(byte[],byte[]) -> compare
androidx.core.provider.FontsContractCompat$FontFamilyResult -> androidx.core.provider.FontsContractCompat$FontFamilyResult:
    427:430:void <init>(int,androidx.core.provider.FontsContractCompat$FontInfo[]) -> <init>
    437:437:androidx.core.provider.FontsContractCompat$FontInfo[] getFonts() -> getFonts
    433:433:int getStatusCode() -> getStatusCode
androidx.core.provider.FontsContractCompat$FontInfo -> androidx.core.provider.FontsContractCompat$FontInfo:
    346:352:void <init>(android.net.Uri,int,int,boolean,int) -> <init>
    388:388:int getResultCode() -> getResultCode
    365:365:int getTtcIndex() -> getTtcIndex
    358:358:android.net.Uri getUri() -> getUri
    372:372:int getWeight() -> getWeight
    379:379:boolean isItalic() -> isItalic
androidx.core.provider.FontsContractCompat$TypefaceResult -> androidx.core.provider.FontsContractCompat$TypefaceResult:
    211:214:void <init>(android.graphics.Typeface,int) -> <init>
androidx.core.provider.SelfDestructiveThread -> androidx.core.provider.SelfDestructiveThread:
    44:84:void <init>(java.lang.String,int,int) -> <init>
    223:233:void onDestruction() -> onDestruction
    214:220:void onInvokeRunnable(java.lang.Runnable) -> onInvokeRunnable
    107:117:void post(java.lang.Runnable) -> post
    136:155:void postAndReply(java.util.concurrent.Callable,androidx.core.provider.SelfDestructiveThread$ReplyCallback) -> postAndReply
    166:210:java.lang.Object postAndWait(java.util.concurrent.Callable,int) -> postAndWait
androidx.core.provider.SelfDestructiveThread$1 -> androidx.core.provider.SelfDestructiveThread$1:
    58:58:void <init>(androidx.core.provider.SelfDestructiveThread) -> <init>
    61:69:boolean handleMessage(android.os.Message) -> handleMessage
androidx.core.provider.SelfDestructiveThread$2 -> androidx.core.provider.SelfDestructiveThread$2:
    137:137:void <init>(androidx.core.provider.SelfDestructiveThread,java.util.concurrent.Callable,android.os.Handler,androidx.core.provider.SelfDestructiveThread$ReplyCallback) -> <init>
    142:153:void run() -> run
androidx.core.provider.SelfDestructiveThread$2$1 -> androidx.core.provider.SelfDestructiveThread$2$1:
    147:147:void <init>(androidx.core.provider.SelfDestructiveThread$2,java.lang.Object) -> <init>
    150:151:void run() -> run
androidx.core.provider.SelfDestructiveThread$3 -> androidx.core.provider.SelfDestructiveThread$3:
    171:171:void <init>(androidx.core.provider.SelfDestructiveThread,java.util.concurrent.atomic.AtomicReference,java.util.concurrent.Callable,java.util.concurrent.locks.ReentrantLock,java.util.concurrent.atomic.AtomicBoolean,java.util.concurrent.locks.Condition) -> <init>
    175:186:void run() -> run
androidx.core.text.PrecomputedTextCompat -> androidx.core.text.PrecomputedTextCompat:
    73:74:void <clinit>() -> <clinit>
    754:754:char charAt(int) -> charAt
    523:523:androidx.core.text.PrecomputedTextCompat$Params getParams() -> getParams
    512:515:android.text.PrecomputedText getPrecomputedText() -> getPrecomputedText
    729:729:int getSpanEnd(java.lang.Object) -> getSpanEnd
    734:734:int getSpanFlags(java.lang.Object) -> getSpanFlags
    724:724:int getSpanStart(java.lang.Object) -> getSpanStart
    714:717:java.lang.Object[] getSpans(int,int,java.lang.Class) -> getSpans
    749:749:int length() -> length
    739:739:int nextSpanTransition(int,int,java.lang.Class) -> nextSpanTransition
    695:704:void removeSpan(java.lang.Object) -> removeSpan
    678:687:void setSpan(java.lang.Object,int,int,int) -> setSpan
    759:759:java.lang.CharSequence subSequence(int,int) -> subSequence
    765:765:java.lang.String toString() -> toString
androidx.core.text.PrecomputedTextCompat$Params -> androidx.core.text.PrecomputedTextCompat$Params:
    197:211:void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int) -> <init>
    214:220:void <init>(android.text.PrecomputedText$Params) -> <init>
    332:347:boolean equals(java.lang.Object) -> equals
    275:322:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params) -> equalsWithoutTextDirection
    253:253:int getBreakStrategy() -> getBreakStrategy
    265:265:int getHyphenationFrequency() -> getHyphenationFrequency
    241:241:android.text.TextDirectionHeuristic getTextDirection() -> getTextDirection
    228:228:android.text.TextPaint getTextPaint() -> getTextPaint
    352:356:int hashCode() -> hashCode
    379:400:java.lang.String toString() -> toString
androidx.core.text.PrecomputedTextCompat$Params$Builder -> androidx.core.text.PrecomputedTextCompat$Params$Builder:
    116:129:void <init>(android.text.TextPaint) -> <init>
    191:191:androidx.core.text.PrecomputedTextCompat$Params build() -> build
    145:146:androidx.core.text.PrecomputedTextCompat$Params$Builder setBreakStrategy(int) -> setBreakStrategy
    163:164:androidx.core.text.PrecomputedTextCompat$Params$Builder setHyphenationFrequency(int) -> setHyphenationFrequency
    181:182:androidx.core.text.PrecomputedTextCompat$Params$Builder setTextDirection(android.text.TextDirectionHeuristic) -> setTextDirection
androidx.core.text.TextUtilsCompat -> androidx.core.text.TextUtilsCompat:
    33:33:void <clinit>() -> <clinit>
    90:91:int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
androidx.core.util.DebugUtils -> androidx.core.util.DebugUtils:
    32:47:void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
androidx.core.util.LogWriter -> androidx.core.util.LogWriter:
    35:45:void <init>(java.lang.String) -> <init>
    48:49:void close() -> close
    52:53:void flush() -> flush
    68:72:void flushBuilder() -> flushBuilder
    56:65:void write(char[],int,int) -> write
androidx.core.util.ObjectsCompat -> androidx.core.util.ObjectsCompat:
    50:51:boolean equals(java.lang.Object,java.lang.Object) -> equals
    92:93:int hash(java.lang.Object[]) -> hash
androidx.core.util.Pools$SimplePool -> androidx.core.util.Pools$SimplePool:
    94:99:void <init>(int) -> <init>
    104:111:java.lang.Object acquire() -> acquire
    128:133:boolean isInPool(java.lang.Object) -> isInPool
    116:124:boolean release(java.lang.Object) -> release
androidx.core.util.Pools$SynchronizedPool -> androidx.core.util.Pools$SynchronizedPool:
    143:154:void <init>(int) -> <init>
    158:160:java.lang.Object acquire() -> acquire
    165:167:boolean release(java.lang.Object) -> release
androidx.core.util.Preconditions -> androidx.core.util.Preconditions:
    137:141:int checkArgumentNonnegative(int) -> checkArgumentNonnegative
    63:66:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    80:83:java.lang.Object checkNotNull(java.lang.Object,java.lang.Object) -> checkNotNull
androidx.core.view.AccessibilityDelegateCompat -> androidx.core.view.AccessibilityDelegateCompat:
    130:130:void <clinit>() -> <clinit>
    139:140:void <init>() -> <init>
    146:149:void <init>(android.view.View$AccessibilityDelegate) -> <init>
    216:216:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    318:324:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    396:398:java.util.List getActionList(android.view.View) -> getActionList
    155:155:android.view.View$AccessibilityDelegate getBridge() -> getBridge
    382:391:boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View) -> isSpanStillValid
    256:257:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    275:277:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    236:237:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    300:300:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    344:360:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    365:378:boolean performClickableSpanAction(int,android.view.View) -> performClickableSpanAction
    173:174:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    195:196:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter -> androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter:
    64:66:void <init>(androidx.core.view.AccessibilityDelegateCompat) -> <init>
    71:71:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    118:121:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    76:77:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    82:92:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    96:97:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    102:102:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    126:126:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    107:108:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    112:113:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.core.view.ActionProvider -> androidx.core.view.ActionProvider:
    139:141:void <init>(android.content.Context) -> <init>
    256:256:boolean hasSubMenu() -> hasSubMenu
    196:196:boolean isVisible() -> isVisible
    170:170:android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    243:243:boolean onPerformDefaultAction() -> onPerformDefaultAction
    269:269:void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
    182:182:boolean overridesItemVisibility() -> overridesItemVisibility
    312:314:void reset() -> reset
    289:290:void setSubUiVisibilityListener(androidx.core.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
    299:305:void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener) -> setVisibilityListener
androidx.core.view.DisplayCutoutCompat -> androidx.core.view.DisplayCutoutCompat:
    51:53:void <init>(java.lang.Object) -> <init>
    110:118:boolean equals(java.lang.Object) -> equals
    123:123:int hashCode() -> hashCode
    128:128:java.lang.String toString() -> toString
    132:132:androidx.core.view.DisplayCutoutCompat wrap(java.lang.Object) -> wrap
androidx.core.view.GravityCompat -> androidx.core.view.GravityCompat:
    64:69:void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    145:146:int getAbsoluteGravity(int,int) -> getAbsoluteGravity
androidx.core.view.KeyEventDispatcher -> androidx.core.view.KeyEventDispatcher:
    46:49:void <clinit>() -> <clinit>
    96:111:boolean actionBarOnMenuKeyEventPre28(android.app.ActionBar,android.view.KeyEvent) -> actionBarOnMenuKeyEventPre28
    115:138:boolean activitySuperDispatchKeyEventPre28(android.app.Activity,android.view.KeyEvent) -> activitySuperDispatchKeyEventPre28
    161:174:boolean dialogSuperDispatchKeyEventPre28(android.app.Dialog,android.view.KeyEvent) -> dialogSuperDispatchKeyEventPre28
    63:63:boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent) -> dispatchBeforeHierarchy
    80:92:boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent) -> dispatchKeyEvent
    142:157:android.content.DialogInterface$OnKeyListener getDialogKeyListenerPre28(android.app.Dialog) -> getDialogKeyListenerPre28
androidx.core.view.LayoutInflaterCompat -> androidx.core.view.LayoutInflaterCompat:
    140:153:void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> setFactory2
androidx.core.view.MarginLayoutParamsCompat -> androidx.core.view.MarginLayoutParamsCompat:
    61:62:int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    42:43:int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
androidx.core.view.MenuItemCompat -> androidx.core.view.MenuItemCompat:
    207:212:android.view.MenuItem setActionProvider(android.view.MenuItem,androidx.core.view.ActionProvider) -> setActionProvider
    463:468:void setAlphabeticShortcut(android.view.MenuItem,char,int) -> setAlphabeticShortcut
    322:327:void setContentDescription(android.view.MenuItem,java.lang.CharSequence) -> setContentDescription
    503:508:void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList) -> setIconTintList
    534:539:void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode) -> setIconTintMode
    418:423:void setNumericShortcut(android.view.MenuItem,char,int) -> setNumericShortcut
    351:356:void setTooltipText(android.view.MenuItem,java.lang.CharSequence) -> setTooltipText
androidx.core.view.MotionEventCompat -> androidx.core.view.MotionEventCompat:
    553:553:boolean isFromSource(android.view.MotionEvent,int) -> isFromSource
androidx.core.view.NestedScrollingChildHelper -> androidx.core.view.NestedScrollingChildHelper:
    56:58:void <init>(android.view.View) -> <init>
    348:355:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    368:375:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    288:288:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    302:335:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    204:204:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    218:218:boolean dispatchNestedScroll(int,int,int,int,int[],int) -> dispatchNestedScroll
    231:233:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    238:274:boolean dispatchNestedScrollInternal(int,int,int,int,int[],int,int[]) -> dispatchNestedScrollInternal
    404:410:android.view.ViewParent getNestedScrollingParentForType(int) -> getNestedScrollingParentForType
    425:428:int[] getTempNestedScrollConsumed() -> getTempNestedScrollConsumed
    100:100:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    114:114:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    86:86:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    70:74:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    414:422:void setNestedScrollingParentForType(int,android.view.ViewParent) -> setNestedScrollingParentForType
    129:129:boolean startNestedScroll(int) -> startNestedScroll
    145:164:boolean startNestedScroll(int,int) -> startNestedScroll
    175:176:void stopNestedScroll() -> stopNestedScroll
    186:191:void stopNestedScroll(int) -> stopNestedScroll
androidx.core.view.NestedScrollingParentHelper -> androidx.core.view.NestedScrollingParentHelper:
    50:51:void <init>(android.view.ViewGroup) -> <init>
    92:92:int getNestedScrollAxes() -> getNestedScrollAxes
    63:64:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    76:81:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    114:119:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
androidx.core.view.OneShotPreDrawListener -> androidx.core.view.OneShotPreDrawListener:
    43:47:void <init>(android.view.View,java.lang.Runnable) -> <init>
    59:65:androidx.core.view.OneShotPreDrawListener add(android.view.View,java.lang.Runnable) -> add
    70:72:boolean onPreDraw() -> onPreDraw
    90:91:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    95:96:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    80:86:void removeListener() -> removeListener
androidx.core.view.ViewCompat -> androidx.core.view.ViewCompat:
    461:4171:void <clinit>() -> <clinit>
    4056:4056:androidx.core.view.ViewCompat$AccessibilityViewProperty accessibilityHeadingProperty() -> accessibilityHeadingProperty
    2014:2022:androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    2601:2602:androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect) -> computeSystemWindowInsets
    2524:2534:androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    3879:3882:boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent) -> dispatchUnhandledKeyEventBeforeCallback
    3871:3874:boolean dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent) -> dispatchUnhandledKeyEventBeforeHierarchy
    3758:3759:int generateViewId() -> generateViewId
    935:938:android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View) -> getAccessibilityDelegateInternal
    944:965:android.view.View$AccessibilityDelegate getAccessibilityDelegateThroughReflection(android.view.View) -> getAccessibilityDelegateThroughReflection
    1735:1736:int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    3995:3995:java.lang.CharSequence getAccessibilityPaneTitle(android.view.View) -> getAccessibilityPaneTitle
    2692:2693:android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    2737:2738:android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    3418:3419:android.graphics.Rect getClipBounds(android.view.View) -> getClipBounds
    3539:3540:android.view.Display getDisplay(android.view.View) -> getDisplay
    2298:2299:float getElevation(android.view.View) -> getElevation
    2424:2425:boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    1091:1092:int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    772:775:int getImportantForAutofill(android.view.View) -> getImportantForAutofill
    1557:1558:int getLayoutDirection(android.view.View) -> getLayoutDirection
    1980:1981:int getMinimumHeight(android.view.View) -> getMinimumHeight
    1946:1947:int getMinimumWidth(android.view.View) -> getMinimumWidth
    1802:1803:int getPaddingEnd(android.view.View) -> getPaddingEnd
    1786:1787:int getPaddingStart(android.view.View) -> getPaddingStart
    1595:1596:android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    2581:2582:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View) -> getRootWindowInsets
    2355:2356:java.lang.String getTransitionName(android.view.View) -> getTransitionName
    2368:2369:int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    3265:3266:float getZ(android.view.View) -> getZ
    898:898:boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    3440:3441:boolean hasOnClickListeners(android.view.View) -> hasOnClickListeners
    2652:2653:boolean hasOverlappingRendering(android.view.View) -> hasOverlappingRendering
    978:979:boolean hasTransientState(android.view.View) -> hasTransientState
    4035:4036:boolean isAccessibilityHeading(android.view.View) -> isAccessibilityHeading
    3428:3429:boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
    3234:3235:boolean isLaidOut(android.view.View) -> isLaidOut
    2816:2817:boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    2665:2666:boolean isPaddingRelative(android.view.View) -> isPaddingRelative
    3922:3923:boolean isScreenReaderFocusable(android.view.View) -> isScreenReaderFocusable
    4146:4169:void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int) -> notifyViewAccessibilityStateChangedIfNeeded
    3343:3371:void offsetLeftAndRight(android.view.View,int) -> offsetLeftAndRight
    3295:3323:void offsetTopAndBottom(android.view.View,int) -> offsetTopAndBottom
    2496:2506:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
    3999:3999:androidx.core.view.ViewCompat$AccessibilityViewProperty paneTitleProperty() -> paneTitleProperty
    1007:1012:void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    1047:1052:void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    1069:1074:void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    2379:2384:void requestApplyInsets(android.view.View) -> requestApplyInsets
    513:517:void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int) -> saveAttributeDataForStyleable
    3927:3927:androidx.core.view.ViewCompat$AccessibilityViewProperty screenReaderFocusableProperty() -> screenReaderFocusableProperty
    714:719:void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    2678:2683:void setBackground(android.view.View,android.graphics.drawable.Drawable) -> setBackground
    2708:2727:void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    2755:2774:void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    3403:3406:void setClipBounds(android.view.View,android.graphics.Rect) -> setClipBounds
    2287:2290:void setElevation(android.view.View,float) -> setElevation
    2440:2441:void setFitsSystemWindows(android.view.View,boolean) -> setFitsSystemWindows
    992:995:void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    1118:1130:void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    816:819:void setImportantForAutofill(android.view.View,int) -> setImportantForAutofill
    2463:2479:void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    1823:1828:void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    3492:3495:void setScrollIndicators(android.view.View,int,int) -> setScrollIndicators
    2333:2341:void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    2857:2862:void stopNestedScroll(android.view.View) -> stopNestedScroll
    3002:3007:void stopNestedScroll(android.view.View,int) -> stopNestedScroll
androidx.core.view.ViewCompat$1 -> androidx.core.view.ViewCompat$1:
    2469:2469:void <init>(androidx.core.view.OnApplyWindowInsetsListener) -> <init>
    2472:2475:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
androidx.core.view.ViewCompat$3 -> androidx.core.view.ViewCompat$3:
    3928:3928:void <init>(int,java.lang.Class,int) -> <init>
    3928:3928:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    3933:3933:java.lang.Boolean frameworkGet(android.view.View) -> frameworkGet
androidx.core.view.ViewCompat$4 -> androidx.core.view.ViewCompat$4:
    4000:4000:void <init>(int,java.lang.Class,int,int) -> <init>
    4000:4000:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    4005:4005:java.lang.CharSequence frameworkGet(android.view.View) -> frameworkGet
androidx.core.view.ViewCompat$5 -> androidx.core.view.ViewCompat$5:
    4057:4057:void <init>(int,java.lang.Class,int) -> <init>
    4057:4057:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    4062:4062:java.lang.Boolean frameworkGet(android.view.View) -> frameworkGet
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager -> androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager:
    4174:4176:void <init>() -> <init>
    4216:4224:void checkPaneVisibility(android.view.View,boolean) -> checkPaneVisibility
    4181:4184:void onGlobalLayout() -> onGlobalLayout
    4190:4191:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    4196:4196:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    4228:4229:void registerForLayoutCallback(android.view.View) -> registerForLayoutCallback
androidx.core.view.ViewCompat$AccessibilityViewProperty -> androidx.core.view.ViewCompat$AccessibilityViewProperty:
    4085:4087:void <init>(int,java.lang.Class,int) -> <init>
    4090:4094:void <init>(int,java.lang.Class,int,int) -> <init>
    4127:4127:boolean extrasAvailable() -> extrasAvailable
    4123:4123:boolean frameworkAvailable() -> frameworkAvailable
    4112:4120:java.lang.Object get(android.view.View) -> get
androidx.core.view.ViewCompat$Api21Impl -> androidx.core.view.ViewCompat$Api21Impl:
    4430:4436:androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect) -> computeSystemWindowInsets
androidx.core.view.ViewCompat$Api23Impl -> androidx.core.view.ViewCompat$Api23Impl:
    4448:4448:android.view.WindowInsets getRootWindowInsets(android.view.View) -> getRootWindowInsets
androidx.core.view.ViewCompat$Api29Impl -> androidx.core.view.ViewCompat$Api29Impl:
    4461:4463:void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int) -> saveAttributeDataForStyleable
androidx.core.view.ViewCompat$UnhandledKeyEventManager -> androidx.core.view.ViewCompat$UnhandledKeyEventManager:
    4241:4241:void <clinit>() -> <clinit>
    4237:4256:void <init>() -> <init>
    4266:4272:androidx.core.view.ViewCompat$UnhandledKeyEventManager at(android.view.View) -> at
    4276:4290:boolean dispatch(android.view.View,android.view.KeyEvent) -> dispatch
    4295:4312:android.view.View dispatchInOrder(android.view.View,android.view.KeyEvent) -> dispatchInOrder
    4259:4262:android.util.SparseArray getCapturedKeys() -> getCapturedKeys
    4354:4364:boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent) -> onUnhandledKeyEvent
    4321:4349:boolean preDispatch(android.view.KeyEvent) -> preDispatch
    4394:4419:void recalcViewsWithUnhandled() -> recalcViewsWithUnhandled
androidx.core.view.ViewConfigurationCompat -> androidx.core.view.ViewConfigurationCompat:
    39:47:void <clinit>() -> <clinit>
    106:119:float getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getLegacyScrollFactor
    81:84:float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getScaledHorizontalScrollFactor
    128:131:int getScaledHoverSlop(android.view.ViewConfiguration) -> getScaledHoverSlop
    98:101:float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getScaledVerticalScrollFactor
    141:147:boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context) -> shouldShowMenuShortcutsWhenKeyboardPresent
androidx.core.view.ViewGroupCompat -> androidx.core.view.ViewGroupCompat:
    157:158:boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
androidx.core.view.ViewParentCompat -> androidx.core.view.ViewParentCompat:
    424:435:boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    461:472:boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
    384:400:void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[],int) -> onNestedPreScroll
    329:358:void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    248:266:void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    207:225:boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    282:298:void onStopNestedScroll(android.view.ViewParent,android.view.View,int) -> onStopNestedScroll
androidx.core.view.ViewPropertyAnimatorCompat -> androidx.core.view.ViewPropertyAnimatorCompat:
    30:39:void <init>(android.view.View) -> <init>
    138:141:androidx.core.view.ViewPropertyAnimatorCompat alpha(float) -> alpha
    464:467:void cancel() -> cancel
    237:240:long getDuration() -> getDuration
    123:126:androidx.core.view.ViewPropertyAnimatorCompat setDuration(long) -> setDuration
    254:257:androidx.core.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    729:737:androidx.core.view.ViewPropertyAnimatorCompat setListener(androidx.core.view.ViewPropertyAnimatorListener) -> setListener
    741:761:void setListenerInternal(android.view.View,androidx.core.view.ViewPropertyAnimatorListener) -> setListenerInternal
    286:289:androidx.core.view.ViewPropertyAnimatorCompat setStartDelay(long) -> setStartDelay
    776:790:androidx.core.view.ViewPropertyAnimatorCompat setUpdateListener(androidx.core.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
    644:647:void start() -> start
    183:186:androidx.core.view.ViewPropertyAnimatorCompat translationY(float) -> translationY
androidx.core.view.ViewPropertyAnimatorCompat$1 -> androidx.core.view.ViewPropertyAnimatorCompat$1:
    742:742:void <init>(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorListener,android.view.View) -> <init>
    745:746:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    750:751:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    755:756:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.core.view.ViewPropertyAnimatorCompat$2 -> androidx.core.view.ViewPropertyAnimatorCompat$2:
    780:780:void <init>(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorUpdateListener,android.view.View) -> <init>
    783:784:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.core.view.ViewPropertyAnimatorListenerAdapter -> androidx.core.view.ViewPropertyAnimatorListenerAdapter:
    27:27:void <init>() -> <init>
    48:48:void onAnimationCancel(android.view.View) -> onAnimationCancel
    34:34:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.core.view.WindowInsetsCompat -> androidx.core.view.WindowInsetsCompat:
    55:59:void <clinit>() -> <clinit>
    64:76:void <init>(android.view.WindowInsets) -> <init>
    83:102:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    410:410:androidx.core.view.WindowInsetsCompat consumeDisplayCutout() -> consumeDisplayCutout
    385:385:androidx.core.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    244:244:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    546:553:boolean equals(java.lang.Object) -> equals
    169:169:int getSystemWindowInsetBottom() -> getSystemWindowInsetBottom
    127:127:int getSystemWindowInsetLeft() -> getSystemWindowInsetLeft
    155:155:int getSystemWindowInsetRight() -> getSystemWindowInsetRight
    141:141:int getSystemWindowInsetTop() -> getSystemWindowInsetTop
    428:428:androidx.core.graphics.Insets getSystemWindowInsets() -> getSystemWindowInsets
    558:558:int hashCode() -> hashCode
    541:541:androidx.core.view.WindowInsetsCompat inset(int,int,int,int) -> inset
    837:844:androidx.core.graphics.Insets insetInsets(androidx.core.graphics.Insets,int,int,int,int) -> insetInsets
    216:216:boolean isConsumed() -> isConsumed
    265:267:androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int) -> replaceSystemWindowInsets
    569:569:android.view.WindowInsets toWindowInsets() -> toWindowInsets
    113:113:androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets) -> toWindowInsetsCompat
androidx.core.view.WindowInsetsCompat$Builder -> androidx.core.view.WindowInsetsCompat$Builder:
    856:864:void <init>() -> <init>
    871:879:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    996:996:androidx.core.view.WindowInsetsCompat build() -> build
    970:971:androidx.core.view.WindowInsetsCompat$Builder setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
    893:894:androidx.core.view.WindowInsetsCompat$Builder setSystemWindowInsets(androidx.core.graphics.Insets) -> setSystemWindowInsets
androidx.core.view.WindowInsetsCompat$BuilderImpl -> androidx.core.view.WindowInsetsCompat$BuilderImpl:
    1004:1005:void <init>() -> <init>
    1007:1009:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1019:1019:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
androidx.core.view.WindowInsetsCompat$BuilderImpl20 -> androidx.core.view.WindowInsetsCompat$BuilderImpl20:
    1032:1035:void <clinit>() -> <clinit>
    1039:1041:void <init>() -> <init>
    1043:1045:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1058:1058:androidx.core.view.WindowInsetsCompat build() -> build
    1069:1107:android.view.WindowInsets createWindowInsetsInstance() -> createWindowInsetsInstance
    1049:1053:void setSystemWindowInsets(androidx.core.graphics.Insets) -> setSystemWindowInsets
androidx.core.view.WindowInsetsCompat$BuilderImpl29 -> androidx.core.view.WindowInsetsCompat$BuilderImpl29:
    1115:1117:void <init>() -> <init>
    1119:1124:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1159:1159:androidx.core.view.WindowInsetsCompat build() -> build
    1148:1149:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
    1128:1129:void setSystemWindowInsets(androidx.core.graphics.Insets) -> setSystemWindowInsets
androidx.core.view.WindowInsetsCompat$Impl -> androidx.core.view.WindowInsetsCompat$Impl:
    575:577:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    604:604:androidx.core.view.WindowInsetsCompat consumeDisplayCutout() -> consumeDisplayCutout
    594:594:androidx.core.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    589:589:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    643:650:boolean equals(java.lang.Object) -> equals
    599:599:androidx.core.view.DisplayCutoutCompat getDisplayCutout() -> getDisplayCutout
    614:614:androidx.core.graphics.Insets getStableInsets() -> getStableInsets
    609:609:androidx.core.graphics.Insets getSystemWindowInsets() -> getSystemWindowInsets
    656:657:int hashCode() -> hashCode
    637:637:androidx.core.view.WindowInsetsCompat inset(int,int,int,int) -> inset
    584:584:boolean isConsumed() -> isConsumed
    580:580:boolean isRound() -> isRound
androidx.core.view.WindowInsetsCompat$Impl20 -> androidx.core.view.WindowInsetsCompat$Impl20:
    667:672:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    675:676:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20) -> <init>
    686:693:androidx.core.graphics.Insets getSystemWindowInsets() -> getSystemWindowInsets
    699:702:androidx.core.view.WindowInsetsCompat inset(int,int,int,int) -> inset
    680:680:boolean isRound() -> isRound
androidx.core.view.WindowInsetsCompat$Impl21 -> androidx.core.view.WindowInsetsCompat$Impl21:
    708:712:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    708:716:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21) -> <init>
    726:726:androidx.core.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    732:732:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    738:745:androidx.core.graphics.Insets getStableInsets() -> getStableInsets
    720:720:boolean isConsumed() -> isConsumed
androidx.core.view.WindowInsetsCompat$Impl28 -> androidx.core.view.WindowInsetsCompat$Impl28:
    752:753:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    756:757:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28) -> <init>
    768:768:androidx.core.view.WindowInsetsCompat consumeDisplayCutout() -> consumeDisplayCutout
    773:777:boolean equals(java.lang.Object) -> equals
    762:762:androidx.core.view.DisplayCutoutCompat getDisplayCutout() -> getDisplayCutout
    782:782:int hashCode() -> hashCode
androidx.core.view.WindowInsetsCompat$Impl29 -> androidx.core.view.WindowInsetsCompat$Impl29:
    789:795:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    789:799:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29) -> <init>
    832:832:androidx.core.view.WindowInsetsCompat inset(int,int,int,int) -> inset
androidx.core.view.accessibility.AccessibilityClickableSpanCompat -> androidx.core.view.accessibility.AccessibilityClickableSpanCompat:
    55:59:void <init>(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat,int) -> <init>
    69:72:void onClick(android.view.View) -> onClick
androidx.core.view.accessibility.AccessibilityEventCompat -> androidx.core.view.accessibility.AccessibilityEventCompat:
    310:311:int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> getContentChangeTypes
    291:294:void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
androidx.core.view.accessibility.AccessibilityManagerCompat -> androidx.core.view.accessibility.AccessibilityManagerCompat:
    168:172:boolean addTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener) -> addTouchExplorationStateChangeListener
    187:191:boolean removeTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener) -> removeTouchExplorationStateChangeListener
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper -> androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper:
    204:206:void <init>(androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener) -> <init>
    215:223:boolean equals(java.lang.Object) -> equals
    210:210:int hashCode() -> hashCode
    228:229:void onTouchExplorationStateChanged(boolean) -> onTouchExplorationStateChanged
androidx.core.view.accessibility.AccessibilityNodeInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat:
    1608:1608:void <clinit>() -> <clinit>
    1202:1639:void <init>(android.view.accessibility.AccessibilityNodeInfo) -> <init>
    1934:1935:void addAction(int) -> addAction
    1967:1970:void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> addAction
    1846:1847:void addChild(android.view.View) -> addChild
    2712:2716:void addSpanLocationToExtras(android.text.style.ClickableSpan,android.text.Spanned,int) -> addSpanLocationToExtras
    2641:2656:void addSpansToExtras(java.lang.CharSequence,android.view.View) -> addSpansToExtras
    2703:2709:void clearExtrasSpans() -> clearExtrasSpans
    3984:4007:boolean equals(java.lang.Object) -> equals
    1938:1947:java.util.List extrasIntList(java.lang.String) -> extrasIntList
    2977:2990:java.util.List getActionList() -> getActionList
    4088:4162:java.lang.String getActionSymbolicName(int) -> getActionSymbolicName
    1919:1919:int getActions() -> getActions
    2164:2165:void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    2196:2197:void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    2579:2579:java.lang.CharSequence getClassName() -> getClassName
    2678:2682:android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence) -> getClickableSpans
    2739:2739:java.lang.CharSequence getContentDescription() -> getContentDescription
    3307:3308:android.os.Bundle getExtras() -> getExtras
    2659:2664:android.util.SparseArray getOrCreateSpansFromViewTags(android.view.View) -> getOrCreateSpansFromViewTags
    2555:2555:java.lang.CharSequence getPackageName() -> getPackageName
    2669:2669:android.util.SparseArray getSpansFromViewTags(android.view.View) -> getSpansFromViewTags
    2603:2617:java.lang.CharSequence getText() -> getText
    2798:2799:java.lang.String getViewIdResourceName() -> getViewIdResourceName
    2699:2699:boolean hasSpans() -> hasSpans
    3979:3979:int hashCode() -> hashCode
    2687:2695:int idForClickableSpan(android.text.style.ClickableSpan,android.util.SparseArray) -> idForClickableSpan
    2347:2348:boolean isAccessibilityFocused() -> isAccessibilityFocused
    2220:2220:boolean isCheckable() -> isCheckable
    2244:2244:boolean isChecked() -> isChecked
    2402:2402:boolean isClickable() -> isClickable
    2450:2450:boolean isEnabled() -> isEnabled
    2268:2268:boolean isFocusable() -> isFocusable
    2292:2292:boolean isFocused() -> isFocused
    2426:2426:boolean isLongClickable() -> isLongClickable
    2474:2474:boolean isPassword() -> isPassword
    2498:2498:boolean isScrollable() -> isScrollable
    2378:2378:boolean isSelected() -> isSelected
    2316:2317:boolean isVisibleToUser() -> isVisibleToUser
    1715:1715:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    2029:2030:boolean performAction(int,android.os.Bundle) -> performAction
    2765:2766:void recycle() -> recycle
    1992:1993:boolean removeAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> removeAction
    2719:2731:void removeCollectedSpans(android.view.View) -> removeCollectedSpans
    2367:2370:void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    4072:4079:void setBooleanProperty(int,boolean) -> setBooleanProperty
    2187:2188:void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    2211:2212:void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    2235:2236:void setCheckable(boolean) -> setCheckable
    2259:2260:void setChecked(boolean) -> setChecked
    2594:2595:void setClassName(java.lang.CharSequence) -> setClassName
    2417:2418:void setClickable(boolean) -> setClickable
    2902:2908:void setCollectionInfo(java.lang.Object) -> setCollectionInfo
    2911:2916:void setCollectionItemInfo(java.lang.Object) -> setCollectionItemInfo
    2754:2755:void setContentDescription(java.lang.CharSequence) -> setContentDescription
    2465:2466:void setEnabled(boolean) -> setEnabled
    2283:2284:void setFocusable(boolean) -> setFocusable
    2307:2308:void setFocused(boolean) -> setFocused
    3831:3836:void setHeading(boolean) -> setHeading
    2441:2442:void setLongClickable(boolean) -> setLongClickable
    2570:2571:void setPackageName(java.lang.CharSequence) -> setPackageName
    3707:3712:void setPaneTitle(java.lang.CharSequence) -> setPaneTitle
    2117:2120:void setParent(android.view.View) -> setParent
    3759:3764:void setScreenReaderFocusable(boolean) -> setScreenReaderFocusable
    2513:2514:void setScrollable(boolean) -> setScrollable
    2393:2394:void setSelected(boolean) -> setSelected
    1724:1727:void setSource(android.view.View) -> setSource
    2336:2339:void setVisibleToUser(boolean) -> setVisibleToUser
    4014:4068:java.lang.String toString() -> toString
    1655:1655:android.view.accessibility.AccessibilityNodeInfo unwrap() -> unwrap
    1648:1648:androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrap(android.view.accessibility.AccessibilityNodeInfo) -> wrap
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat:
    103:544:void <clinit>() -> <clinit>
    564:565:void <init>(int,java.lang.CharSequence) -> <init>
    582:583:void <init>(java.lang.Object) -> <init>
    587:588:void <init>(int,java.lang.CharSequence,java.lang.Class) -> <init>
    592:601:void <init>(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class) -> <init>
    675:690:boolean equals(java.lang.Object) -> equals
    609:610:int getId() -> getId
    623:624:java.lang.CharSequence getLabel() -> getLabel
    670:670:int hashCode() -> hashCode
    639:655:boolean perform(android.view.View,android.os.Bundle) -> perform
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat:
    764:766:void <init>(java.lang.Object) -> <init>
    734:735:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int) -> obtain
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat:
    888:890:void <init>(java.lang.Object) -> <init>
    855:856:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean) -> obtain
androidx.core.view.accessibility.AccessibilityNodeProviderCompat -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat:
    120:122:void <init>(java.lang.Object) -> <init>
    128:128:java.lang.Object getProvider() -> getProvider
androidx.core.view.accessibility.AccessibilityRecordCompat -> androidx.core.view.accessibility.AccessibilityRecordCompat:
    508:511:void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollX
    558:561:void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollY
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments:
    46:46:void <init>() -> <init>
    54:55:void setBundle(android.os.Bundle) -> setBundle
androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments:
    64:64:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments:
    98:98:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments:
    183:183:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments:
    148:148:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments:
    169:169:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments:
    113:113:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments:
    133:133:void <init>() -> <init>
androidx.core.widget.AutoScrollHelper -> androidx.core.widget.AutoScrollHelper:
    195:195:void <clinit>() -> <clinit>
    138:226:void <init>(android.view.View) -> <init>
    687:692:void cancelTargetTouch() -> cancelTargetTouch
    549:568:float computeTargetVelocity(int,float,float,float) -> computeTargetVelocity
    663:668:int constrain(int,int,int) -> constrain
    673:678:float constrain(float,float,float) -> constrain
    634:659:float constrainEdgeValue(float,float) -> constrainEdgeValue
    617:630:float getEdgeValue(float,float,float,float) -> getEdgeValue
    466:495:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    538:545:void requestStop() -> requestStop
    420:421:androidx.core.widget.AutoScrollHelper setActivationDelay(int) -> setActivationDelay
    359:360:androidx.core.widget.AutoScrollHelper setEdgeType(int) -> setEdgeType
    236:241:androidx.core.widget.AutoScrollHelper setEnabled(boolean) -> setEnabled
    402:404:androidx.core.widget.AutoScrollHelper setMaximumEdges(float,float) -> setMaximumEdges
    296:298:androidx.core.widget.AutoScrollHelper setMaximumVelocity(float,float) -> setMaximumVelocity
    315:317:androidx.core.widget.AutoScrollHelper setMinimumVelocity(float,float) -> setMinimumVelocity
    452:453:androidx.core.widget.AutoScrollHelper setRampDownDuration(int) -> setRampDownDuration
    436:437:androidx.core.widget.AutoScrollHelper setRampUpDuration(int) -> setRampUpDuration
    379:381:androidx.core.widget.AutoScrollHelper setRelativeEdges(float,float) -> setRelativeEdges
    337:339:androidx.core.widget.AutoScrollHelper setRelativeVelocity(float,float) -> setRelativeVelocity
    502:507:boolean shouldAnimate() -> shouldAnimate
    514:530:void startAnimating() -> startAnimating
androidx.core.widget.AutoScrollHelper$ClampedScroller -> androidx.core.widget.AutoScrollHelper$ClampedScroller:
    756:762:void <init>() -> <init>
    831:843:void computeScrollDelta() -> computeScrollDelta
    869:869:int getDeltaX() -> getDeltaX
    877:877:int getDeltaY() -> getDeltaY
    857:857:int getHorizontalDirection() -> getHorizontalDirection
    800:808:float getValueAt(long) -> getValueAt
    861:861:int getVerticalDirection() -> getVerticalDirection
    820:820:float interpolateValue(float) -> interpolateValue
    795:796:boolean isFinished() -> isFinished
    788:792:void requestStop() -> requestStop
    769:770:void setRampDownDuration(int) -> setRampDownDuration
    765:766:void setRampUpDuration(int) -> setRampUpDuration
    852:854:void setTargetVelocity(float,float) -> setTargetVelocity
    776:782:void start() -> start
androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable -> androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable:
    695:696:void <init>(androidx.core.widget.AutoScrollHelper) -> <init>
    700:728:void run() -> run
androidx.core.widget.AutoSizeableTextView -> androidx.core.widget.AutoSizeableTextView:
    39:39:void <clinit>() -> <clinit>
androidx.core.widget.CompoundButtonCompat -> androidx.core.widget.CompoundButtonCompat:
    123:124:android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> getButtonDrawable
    57:62:void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> setButtonTintList
    93:98:void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> setButtonTintMode
androidx.core.widget.EdgeEffectCompat -> androidx.core.widget.EdgeEffectCompat:
    152:157:void onPull(android.widget.EdgeEffect,float,float) -> onPull
androidx.core.widget.ImageViewCompat -> androidx.core.widget.ImageViewCompat:
    37:38:android.content.res.ColorStateList getImageTintList(android.widget.ImageView) -> getImageTintList
    74:75:android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView) -> getImageTintMode
    50:67:void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList) -> setImageTintList
    88:105:void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode) -> setImageTintMode
androidx.core.widget.ListViewAutoScrollHelper -> androidx.core.widget.ListViewAutoScrollHelper:
    33:36:void <init>(android.widget.ListView) -> <init>
    46:46:boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    51:83:boolean canTargetScrollVertically(int) -> canTargetScrollVertically
    40:41:void scrollTargetBy(int,int) -> scrollTargetBy
androidx.core.widget.ListViewCompat -> androidx.core.widget.ListViewCompat:
    37:55:void scrollListBy(android.widget.ListView,int) -> scrollListBy
androidx.core.widget.NestedScrollView -> androidx.core.widget.NestedScrollView:
    176:178:void <clinit>() -> <clinit>
    194:195:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    102:216:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1673:1675:void abortAnimatedScroll() -> abortAnimatedScroll
    472:477:void addView(android.view.View) -> addView
    481:486:void addView(android.view.View,int) -> addView
    490:495:void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    499:504:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    1325:1371:boolean arrowScroll(int) -> arrowScroll
    523:530:boolean canScroll() -> canScroll
    2048:2074:int clamp(int,int,int) -> clamp
    1569:1569:int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    1562:1562:int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    1555:1555:int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    1605:1660:void computeScroll() -> computeScroll
    1725:1786:int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect) -> computeScrollDeltaToGetChildRectOnScreen
    1548:1548:int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    1541:1541:int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    1517:1534:int computeVerticalScrollRange() -> computeVerticalScrollRange
    621:621:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    298:298:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    303:303:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    254:254:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    293:293:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    223:225:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    287:287:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    1400:1407:void doScrollY(int) -> doScrollY
    1998:2045:void draw(android.graphics.Canvas) -> draw
    1949:1958:void endDrag() -> endDrag
    1984:1994:void ensureGlows() -> ensureGlows
    633:671:boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    1146:1207:android.view.View findFocusableViewInBounds(boolean,int,int) -> findFocusableViewInBounds
    1937:1946:void fling(int) -> fling
    1261:1277:boolean fullScroll(int) -> fullScroll
    435:448:float getBottomFadingEdgeStrength() -> getBottomFadingEdgeStrength
    456:456:int getMaxScrollAmount() -> getMaxScrollAmount
    408:408:int getNestedScrollAxes() -> getNestedScrollAxes
    1118:1126:int getScrollRange() -> getScrollRange
    420:430:float getTopFadingEdgeStrength() -> getTopFadingEdgeStrength
    1039:1050:float getVerticalScrollFactorCompat() -> getVerticalScrollFactorCompat
    241:241:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    281:281:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    675:683:boolean inChild(int,int) -> inChild
    687:692:void initOrResetVelocityTracker() -> initOrResetVelocityTracker
    460:468:void initScrollView() -> initScrollView
    695:698:void initVelocityTrackerIfNotExists() -> initVelocityTrackerIfNotExists
    266:266:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    1379:1379:boolean isOffScreen(android.view.View) -> isOffScreen
    1921:1926:boolean isViewDescendantOf(android.view.View,android.view.View) -> isViewDescendantOf
    1387:1391:boolean isWithinDeltaOfScreen(android.view.View,int,int) -> isWithinDeltaOfScreen
    1575:1586:void measureChild(android.view.View,int,int) -> measureChild
    1591:1600:void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    1892:1895:void onAttachedToWindow() -> onAttachedToWindow
    1011:1035:boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    728:823:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1854:1888:void onLayout(boolean,int,int,int,int) -> onLayout
    585:616:void onMeasure(int,int) -> onMeasure
    393:398:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    403:403:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    357:358:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    387:388:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    311:312:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    351:352:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    382:383:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    338:340:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    371:372:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    315:325:void onNestedScrollInternal(int,int,int[]) -> onNestedScrollInternal
    1056:1057:void onOverScrolled(int,int,boolean,boolean) -> onOverScrolled
    1814:1833:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    2079:2088:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    2092:2095:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    576:581:void onScrollChanged(int,int,int,int) -> onScrollChanged
    994:1007:void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    1899:1915:void onSizeChanged(int,int,int,int) -> onSizeChanged
    332:332:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    365:365:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    344:346:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    376:377:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    828:990:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1064:1114:boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean) -> overScrollByCompat
    1223:1245:boolean pageScroll(int) -> pageScroll
    701:705:void recycleVelocityTracker() -> recycleVelocityTracker
    1791:1798:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    1840:1843:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    709:713:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    1848:1850:void requestLayout() -> requestLayout
    1663:1670:void runAnimatedScroll(boolean) -> runAnimatedScroll
    1293:1314:boolean scrollAndFocus(int,int,int) -> scrollAndFocus
    1968:1981:void scrollTo(int,int) -> scrollTo
    1683:1693:void scrollToChild(android.view.View) -> scrollToChild
    1704:1713:boolean scrollToChildRect(android.graphics.Rect,boolean) -> scrollToChildRect
    553:557:void setFillViewport(boolean) -> setFillViewport
    261:262:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    516:517:void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener) -> setOnScrollChangeListener
    571:572:void setSmoothScrollingEnabled(boolean) -> setSmoothScrollingEnabled
    415:415:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    1416:1417:void smoothScrollBy(int,int) -> smoothScrollBy
    1439:1461:void smoothScrollBy(int,int,int,boolean) -> smoothScrollBy
    1493:1494:void smoothScrollTo(int,int,boolean) -> smoothScrollTo
    1506:1507:void smoothScrollTo(int,int,int,boolean) -> smoothScrollTo
    231:231:boolean startNestedScroll(int,int) -> startNestedScroll
    271:271:boolean startNestedScroll(int) -> startNestedScroll
    236:237:void stopNestedScroll(int) -> stopNestedScroll
    276:277:void stopNestedScroll() -> stopNestedScroll
androidx.core.widget.NestedScrollView$AccessibilityDelegate -> androidx.core.widget.NestedScrollView$AccessibilityDelegate:
    2138:2138:void <init>() -> <init>
    2203:2212:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    2178:2199:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    2141:2173:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
androidx.core.widget.NestedScrollView$SavedState -> androidx.core.widget.NestedScrollView$SavedState:
    2124:2124:void <clinit>() -> <clinit>
    2102:2103:void <init>(android.os.Parcelable) -> <init>
    2106:2108:void <init>(android.os.Parcel) -> <init>
    2119:2120:java.lang.String toString() -> toString
    2112:2114:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.core.widget.NestedScrollView$SavedState$1 -> androidx.core.widget.NestedScrollView$SavedState$1:
    2125:2125:void <init>() -> <init>
    2125:2125:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2128:2128:androidx.core.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2125:2125:java.lang.Object[] newArray(int) -> newArray
    2133:2133:androidx.core.widget.NestedScrollView$SavedState[] newArray(int) -> newArray
androidx.core.widget.PopupWindowCompat -> androidx.core.widget.PopupWindowCompat:
    90:110:void setOverlapAnchor(android.widget.PopupWindow,boolean) -> setOverlapAnchor
    153:155:void setWindowLayoutType(android.widget.PopupWindow,int) -> setWindowLayoutType
    68:81:void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
androidx.core.widget.TextViewCompat -> androidx.core.widget.TextViewCompat:
    768:768:int getFirstBaselineToTopHeight(android.widget.TextView) -> getFirstBaselineToTopHeight
    778:778:int getLastBaselineToBottomHeight(android.widget.TextView) -> getLastBaselineToBottomHeight
    963:980:int getTextDirection(android.text.TextDirectionHeuristic) -> getTextDirection
    907:954:android.text.TextDirectionHeuristic getTextDirectionHeuristic(android.widget.TextView) -> getTextDirectionHeuristic
    815:827:androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView) -> getTextMetricsParams
    993:999:void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList) -> setCompoundDrawableTintList
    1027:1034:void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode) -> setCompoundDrawableTintMode
    151:159:void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    693:718:void setFirstBaselineToTopHeight(android.widget.TextView,int) -> setFirstBaselineToTopHeight
    738:759:void setLastBaselineToBottomHeight(android.widget.TextView,int) -> setLastBaselineToBottomHeight
    796:804:void setLineHeight(android.widget.TextView,int) -> setLineHeight
    884:895:void setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat) -> setPrecomputedText
    283:288:void setTextAppearance(android.widget.TextView,int) -> setTextAppearance
    842:869:void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params) -> setTextMetricsParams
    519:529:android.view.ActionMode$Callback wrapCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback) -> wrapCustomSelectionActionModeCallback
androidx.core.widget.TextViewCompat$OreoCallback -> androidx.core.widget.TextViewCompat$OreoCallback:
    549:553:void <init>(android.view.ActionMode$Callback,android.widget.TextView) -> <init>
    671:671:android.content.Intent createProcessTextIntent() -> createProcessTextIntent
    659:661:android.content.Intent createProcessTextIntentForResolveInfo(android.content.pm.ResolveInfo,android.widget.TextView) -> createProcessTextIntentForResolveInfo
    630:642:java.util.List getSupportedActivities(android.content.Context,android.content.pm.PackageManager) -> getSupportedActivities
    665:667:boolean isEditable(android.widget.TextView) -> isEditable
    646:653:boolean isSupportedActivity(android.content.pm.ResolveInfo,android.content.Context) -> isSupportedActivity
    568:568:boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    557:557:boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    573:574:void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
    562:563:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    577:626:void recomputeProcessTextMenuItems(android.view.Menu) -> recomputeProcessTextMenuItems
androidx.cursoradapter.widget.CursorAdapter -> androidx.cursoradapter.widget.CursorAdapter:
    150:152:void <init>(android.content.Context,android.database.Cursor,boolean) -> <init>
    334:338:void changeCursor(android.database.Cursor) -> changeCursor
    216:219:int getCount() -> getCount
    208:208:android.database.Cursor getCursor() -> getCursor
    280:291:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    426:429:android.widget.Filter getFilter() -> getFilter
    228:232:java.lang.Object getItem(int) -> getItem
    241:248:long getItemId(int) -> getItemId
    262:275:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    177:200:void init(android.content.Context,android.database.Cursor,int) -> init
    469:473:void onContentChanged() -> onContentChanged
    351:373:android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
androidx.cursoradapter.widget.CursorAdapter$ChangeObserver -> androidx.cursoradapter.widget.CursorAdapter$ChangeObserver:
    476:478:void <init>(androidx.cursoradapter.widget.CursorAdapter) -> <init>
    482:482:boolean deliverSelfNotifications() -> deliverSelfNotifications
    487:488:void onChange(boolean) -> onChange
androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver -> androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver:
    492:493:void <init>(androidx.cursoradapter.widget.CursorAdapter) -> <init>
    497:499:void onChanged() -> onChanged
    503:505:void onInvalidated() -> onInvalidated
androidx.cursoradapter.widget.CursorFilter -> androidx.cursoradapter.widget.CursorFilter:
    39:41:void <init>(androidx.cursoradapter.widget.CursorFilter$CursorFilterClient) -> <init>
    45:45:java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    50:60:android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    65:70:void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
androidx.cursoradapter.widget.ResourceCursorAdapter -> androidx.cursoradapter.widget.ResourceCursorAdapter:
    82:85:void <init>(android.content.Context,int,android.database.Cursor,boolean) -> <init>
    117:117:android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    112:112:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
androidx.customview.view.AbsSavedState -> androidx.customview.view.AbsSavedState:
    30:88:void <clinit>() -> <clinit>
    29:29:void <init>(androidx.customview.view.AbsSavedState$1) -> <init>
    37:39:void <init>() -> <init>
    46:51:void <init>(android.os.Parcelable) -> <init>
    68:71:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    80:80:int describeContents() -> describeContents
    75:75:android.os.Parcelable getSuperState() -> getSuperState
    85:86:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.customview.view.AbsSavedState$1 -> androidx.customview.view.AbsSavedState$1:
    30:30:void <init>() -> <init>
androidx.customview.view.AbsSavedState$2 -> androidx.customview.view.AbsSavedState$2:
    88:88:void <init>() -> <init>
    88:88:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    88:88:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    91:95:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    100:100:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel) -> createFromParcel
    88:88:java.lang.Object[] newArray(int) -> newArray
    105:105:androidx.customview.view.AbsSavedState[] newArray(int) -> newArray
androidx.customview.widget.ViewDragHelper -> androidx.customview.widget.ViewDragHelper:
    332:332:void <clinit>() -> <clinit>
    119:402:void <init>(android.content.Context,android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback) -> <init>
    511:518:void cancel() -> cancel
    471:480:void captureChildView(android.view.View,int) -> captureChildView
    1276:1289:boolean checkNewEdgeDrag(float,float,int,int) -> checkNewEdgeDrag
    1303:1316:boolean checkTouchSlop(android.view.View,float,float) -> checkTouchSlop
    1334:1340:boolean checkTouchSlop(int) -> checkTouchSlop
    1359:1376:boolean checkTouchSlop(int,int) -> checkTouchSlop
    670:673:int clampMag(int,int,int) -> clampMag
    687:690:float clampMag(float,float,float) -> clampMag
    790:801:void clearMotionHistory() -> clearMotionHistory
    804:815:void clearMotionHistory(int) -> clearMotionHistory
    638:656:int computeAxisDuration(int,int,int) -> computeAxisDuration
    617:634:int computeSettleDuration(android.view.View,int,int,int,int) -> computeSettleDuration
    735:769:boolean continueSettling(boolean) -> continueSettling
    355:355:androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback) -> create
    369:371:androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,float,androidx.customview.widget.ViewDragHelper$Callback) -> create
    779:787:void dispatchViewReleased(float,float) -> dispatchViewReleased
    694:696:float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    1424:1443:void dragTo(int,int,int,int) -> dragTo
    818:845:void ensureMotionHistorySizeForId(int) -> ensureMotionHistorySizeForId
    1487:1495:android.view.View findTopChildUnder(int,int) -> findTopChildUnder
    597:613:boolean forceSettleCapturedViewAt(int,int,int,int) -> forceSettleCapturedViewAt
    487:487:android.view.View getCapturedView() -> getCapturedView
    459:459:int getEdgeSize() -> getEdgeSize
    1499:1506:int getEdgesTouched(int,int) -> getEdgesTouched
    503:503:int getTouchSlop() -> getTouchSlop
    431:431:int getViewDragState() -> getViewDragState
    1455:1455:boolean isCapturedViewUnder(int,int) -> isCapturedViewUnder
    884:884:boolean isPointerDown(int) -> isPointerDown
    1510:1516:boolean isValidPointerForActionMove(int) -> isValidPointerForActionMove
    1468:1474:boolean isViewUnder(android.view.View,int,int) -> isViewUnder
    1097:1252:void processTouchEvent(android.view.MotionEvent) -> processTouchEvent
    1413:1421:void releaseViewForPointerUp() -> releaseViewForPointerUp
    1255:1273:void reportNewEdgeDrags(float,float,int) -> reportNewEdgeDrags
    848:853:void saveInitialMotion(float,float,int) -> saveInitialMotion
    856:868:void saveLastMotion(android.view.MotionEvent) -> saveLastMotion
    888:896:void setDragState(int) -> setDragState
    447:448:void setEdgeTrackingEnabled(int) -> setEdgeTrackingEnabled
    411:412:void setMinVelocity(float) -> setMinVelocity
    577:584:boolean settleCapturedViewAt(int,int) -> settleCapturedViewAt
    963:1087:boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> shouldInterceptTouchEvent
    552:562:boolean smoothSlideViewTo(android.view.View,int,int) -> smoothSlideViewTo
    908:917:boolean tryCaptureViewForDrag(android.view.View,int) -> tryCaptureViewForDrag
androidx.customview.widget.ViewDragHelper$1 -> androidx.customview.widget.ViewDragHelper$1:
    332:332:void <init>() -> <init>
    335:336:float getInterpolation(float) -> getInterpolation
androidx.customview.widget.ViewDragHelper$2 -> androidx.customview.widget.ViewDragHelper$2:
    340:340:void <init>(androidx.customview.widget.ViewDragHelper) -> <init>
    343:344:void run() -> run
androidx.customview.widget.ViewDragHelper$Callback -> androidx.customview.widget.ViewDragHelper$Callback:
    152:152:void <init>() -> <init>
    255:255:int getOrderedChildIndex(int) -> getOrderedChildIndex
    266:266:int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    277:277:int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    246:246:void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    232:232:boolean onEdgeLock(int) -> onEdgeLock
    220:220:void onEdgeTouched(int,int) -> onEdgeTouched
    187:187:void onViewCaptured(android.view.View,int) -> onViewCaptured
androidx.drawerlayout.widget.DrawerLayout -> androidx.drawerlayout.widget.DrawerLayout:
    104:192:void <clinit>() -> <clinit>
    310:311:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    195:367:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    511:518:void addDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener) -> addDrawerListener
    1911:1942:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    2057:2077:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    1961:1972:void cancelChildViewTouch() -> cancelChildViewTouch
    950:951:boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> checkDrawerViewAbsoluteGravity
    1901:1901:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1747:1748:void closeDrawer(android.view.View) -> closeDrawer
    1757:1780:void closeDrawer(android.view.View,boolean) -> closeDrawer
    1789:1790:void closeDrawer(int) -> closeDrawer
    1800:1806:void closeDrawer(int,boolean) -> closeDrawer
    1637:1638:void closeDrawers() -> closeDrawers
    1641:1670:void closeDrawers(boolean) -> closeDrawers
    1309:1322:void computeScroll() -> computeScroll
    1536:1564:boolean dispatchGenericMotionEvent(android.view.MotionEvent) -> dispatchGenericMotionEvent
    850:875:void dispatchOnDrawerClosed(android.view.View) -> dispatchOnDrawerClosed
    878:897:void dispatchOnDrawerOpened(android.view.View) -> dispatchOnDrawerOpened
    916:924:void dispatchOnDrawerSlide(android.view.View,float) -> dispatchOnDrawerSlide
    774:786:boolean dispatchTransformedGenericPointerEvent(android.view.MotionEvent,android.view.View) -> dispatchTransformedGenericPointerEvent
    1401:1460:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    985:995:android.view.View findDrawerWithGravity(int) -> findDrawerWithGravity
    955:963:android.view.View findOpenDrawer() -> findOpenDrawer
    1949:1956:android.view.View findVisibleDrawer() -> findVisibleDrawer
    1887:1887:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1892:1892:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1906:1906:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    393:396:float getDrawerElevation() -> getDrawerElevation
    652:697:int getDrawerLockMode(int) -> getDrawerLockMode
    709:713:int getDrawerLockMode(android.view.View) -> getDrawerLockMode
    746:753:java.lang.CharSequence getDrawerTitle(int) -> getDrawerTitle
    945:946:int getDrawerViewAbsoluteGravity(android.view.View) -> getDrawerViewAbsoluteGravity
    937:937:float getDrawerViewOffset(android.view.View) -> getDrawerViewOffset
    1350:1350:android.graphics.drawable.Drawable getStatusBarBackgroundDrawable() -> getStatusBarBackgroundDrawable
    794:806:android.view.MotionEvent getTransformedMotionEvent(android.view.MotionEvent,android.view.View) -> getTransformedMotionEvent
    1005:1011:java.lang.String gravityToString(int) -> gravityToString
    1325:1329:boolean hasOpaqueBackground(android.view.View) -> hasOpaqueBackground
    1875:1882:boolean hasPeekingDrawer() -> hasPeekingDrawer
    1945:1945:boolean hasVisibleDrawer() -> hasVisibleDrawer
    2085:2087:boolean includeChildForAccessibility(android.view.View) -> includeChildForAccessibility
    1464:1464:boolean isContentView(android.view.View) -> isContentView
    1819:1823:boolean isDrawerOpen(android.view.View) -> isDrawerOpen
    1836:1840:boolean isDrawerOpen(int) -> isDrawerOpen
    1468:1479:boolean isDrawerView(android.view.View) -> isDrawerView
    1852:1855:boolean isDrawerVisible(android.view.View) -> isDrawerVisible
    1867:1871:boolean isDrawerVisible(int) -> isDrawerVisible
    761:765:boolean isInBoundsOfChild(float,float,android.view.View) -> isInBoundsOfChild
    1208:1213:boolean mirror(android.graphics.drawable.Drawable,int) -> mirror
    967:976:void moveDrawerToOffset(android.view.View,float) -> moveDrawerToOffset
    1022:1024:void onAttachedToWindow() -> onAttachedToWindow
    1016:1018:void onDetachedFromWindow() -> onDetachedFromWindow
    1383:1397:void onDraw(android.graphics.Canvas) -> onDraw
    1485:1527:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1976:1980:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    1985:1992:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    1218:1298:void onLayout(boolean,int,int,int,int) -> onLayout
    1029:1155:void onMeasure(int,int) -> onMeasure
    1997:2024:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1378:1379:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    2028:2052:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1569:1616:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1678:1679:void openDrawer(android.view.View) -> openDrawer
    1688:1713:void openDrawer(android.view.View,boolean) -> openDrawer
    1722:1723:void openDrawer(int) -> openDrawer
    1733:1739:void openDrawer(int,boolean) -> openDrawer
    528:536:void removeDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener) -> removeDrawerListener
    1625:1631:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    1302:1305:void requestLayout() -> requestLayout
    1166:1181:android.graphics.drawable.Drawable resolveLeftShadow() -> resolveLeftShadow
    1185:1199:android.graphics.drawable.Drawable resolveRightShadow() -> resolveRightShadow
    1158:1163:void resolveShadowDrawables() -> resolveShadowDrawables
    405:409:void setChildInsets(java.lang.Object,boolean) -> setChildInsets
    376:383:void setDrawerElevation(float) -> setDrawerElevation
    493:502:void setDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    552:554:void setDrawerLockMode(int) -> setDrawerLockMode
    576:614:void setDrawerLockMode(int,int) -> setDrawerLockMode
    927:934:void setDrawerViewOffset(android.view.View,float) -> setDrawerViewOffset
    474:476:void setScrimColor(int) -> setScrimColor
    1339:1341:void setStatusBarBackground(android.graphics.drawable.Drawable) -> setStatusBarBackground
    1360:1362:void setStatusBarBackground(int) -> setStatusBarBackground
    1372:1374:void setStatusBarBackgroundColor(int) -> setStatusBarBackgroundColor
    900:913:void updateChildrenImportantForAccessibility(android.view.View,boolean) -> updateChildrenImportantForAccessibility
    814:847:void updateDrawerState(int,int,android.view.View) -> updateDrawerState
androidx.drawerlayout.widget.DrawerLayout$1 -> androidx.drawerlayout.widget.DrawerLayout$1:
    343:343:void <init>(androidx.drawerlayout.widget.DrawerLayout) -> <init>
    346:348:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate -> androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate:
    2349:2350:void <init>(androidx.drawerlayout.widget.DrawerLayout) -> <init>
    2426:2433:void addChildrenForAccessibility(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup) -> addChildrenForAccessibility
    2442:2464:void copyNodeInfoNoChildren(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
    2399:2413:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    2387:2390:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    2354:2383:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    2419:2422:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate -> androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate:
    2467:2467:void <init>() -> <init>
    2471:2479:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
androidx.drawerlayout.widget.DrawerLayout$LayoutParams -> androidx.drawerlayout.widget.DrawerLayout$LayoutParams:
    2313:2324:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2313:2328:void <init>(int,int) -> <init>
    2313:2338:void <init>(androidx.drawerlayout.widget.DrawerLayout$LayoutParams) -> <init>
    2313:2342:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2313:2346:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
androidx.drawerlayout.widget.DrawerLayout$SavedState -> androidx.drawerlayout.widget.DrawerLayout$SavedState:
    2124:2124:void <clinit>() -> <clinit>
    2095:2108:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2095:2112:void <init>(android.os.Parcelable) -> <init>
    2116:2122:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.drawerlayout.widget.DrawerLayout$SavedState$1 -> androidx.drawerlayout.widget.DrawerLayout$SavedState$1:
    2124:2124:void <init>() -> <init>
    2124:2124:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2124:2124:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2127:2127:androidx.drawerlayout.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2132:2132:androidx.drawerlayout.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2124:2124:java.lang.Object[] newArray(int) -> newArray
    2137:2137:androidx.drawerlayout.widget.DrawerLayout$SavedState[] newArray(int) -> newArray
androidx.drawerlayout.widget.DrawerLayout$SimpleDrawerListener -> androidx.drawerlayout.widget.DrawerLayout$SimpleDrawerListener:
    287:287:void <init>() -> <init>
    298:298:void onDrawerClosed(android.view.View) -> onDrawerClosed
    294:294:void onDrawerOpened(android.view.View) -> onDrawerOpened
    290:290:void onDrawerSlide(android.view.View,float) -> onDrawerSlide
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback -> androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback:
    2146:2154:void <init>(androidx.drawerlayout.widget.DrawerLayout,int) -> <init>
    2294:2298:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    2304:2304:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    2203:2208:void closeOtherDrawer() -> closeOtherDrawer
    2289:2289:int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    2276:2285:void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    2270:2270:boolean onEdgeLock(int) -> onEdgeLock
    2231:2232:void onEdgeTouched(int,int) -> onEdgeTouched
    2196:2200:void onViewCaptured(android.view.View,int) -> onViewCaptured
    2174:2175:void onViewDragStateChanged(int) -> onViewDragStateChanged
    2180:2192:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    2214:2227:void onViewReleased(android.view.View,float,float) -> onViewReleased
    2237:2259:void peekDrawer() -> peekDrawer
    2161:2162:void removeCallbacks() -> removeCallbacks
    2157:2158:void setDragger(androidx.customview.widget.ViewDragHelper) -> setDragger
    2168:2169:boolean tryCaptureView(android.view.View,int) -> tryCaptureView
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback$1 -> androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback$1:
    2146:2146:void <init>(androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback) -> <init>
    2148:2149:void run() -> run
androidx.exifinterface.media.ExifInterface -> androidx.exifinterface.media.ExifInterface:
    83:3897:void <clinit>() -> <clinit>
    3983:3984:void <init>(java.io.InputStream) -> <init>
    3870:4033:void <init>(java.io.InputStream,boolean) -> <init>
    6540:6563:void addDefaultValuesForCompatibility() -> addDefaultValuesForCompatibility
    7932:7936:java.lang.String byteArrayToHexString(byte[]) -> byteArrayToHexString
    7903:7913:long[] convertToLongArray(java.lang.Object) -> convertToLongArray
    4107:4138:java.lang.String getAttribute(java.lang.String) -> getAttribute
    4150:4161:int getAttributeInt(java.lang.String,int) -> getAttributeInt
    4077:4096:androidx.exifinterface.media.ExifInterface$ExifAttribute getExifAttribute(java.lang.String) -> getExifAttribute
    5715:5875:void getHeifAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream) -> getHeifAttributes
    5485:5613:void getJpegAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,int,int) -> getJpegAttributes
    5245:5265:int getMimeType(java.io.BufferedInputStream) -> getMimeType
    5900:5975:void getOrfAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream) -> getOrfAttributes
    6004:6086:void getPngAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream) -> getPngAttributes
    5668:5712:void getRafAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream) -> getRafAttributes
    5617:5655:void getRawAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream) -> getRawAttributes
    5982:6000:void getRw2Attributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream) -> getRw2Attributes
    5878:5885:void getStandaloneAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream) -> getStandaloneAttributes
    6092:6168:void getWebpAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream) -> getWebpAttributes
    6912:6948:void handleThumbnailFromJfif(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,java.util.HashMap) -> handleThumbnailFromJfif
    6953:7027:void handleThumbnailFromStrips(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,java.util.HashMap) -> handleThumbnailFromStrips
    5460:5469:boolean isExifDataOnly(java.io.BufferedInputStream) -> isExifDataOnly
    5298:5365:boolean isHeifFormat(byte[]) -> isHeifFormat
    5273:5278:boolean isJpegFormat(byte[]) -> isJpegFormat
    5377:5396:boolean isOrfFormat(byte[]) -> isOrfFormat
    5431:5436:boolean isPngFormat(byte[]) -> isPngFormat
    5288:5294:boolean isRafFormat(byte[]) -> isRafFormat
    5404:5423:boolean isRw2Format(byte[]) -> isRw2Format
    4615:4623:boolean isSeekableFD(java.io.FileDescriptor) -> isSeekableFD
    7031:7061:boolean isSupportedDataType(java.util.HashMap) -> isSupportedDataType
    7067:7077:boolean isThumbnail(java.util.HashMap) -> isThumbnail
    5445:5456:boolean isWebpFormat(byte[]) -> isWebpFormat
    4527:4612:void loadAttributes(java.io.InputStream) -> loadAttributes
    6588:6609:void parseTiffHeaders(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,int) -> parseTiffHeaders
    4631:4639:void printAttributes() -> printAttributes
    6568:6581:java.nio.ByteOrder readByteOrder(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream) -> readByteOrder
    6528:6536:void readExifSegment(byte[],int) -> readExifSegment
    6615:6850:void readImageFileDirectory(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,int) -> readImageFileDirectory
    6861:6878:void retrieveJpegImageSize(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,int) -> retrieveJpegImageSize
    6882:6906:void setThumbnailData(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream) -> setThumbnailData
    7917:7928:boolean startsWith(byte[],byte[]) -> startsWith
    7793:7830:void swapBasedOnImageSize(int,int) -> swapBasedOnImageSize
    7128:7190:void updateImageSizeValues(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,int) -> updateImageSizeValues
    7083:7113:void validateImages() -> validateImages
androidx.exifinterface.media.ExifInterface$1 -> androidx.exifinterface.media.ExifInterface$1:
    5718:5718:void <init>(androidx.exifinterface.media.ExifInterface,androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream) -> <init>
    5722:5722:void close() -> close
    5767:5767:long getSize() -> getSize
    5727:5762:int readAt(long,byte[],int,int) -> readAt
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream -> androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream:
    7476:7477:void <clinit>() -> <clinit>
    7487:7488:void <init>(java.io.InputStream) -> <init>
    7480:7497:void <init>(java.io.InputStream,java.nio.ByteOrder) -> <init>
    7500:7501:void <init>(byte[]) -> <init>
    7528:7528:int available() -> available
    7723:7723:int getLength() -> getLength
    7523:7523:int peek() -> peek
    7533:7534:int read() -> read
    7539:7541:int read(byte[],int,int) -> read
    7558:7559:boolean readBoolean() -> readBoolean
    7598:7606:byte readByte() -> readByte
    7564:7565:char readChar() -> readChar
    7719:7719:double readDouble() -> readDouble
    7714:7714:float readFloat() -> readFloat
    7576:7583:void readFully(byte[],int,int) -> readFully
    7587:7594:void readFully(byte[]) -> readFully
    7630:7646:int readInt() -> readInt
    7552:7553:java.lang.String readLine() -> readLine
    7685:7709:long readLong() -> readLong
    7611:7625:short readShort() -> readShort
    7570:7571:java.lang.String readUTF() -> readUTF
    7546:7547:int readUnsignedByte() -> readUnsignedByte
    7680:7680:long readUnsignedInt() -> readUnsignedInt
    7662:7676:int readUnsignedShort() -> readUnsignedShort
    7508:7520:void seek(long) -> seek
    7504:7505:void setByteOrder(java.nio.ByteOrder) -> setByteOrder
    7651:7657:int skipBytes(int) -> skipBytes
androidx.exifinterface.media.ExifInterface$ExifAttribute -> androidx.exifinterface.media.ExifInterface$ExifAttribute:
    3092:3093:void <init>(int,int,byte[]) -> <init>
    3096:3101:void <init>(int,int,long,byte[]) -> <init>
    3156:3157:androidx.exifinterface.media.ExifInterface$ExifAttribute createString(java.lang.String) -> createString
    3118:3124:androidx.exifinterface.media.ExifInterface$ExifAttribute createULong(long[],java.nio.ByteOrder) -> createULong
    3128:3128:androidx.exifinterface.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder) -> createULong
    3161:3168:androidx.exifinterface.media.ExifInterface$ExifAttribute createURational(androidx.exifinterface.media.ExifInterface$Rational[],java.nio.ByteOrder) -> createURational
    3172:3172:androidx.exifinterface.media.ExifInterface$ExifAttribute createURational(androidx.exifinterface.media.ExifInterface$Rational,java.nio.ByteOrder) -> createURational
    3104:3110:androidx.exifinterface.media.ExifInterface$ExifAttribute createUShort(int[],java.nio.ByteOrder) -> createUShort
    3114:3114:androidx.exifinterface.media.ExifInterface$ExifAttribute createUShort(int,java.nio.ByteOrder) -> createUShort
    3333:3368:double getDoubleValue(java.nio.ByteOrder) -> getDoubleValue
    3372:3393:int getIntValue(java.nio.ByteOrder) -> getIntValue
    3397:3448:java.lang.String getStringValue(java.nio.ByteOrder) -> getStringValue
    3211:3329:java.lang.Object getValue(java.nio.ByteOrder) -> getValue
    3206:3206:java.lang.String toString() -> toString
androidx.exifinterface.media.ExifInterface$ExifTag -> androidx.exifinterface.media.ExifInterface$ExifTag:
    3464:3469:void <init>(java.lang.String,int,int) -> <init>
    3472:3477:void <init>(java.lang.String,int,int,int) -> <init>
    3481:3495:boolean isFormatCompatible(int) -> isFormatCompatible
androidx.exifinterface.media.ExifInterface$Rational -> androidx.exifinterface.media.ExifInterface$Rational:
    3060:3069:void <init>(long,long) -> <init>
    3077:3077:double calculate() -> calculate
    3073:3073:java.lang.String toString() -> toString
androidx.fragment.app.BackStackRecord -> androidx.fragment.app.BackStackRecord:
    39:142:void <init>(androidx.fragment.app.FragmentManagerImpl) -> <init>
    255:269:void bumpBackStackNesting(int) -> bumpBackStackNesting
    287:287:int commitAllowingStateLoss() -> commitAllowingStateLoss
    303:318:int commitInternal(boolean) -> commitInternal
    179:181:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int) -> doAddOp
    59:60:void dump(java.lang.String,java.io.PrintWriter) -> dump
    63:138:void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    389:441:void executeOps() -> executeOps
    451:502:void executePopOps(boolean) -> executePopOps
    528:593:androidx.fragment.app.Fragment expandOps(java.util.ArrayList,androidx.fragment.app.Fragment) -> expandOps
    332:341:boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> generateOps
    660:660:java.lang.String getName() -> getName
    345:353:boolean interactsWith(int) -> interactsWith
    357:381:boolean interactsWith(java.util.ArrayList,int,int) -> interactsWith
    652:654:boolean isFragmentPostponed(androidx.fragment.app.FragmentTransaction$Op) -> isFragmentPostponed
    633:639:boolean isPostponed() -> isPostponed
    272:278:void runOnCommitRunnables() -> runOnCommitRunnables
    643:649:void setOnStartPostponedListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener) -> setOnStartPostponedListener
    43:55:java.lang.String toString() -> toString
    607:629:androidx.fragment.app.Fragment trackAddedFragmentsInPop(java.util.ArrayList,androidx.fragment.app.Fragment) -> trackAddedFragmentsInPop
androidx.fragment.app.BackStackState -> androidx.fragment.app.BackStackState:
    170:170:void <clinit>() -> <clinit>
    47:81:void <init>(androidx.fragment.app.BackStackRecord) -> <init>
    83:99:void <init>(android.os.Parcel) -> <init>
    148:148:int describeContents() -> describeContents
    102:143:androidx.fragment.app.BackStackRecord instantiate(androidx.fragment.app.FragmentManagerImpl) -> instantiate
    153:168:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.BackStackState$1 -> androidx.fragment.app.BackStackState$1:
    171:171:void <init>() -> <init>
    171:171:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    174:174:androidx.fragment.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    171:171:java.lang.Object[] newArray(int) -> newArray
    179:179:androidx.fragment.app.BackStackState[] newArray(int) -> newArray
androidx.fragment.app.Fragment -> androidx.fragment.app.Fragment:
    98:98:void <clinit>() -> <clinit>
    106:452:void <init>() -> <init>
    2451:2461:void callStartTransitionListener() -> callStartTransitionListener
    2474:2547:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    2873:2876:androidx.fragment.app.Fragment$AnimationInfo ensureAnimationInfo() -> ensureAnimationInfo
    570:570:boolean equals(java.lang.Object) -> equals
    2551:2554:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    788:788:androidx.fragment.app.FragmentActivity getActivity() -> getActivity
    2315:2316:boolean getAllowEnterTransitionOverlap() -> getAllowEnterTransitionOverlap
    2340:2341:boolean getAllowReturnTransitionOverlap() -> getAllowReturnTransitionOverlap
    2931:2934:android.view.View getAnimatingAway() -> getAnimatingAway
    2946:2949:android.animation.Animator getAnimator() -> getAnimator
    922:925:androidx.fragment.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    761:761:android.content.Context getContext() -> getContext
    2098:2101:java.lang.Object getEnterTransition() -> getEnterTransition
    2917:2920:androidx.core.app.SharedElementCallback getEnterTransitionCallback() -> getEnterTransitionCallback
    2177:2180:java.lang.Object getExitTransition() -> getExitTransition
    2924:2927:androidx.core.app.SharedElementCallback getExitTransitionCallback() -> getExitTransitionCallback
    890:890:androidx.fragment.app.FragmentManager getFragmentManager() -> getFragmentManager
    815:815:java.lang.Object getHost() -> getHost
    1430:1436:android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    283:283:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    2880:2883:int getNextAnim() -> getNextAnim
    2894:2897:int getNextTransition() -> getNextTransition
    2910:2913:int getNextTransitionStyle() -> getNextTransitionStyle
    934:934:androidx.fragment.app.Fragment getParentFragment() -> getParentFragment
    2215:2218:java.lang.Object getReenterTransition() -> getReenterTransition
    838:838:android.content.res.Resources getResources() -> getResources
    1073:1073:boolean getRetainInstance() -> getRetainInstance
    2137:2140:java.lang.Object getReturnTransition() -> getReturnTransition
    370:370:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    2248:2251:java.lang.Object getSharedElementEnterTransition() -> getSharedElementEnterTransition
    2286:2290:java.lang.Object getSharedElementReturnTransition() -> getSharedElementReturnTransition
    2953:2956:int getStateAfterAnimating() -> getStateAfterAnimating
    736:744:androidx.fragment.app.Fragment getTargetFragment() -> getTargetFragment
    1686:1686:android.view.View getView() -> getView
    361:364:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    577:577:int hashCode() -> hashCode
    468:483:void initLifecycle() -> initLifecycle
    1877:1893:void initState() -> initState
    521:541:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    964:964:boolean isAdded() -> isAdded
    1022:1022:boolean isHidden() -> isHidden
    2971:2974:boolean isHideReplaced() -> isHideReplaced
    563:563:boolean isInBackStack() -> isInBackStack
    2964:2967:boolean isPostponed() -> isPostponed
    663:666:boolean isStateSaved() -> isStateSaved
    1010:1011:boolean isVisible() -> isVisible
    2663:2664:void noteStateNotSaved() -> noteStateNotSaved
    1720:1721:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    1238:1238:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    1523:1529:void onAttach(android.content.Context) -> onAttach
    1540:1541:void onAttach(android.app.Activity) -> onAttach
    1515:1515:void onAttachFragment(androidx.fragment.app.Fragment) -> onAttachFragment
    1804:1805:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    2045:2045:boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    1603:1608:void onCreate(android.os.Bundle) -> onCreate
    1560:1560:android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    1581:1581:android.animation.Animator onCreateAnimator(int,boolean,int) -> onCreateAnimator
    1999:2000:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    1918:1918:void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    1659:1662:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    1867:1868:void onDestroy() -> onDestroy
    1945:1945:void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    1858:1859:void onDestroyView() -> onDestroyView
    1901:1902:void onDetach() -> onDetach
    1380:1380:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle) -> onGetLayoutInflater
    1044:1044:void onHiddenChanged(boolean) -> onHiddenChanged
    1484:1490:void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle) -> onInflate
    1502:1503:void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    1844:1845:void onLowMemory() -> onLowMemory
    1790:1790:void onMultiWindowModeChanged(boolean) -> onMultiWindowModeChanged
    1966:1966:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    1977:1977:void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    1828:1829:void onPause() -> onPause
    1799:1799:void onPictureInPictureModeChanged(boolean) -> onPictureInPictureModeChanged
    1935:1935:void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    1819:1819:void onPrimaryNavigationFragmentChanged(boolean) -> onPrimaryNavigationFragmentChanged
    1340:1340:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    1757:1758:void onResume() -> onResume
    1780:1780:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    1746:1747:void onStart() -> onStart
    1838:1839:void onStop() -> onStop
    1676:1676:void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    1736:1737:void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    2616:2625:void performActivityCreated(android.os.Bundle) -> performActivityCreated
    2558:2579:void performAttach() -> performAttach
    2688:2690:void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    2745:2753:boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    2582:2593:void performCreate(android.os.Bundle) -> performCreate
    2707:2715:boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    2597:2613:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    2825:2835:void performDestroy() -> performDestroy
    2805:2822:void performDestroyView() -> performDestroyView
    2838:2853:void performDetach() -> performDetach
    1412:1414:android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle) -> performGetLayoutInflater
    2693:2695:void performLowMemory() -> performLowMemory
    2678:2680:void performMultiWindowModeChanged(boolean) -> performMultiWindowModeChanged
    2731:2741:boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    2757:2763:void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    2775:2787:void performPause() -> performPause
    2683:2685:void performPictureInPictureModeChanged(boolean) -> performPictureInPictureModeChanged
    2719:2727:boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    2667:2675:void performPrimaryNavigationFragmentChanged() -> performPrimaryNavigationFragmentChanged
    2645:2660:void performResume() -> performResume
    2766:2772:void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    2628:2642:void performStart() -> performStart
    2790:2802:void performStop() -> performStop
    800:804:androidx.fragment.app.FragmentActivity requireActivity() -> requireActivity
    772:776:android.content.Context requireContext() -> requireContext
    1697:1702:android.view.View requireView() -> requireView
    1623:1631:void restoreChildFragmentState(android.os.Bundle) -> restoreChildFragmentState
    547:560:void restoreViewState(android.os.Bundle) -> restoreViewState
    2938:2939:void setAnimatingAway(android.view.View) -> setAnimatingAway
    2942:2943:void setAnimator(android.animation.Animator) -> setAnimator
    624:628:void setArguments(android.os.Bundle) -> setArguments
    2978:2979:void setHideReplaced(boolean) -> setHideReplaced
    2887:2891:void setNextAnim(int) -> setNextAnim
    2901:2907:void setNextTransition(int,int) -> setNextTransition
    2856:2870:void setOnStartEnterTransitionListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener) -> setOnStartEnterTransitionListener
    2960:2961:void setStateAfterAnimating(int) -> setStateAfterAnimating
    2431:2443:void startPostponedEnterTransition() -> startPostponedEnterTransition
    582:596:java.lang.String toString() -> toString
androidx.fragment.app.Fragment$1 -> androidx.fragment.app.Fragment$1:
    230:230:void <init>(androidx.fragment.app.Fragment) -> <init>
    233:234:void run() -> run
androidx.fragment.app.Fragment$2 -> androidx.fragment.app.Fragment$2:
    471:471:void <init>(androidx.fragment.app.Fragment) -> <init>
    475:480:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.fragment.app.Fragment$3 -> androidx.fragment.app.Fragment$3:
    2434:2434:void <init>(androidx.fragment.app.Fragment) -> <init>
    2437:2438:void run() -> run
androidx.fragment.app.Fragment$4 -> androidx.fragment.app.Fragment$4:
    2558:2558:void <init>(androidx.fragment.app.Fragment) -> <init>
    2562:2565:android.view.View onFindViewById(int) -> onFindViewById
    2570:2570:boolean onHasView() -> onHasView
androidx.fragment.app.Fragment$AnimationInfo -> androidx.fragment.app.Fragment$AnimationInfo:
    2995:3028:void <init>() -> <init>
androidx.fragment.app.Fragment$InstantiationException -> androidx.fragment.app.Fragment$InstantiationException:
    430:431:void <init>(java.lang.String,java.lang.Exception) -> <init>
androidx.fragment.app.FragmentActivity -> androidx.fragment.app.FragmentActivity:
    82:128:void <init>() -> <init>
    714:717:void checkForValidRequestCode(int) -> checkForValidRequestCode
    357:357:android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> dispatchFragmentsOnCreateView
    599:613:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    636:636:androidx.fragment.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    990:992:void markFragmentsCreated() -> markFragmentsCreated
    995:1011:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State) -> markState
    155:182:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    628:628:void onAttachFragment(androidx.fragment.app.Fragment) -> onAttachFragment
    273:276:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    284:317:void onCreate(android.os.Bundle) -> onCreate
    324:329:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    336:340:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    347:351:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    365:368:void onDestroy() -> onDestroy
    375:377:void onLowMemory() -> onLowMemory
    384:396:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    250:251:void onMultiWindowModeChanged(boolean) -> onMultiWindowModeChanged
    437:439:void onNewIntent(android.content.Intent) -> onNewIntent
    405:411:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    418:422:void onPause() -> onPause
    265:266:void onPictureInPictureModeChanged(boolean) -> onPictureInPictureModeChanged
    467:469:void onPostResume() -> onPostResume
    502:502:boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    487:492:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    754:772:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    456:460:void onResume() -> onResume
    478:480:void onResumeFragments() -> onResumeFragments
    510:529:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    536:552:void onStart() -> onStart
    446:447:void onStateNotSaved() -> onStateNotSaved
    559:566:void onStop() -> onStop
    658:664:void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    671:677:void startActivityForResult(android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    685:692:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int) -> startIntentSenderForResult
    700:707:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
    583:584:void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
androidx.fragment.app.FragmentActivity$HostCallbacks -> androidx.fragment.app.FragmentActivity$HostCallbacks:
    871:873:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    882:882:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    894:894:androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher() -> getOnBackPressedDispatcher
    888:888:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    971:972:void onAttachFragment(androidx.fragment.app.Fragment) -> onAttachFragment
    900:901:void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> onDump
    977:977:android.view.View onFindViewById(int) -> onFindViewById
    868:868:java.lang.Object onGetHost() -> onGetHost
    916:916:androidx.fragment.app.FragmentActivity onGetHost() -> onGetHost
    911:911:android.view.LayoutInflater onGetLayoutInflater() -> onGetLayoutInflater
    965:966:int onGetWindowAnimations() -> onGetWindowAnimations
    982:983:boolean onHasView() -> onHasView
    960:960:boolean onHasWindowAnimations() -> onHasWindowAnimations
    905:905:boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment) -> onShouldSaveFragmentState
    921:922:void onSupportInvalidateOptionsMenu() -> onSupportInvalidateOptionsMenu
androidx.fragment.app.FragmentContainer -> androidx.fragment.app.FragmentContainer:
    31:31:void <init>() -> <init>
    57:57:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
androidx.fragment.app.FragmentController -> androidx.fragment.app.FragmentController:
    60:62:void <init>(androidx.fragment.app.FragmentHostCallback) -> <init>
    116:118:void attachHost(androidx.fragment.app.Fragment) -> attachHost
    57:57:androidx.fragment.app.FragmentController createController(androidx.fragment.app.FragmentHostCallback) -> createController
    246:247:void dispatchActivityCreated() -> dispatchActivityCreated
    362:363:void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    424:424:boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    235:236:void dispatchCreate() -> dispatchCreate
    386:386:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    329:330:void dispatchDestroy() -> dispatchDestroy
    374:375:void dispatchLowMemory() -> dispatchLowMemory
    340:341:void dispatchMultiWindowModeChanged(boolean) -> dispatchMultiWindowModeChanged
    411:411:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    435:436:void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    279:280:void dispatchPause() -> dispatchPause
    351:352:void dispatchPictureInPictureModeChanged(boolean) -> dispatchPictureInPictureModeChanged
    398:398:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    268:269:void dispatchResume() -> dispatchResume
    257:258:void dispatchStart() -> dispatchStart
    290:291:void dispatchStop() -> dispatchStop
    446:446:boolean execPendingActions() -> execPendingActions
    92:92:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    69:69:androidx.fragment.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    141:142:void noteStateNotSaved() -> noteStateNotSaved
    134:134:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    190:196:void restoreSaveState(android.os.Parcelable) -> restoreSaveState
    151:151:android.os.Parcelable saveAllState() -> saveAllState
androidx.fragment.app.FragmentFactory -> androidx.fragment.app.FragmentFactory:
    32:32:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
    114:128:androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String) -> instantiate
    64:67:boolean isFragmentClass(java.lang.ClassLoader,java.lang.String) -> isFragmentClass
    44:50:java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String) -> loadClass
    88:94:java.lang.Class loadFragmentClass(java.lang.ClassLoader,java.lang.String) -> loadFragmentClass
androidx.fragment.app.FragmentHostCallback -> androidx.fragment.app.FragmentHostCallback:
    58:59:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    49:67:void <init>(android.app.Activity,android.content.Context,android.os.Handler,int) -> <init>
    195:195:android.app.Activity getActivity() -> getActivity
    200:200:android.content.Context getContext() -> getContext
    205:205:android.os.Handler getHandler() -> getHandler
    209:209:void onAttachFragment(androidx.fragment.app.Fragment) -> onAttachFragment
    80:80:void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> onDump
    185:185:android.view.View onFindViewById(int) -> onFindViewById
    95:95:android.view.LayoutInflater onGetLayoutInflater() -> onGetLayoutInflater
    179:179:int onGetWindowAnimations() -> onGetWindowAnimations
    190:190:boolean onHasView() -> onHasView
    172:172:boolean onHasWindowAnimations() -> onHasWindowAnimations
    86:86:boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment) -> onShouldSaveFragmentState
    111:111:void onSupportInvalidateOptionsMenu() -> onSupportInvalidateOptionsMenu
androidx.fragment.app.FragmentManager -> androidx.fragment.app.FragmentManager:
    49:49:void <clinit>() -> <clinit>
    48:117:void <init>() -> <init>
    411:414:androidx.fragment.app.FragmentFactory getFragmentFactory() -> getFragmentFactory
    401:402:void setFragmentFactory(androidx.fragment.app.FragmentFactory) -> setFragmentFactory
androidx.fragment.app.FragmentManagerImpl -> androidx.fragment.app.FragmentManagerImpl:
    76:575:void <clinit>() -> <clinit>
    75:147:void <init>() -> <init>
    2091:2107:void addAddedFragments(androidx.collection.ArraySet) -> addAddedFragments
    2191:2195:void addBackStackState(androidx.fragment.app.BackStackRecord) -> addBackStackState
    1375:1396:void addFragment(androidx.fragment.app.Fragment,boolean) -> addFragment
    393:403:void addRetainedFragment(androidx.fragment.app.Fragment) -> addRetainedFragment
    1597:1613:int allocBackStackIndex(androidx.fragment.app.BackStackRecord) -> allocBackStackIndex
    1076:1130:void animateRemoveFragment(androidx.fragment.app.Fragment,androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator,int) -> animateRemoveFragment
    2563:2590:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment) -> attachController
    1464:1481:void attachFragment(androidx.fragment.app.Fragment) -> attachFragment
    178:178:androidx.fragment.app.FragmentTransaction beginTransaction() -> beginTransaction
    2555:2559:void burpActive() -> burpActive
    3096:3105:boolean checkForMenus() -> checkForMenus
    1535:1539:void checkStateLoss() -> checkStateLoss
    1712:1715:void cleanupExec() -> cleanupExec
    1989:2021:void completeExecute(androidx.fragment.app.BackStackRecord,boolean,boolean,boolean) -> completeExecute
    1163:1211:void completeShowHideFragment(androidx.fragment.app.Fragment) -> completeShowHideFragment
    1446:1461:void detachFragment(androidx.fragment.app.Fragment) -> detachFragment
    2611:2614:void dispatchActivityCreated() -> dispatchActivityCreated
    2685:2691:void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    2767:2778:boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    2605:2608:void dispatchCreate() -> dispatchCreate
    2703:2732:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    2642:2654:void dispatchDestroy() -> dispatchDestroy
    2638:2639:void dispatchDestroyView() -> dispatchDestroyView
    2694:2700:void dispatchLowMemory() -> dispatchLowMemory
    2667:2673:void dispatchMultiWindowModeChanged(boolean) -> dispatchMultiWindowModeChanged
    2942:2954:void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentActivityCreated
    2894:2906:void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,android.content.Context,boolean) -> dispatchOnFragmentAttached
    2926:2938:void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentCreated
    3064:3076:void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentDestroyed
    3079:3091:void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentDetached
    3003:3015:void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentPaused
    2878:2890:void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,android.content.Context,boolean) -> dispatchOnFragmentPreAttached
    2910:2922:void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentPreCreated
    2988:3000:void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentResumed
    3034:3046:void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentSaveInstanceState
    2973:2985:void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentStarted
    3018:3030:void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentStopped
    2958:2970:void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean) -> dispatchOnFragmentViewCreated
    3049:3061:void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentViewDestroyed
    2752:2763:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    2782:2791:void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    2807:2810:void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment) -> dispatchParentPrimaryNavigationFragmentChanged
    2629:2630:void dispatchPause() -> dispatchPause
    2676:2682:void dispatchPictureInPictureModeChanged(boolean) -> dispatchPictureInPictureModeChanged
    2736:2748:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    2813:2816:void dispatchPrimaryNavigationFragmentChanged() -> dispatchPrimaryNavigationFragmentChanged
    2623:2626:void dispatchResume() -> dispatchResume
    2617:2620:void dispatchStart() -> dispatchStart
    2658:2664:void dispatchStateChange(int) -> dispatchStateChange
    2633:2635:void dispatchStop() -> dispatchStop
    2176:2180:void doPendingDeferredStart() -> doPendingDeferredStart
    475:572:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    2125:2145:void endAnimatingAwayFragments() -> endAnimatingAwayFragments
    1557:1574:void enqueueAction(androidx.fragment.app.FragmentManagerImpl$OpGenerator,boolean) -> enqueueAction
    1659:1685:void ensureExecReady(boolean) -> ensureExecReady
    1137:1150:void ensureInflatedFragmentView(androidx.fragment.app.Fragment) -> ensureInflatedFragmentView
    1721:1738:boolean execPendingActions() -> execPendingActions
    2068:2082:void executeOps(java.util.ArrayList,java.util.ArrayList,int,int) -> executeOps
    1844:1899:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int) -> executeOpsTogether
    1747:1776:void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList) -> executePostponedTransaction
    1487:1499:androidx.fragment.app.Fragment findFragmentById(int) -> findFragmentById
    1505:1522:androidx.fragment.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    1526:1531:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    2040:2055:androidx.fragment.app.Fragment findFragmentUnder(androidx.fragment.app.Fragment) -> findFragmentUnder
    2113:2118:void forcePostponedTransactions() -> forcePostponedTransactions
    1642:1650:void freeBackStackIndex(int) -> freeBackStackIndex
    2159:2172:boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList) -> generateOpsForPendingActions
    324:324:int getBackStackEntryCount() -> getBackStackEntryCount
    389:389:androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment) -> getChildNonConfig
    359:368:androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    2836:2855:androidx.fragment.app.FragmentFactory getFragmentFactory() -> getFragmentFactory
    374:379:java.util.List getFragments() -> getFragments
    3252:3252:android.view.LayoutInflater$Factory2 getLayoutInflaterFactory() -> getLayoutInflaterFactory
    2821:2821:androidx.fragment.app.Fragment getPrimaryNavigationFragment() -> getPrimaryNavigationFragment
    384:384:androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment) -> getViewModelStore
    230:243:void handleOnBackPressed() -> handleOnBackPressed
    1420:1427:void hideFragment(androidx.fragment.app.Fragment) -> hideFragment
    454:454:boolean isDestroyed() -> isDestroyed
    3109:3109:boolean isMenuAvailable(androidx.fragment.app.Fragment) -> isMenuAvailable
    211:221:boolean isPrimaryNavigation(androidx.fragment.app.Fragment) -> isPrimaryNavigation
    718:718:boolean isStateAtLeast(int) -> isStateAtLeast
    1546:1546:boolean isStateSaved() -> isStateSaved
    603:689:androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator loadAnimation(androidx.fragment.app.Fragment,int,boolean,int) -> loadAnimation
    1331:1345:void makeActive(androidx.fragment.app.Fragment) -> makeActive
    595:598:androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeFadeAnimation(float,float) -> makeFadeAnimation
    1348:1372:void makeInactive(androidx.fragment.app.Fragment) -> makeInactive
    581:591:androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeOpenCloseAnimation(float,float,float,float) -> makeOpenCloseAnimation
    1909:1918:void makeRemovedFragmentsInvisible(androidx.collection.ArraySet) -> makeRemovedFragmentsInvisible
    1220:1277:void moveFragmentToExpectedState(androidx.fragment.app.Fragment) -> moveFragmentToExpectedState
    725:1064:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean) -> moveToState
    1133:1134:void moveToState(androidx.fragment.app.Fragment) -> moveToState
    1289:1320:void moveToState(int,boolean) -> moveToState
    2593:2602:void noteStateNotSaved() -> noteStateNotSaved
    3156:3243:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    3248:3248:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    706:715:void performPendingDeferredStart(androidx.fragment.app.Fragment) -> performPendingDeferredStart
    252:253:boolean popBackStackImmediate() -> popBackStackImmediate
    293:319:boolean popBackStackImmediate(java.lang.String,int,int) -> popBackStackImmediate
    2200:2251:boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int) -> popBackStackState
    1935:1968:int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int,androidx.collection.ArraySet) -> postponePostponableTransactions
    349:354:void putFragment(android.os.Bundle,java.lang.String,androidx.fragment.app.Fragment) -> putFragment
    1399:1411:void removeFragment(androidx.fragment.app.Fragment) -> removeFragment
    1794:1832:void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList) -> removeRedundantOperationsAndExecute
    406:416:void removeRetainedFragment(androidx.fragment.app.Fragment) -> removeRetainedFragment
    2183:2188:void reportBackStackChanged() -> reportBackStackChanged
    2440:2547:void restoreSaveState(android.os.Parcelable) -> restoreSaveState
    3113:3125:int reverseTransit(int) -> reverseTransit
    2320:2426:android.os.Parcelable saveAllState() -> saveAllState
    2284:2314:android.os.Bundle saveFragmentBasicState(androidx.fragment.app.Fragment) -> saveFragmentBasicState
    2268:2281:void saveFragmentViewState(androidx.fragment.app.Fragment) -> saveFragmentViewState
    1584:1594:void scheduleCommit() -> scheduleCommit
    1617:1639:void setBackStackIndex(int,androidx.fragment.app.BackStackRecord) -> setBackStackIndex
    2825:2831:void setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State) -> setMaxLifecycle
    2795:2804:void setPrimaryNavigationFragment(androidx.fragment.app.Fragment) -> setPrimaryNavigationFragment
    1436:1443:void showFragment(androidx.fragment.app.Fragment) -> showFragment
    1323:1328:void startPendingDeferredFragments() -> startPendingDeferredFragments
    155:172:void throwException(java.lang.RuntimeException) -> throwException
    459:469:java.lang.String toString() -> toString
    3137:3149:int transitToStyleIndex(int,boolean) -> transitToStyleIndex
    192:201:void updateOnBackPressedCallbackEnabled() -> updateOnBackPressedCallbackEnabled
androidx.fragment.app.FragmentManagerImpl$1 -> androidx.fragment.app.FragmentManagerImpl$1:
    105:105:void <init>(androidx.fragment.app.FragmentManagerImpl,boolean) -> <init>
    108:109:void handleOnBackPressed() -> handleOnBackPressed
androidx.fragment.app.FragmentManagerImpl$2 -> androidx.fragment.app.FragmentManagerImpl$2:
    147:147:void <init>(androidx.fragment.app.FragmentManagerImpl) -> <init>
    150:151:void run() -> run
androidx.fragment.app.FragmentManagerImpl$3 -> androidx.fragment.app.FragmentManagerImpl$3:
    1084:1084:void <init>(androidx.fragment.app.FragmentManagerImpl,android.view.ViewGroup,androidx.fragment.app.Fragment) -> <init>
    1094:1104:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    1108:1108:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    1087:1087:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
androidx.fragment.app.FragmentManagerImpl$3$1 -> androidx.fragment.app.FragmentManagerImpl$3$1:
    1094:1094:void <init>(androidx.fragment.app.FragmentManagerImpl$3) -> <init>
    1097:1102:void run() -> run
androidx.fragment.app.FragmentManagerImpl$4 -> androidx.fragment.app.FragmentManagerImpl$4:
    1114:1114:void <init>(androidx.fragment.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment) -> <init>
    1117:1125:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.fragment.app.FragmentManagerImpl$5 -> androidx.fragment.app.FragmentManagerImpl$5:
    1177:1177:void <init>(androidx.fragment.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment) -> <init>
    1180:1185:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.fragment.app.FragmentManagerImpl$6 -> androidx.fragment.app.FragmentManagerImpl$6:
    2845:2845:void <init>(androidx.fragment.app.FragmentManagerImpl) -> <init>
    2851:2851:androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String) -> instantiate
androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator -> androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator:
    3401:3407:void <init>(android.view.animation.Animation) -> <init>
    3409:3415:void <init>(android.animation.Animator) -> <init>
androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimation -> androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimation:
    3429:3440:void <init>(android.view.animation.Animation,android.view.ViewGroup,android.view.View) -> <init>
    3444:3453:boolean getTransformation(long,android.view.animation.Transformation) -> getTransformation
    3459:3468:boolean getTransformation(long,android.view.animation.Transformation,float) -> getTransformation
    3473:3481:void run() -> run
androidx.fragment.app.FragmentManagerImpl$FragmentTag -> androidx.fragment.app.FragmentManagerImpl$FragmentTag:
    3256:3256:void <clinit>() -> <clinit>
androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener -> androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener:
    3329:3332:void <init>(androidx.fragment.app.BackStackRecord,boolean) -> <init>
    3390:3391:void cancelTransaction() -> cancelTransaction
    3372:3383:void completeTransaction() -> completeTransaction
    3362:3362:boolean isReady() -> isReady
    3341:3346:void onStartEnterTransition() -> onStartEnterTransition
    3355:3356:void startListening() -> startListening
androidx.fragment.app.FragmentManagerState -> androidx.fragment.app.FragmentManagerState:
    58:58:void <clinit>() -> <clinit>
    30:34:void <init>() -> <init>
    30:42:void <init>(android.os.Parcel) -> <init>
    46:46:int describeContents() -> describeContents
    51:56:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentManagerState$1 -> androidx.fragment.app.FragmentManagerState$1:
    59:59:void <init>() -> <init>
    59:59:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    62:62:androidx.fragment.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    59:59:java.lang.Object[] newArray(int) -> newArray
    67:67:androidx.fragment.app.FragmentManagerState[] newArray(int) -> newArray
androidx.fragment.app.FragmentManagerViewModel -> androidx.fragment.app.FragmentManagerViewModel:
    40:40:void <clinit>() -> <clinit>
    57:84:void <init>(boolean) -> <init>
    99:99:boolean addRetainedFragment(androidx.fragment.app.Fragment) -> addRetainedFragment
    148:163:void clearNonConfigState(androidx.fragment.app.Fragment) -> clearNonConfigState
    230:237:boolean equals(java.lang.Object) -> equals
    129:134:androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment) -> getChildNonConfig
    52:54:androidx.fragment.app.FragmentManagerViewModel getInstance(androidx.lifecycle.ViewModelStore) -> getInstance
    104:104:java.util.Collection getRetainedFragments() -> getRetainedFragments
    139:144:androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment) -> getViewModelStore
    242:245:int hashCode() -> hashCode
    95:95:boolean isCleared() -> isCleared
    88:92:void onCleared() -> onCleared
    124:124:boolean removeRetainedFragment(androidx.fragment.app.Fragment) -> removeRetainedFragment
    108:119:boolean shouldDestroy(androidx.fragment.app.Fragment) -> shouldDestroy
    251:278:java.lang.String toString() -> toString
androidx.fragment.app.FragmentManagerViewModel$1 -> androidx.fragment.app.FragmentManagerViewModel$1:
    40:40:void <init>() -> <init>
    45:46:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.fragment.app.FragmentState -> androidx.fragment.app.FragmentState:
    173:173:void <clinit>() -> <clinit>
    47:60:void <init>(androidx.fragment.app.Fragment) -> <init>
    62:76:void <init>(android.os.Parcel) -> <init>
    153:153:int describeContents() -> describeContents
    80:113:androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,androidx.fragment.app.FragmentFactory) -> instantiate
    119:148:java.lang.String toString() -> toString
    158:171:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentState$1 -> androidx.fragment.app.FragmentState$1:
    174:174:void <init>() -> <init>
    174:174:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    177:177:androidx.fragment.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    174:174:java.lang.Object[] newArray(int) -> newArray
    182:182:androidx.fragment.app.FragmentState[] newArray(int) -> newArray
androidx.fragment.app.FragmentTransaction -> androidx.fragment.app.FragmentTransaction:
    48:108:void <init>() -> <init>
    125:126:androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String) -> add
    113:118:void addOp(androidx.fragment.app.FragmentTransaction$Op) -> addOp
    161:193:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int) -> doAddOp
androidx.fragment.app.FragmentTransaction$Op -> androidx.fragment.app.FragmentTransaction$Op:
    72:73:void <init>() -> <init>
    75:80:void <init>(int,androidx.fragment.app.Fragment) -> <init>
androidx.fragment.app.FragmentTransition -> androidx.fragment.app.FragmentTransition:
    45:63:void <clinit>() -> <clinit>
    648:654:void addSharedElementsWithMatchingNames(java.util.ArrayList,androidx.collection.ArrayMap,java.util.Collection) -> addSharedElementsWithMatchingNames
    1125:1212:void addToFirstInLastOut(androidx.fragment.app.BackStackRecord,androidx.fragment.app.FragmentTransaction$Op,android.util.SparseArray,boolean,boolean) -> addToFirstInLastOut
    1077:1082:void calculateFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean) -> calculateFragments
    163:193:androidx.collection.ArrayMap calculateNameOverrides(int,java.util.ArrayList,java.util.ArrayList,int,int) -> calculateNameOverrides
    1094:1102:void calculatePopFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean) -> calculatePopFragments
    980:997:void callSharedElementStartEnd(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,boolean) -> callSharedElementStartEnd
    471:476:boolean canHandleAll(androidx.fragment.app.FragmentTransitionImpl,java.util.List) -> canHandleAll
    840:884:androidx.collection.ArrayMap captureInSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition) -> captureInSharedElements
    784:819:androidx.collection.ArrayMap captureOutSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition) -> captureOutSharedElements
    425:467:androidx.fragment.app.FragmentTransitionImpl chooseImpl(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment) -> chooseImpl
    1003:1018:java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View) -> configureEnteringExitingViews
    691:764:java.lang.Object configureSharedElementsOrdered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object) -> configureSharedElementsOrdered
    562:634:java.lang.Object configureSharedElementsReordered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object) -> configureSharedElementsReordered
    312:369:void configureTransitionsOrdered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap) -> configureTransitionsOrdered
    214:269:void configureTransitionsReordered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap) -> configureTransitionsReordered
    1222:1226:androidx.fragment.app.FragmentTransition$FragmentContainerTransition ensureContainer(androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.util.SparseArray,int) -> ensureContainer
    891:897:java.lang.String findKeyForValue(androidx.collection.ArrayMap,java.lang.String) -> findKeyForValue
    507:512:java.lang.Object getEnterTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean) -> getEnterTransition
    520:525:java.lang.Object getExitTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean) -> getExitTransition
    913:922:android.view.View getInEpicenterView(androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.lang.Object,boolean) -> getInEpicenterView
    493:499:java.lang.Object getSharedElementTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean) -> getSharedElementTransition
    1042:1063:java.lang.Object mergeTransitions(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,java.lang.Object,androidx.fragment.app.Fragment,boolean) -> mergeTransitions
    279:292:void replaceHide(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList) -> replaceHide
    68:74:androidx.fragment.app.FragmentTransitionImpl resolveSupportImpl() -> resolveSupportImpl
    958:964:void retainValues(androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> retainValues
    394:417:void scheduleTargetChange(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,androidx.fragment.app.Fragment,android.view.View,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleTargetChange
    937:949:void setOutEpicenter(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,androidx.collection.ArrayMap,boolean,androidx.fragment.app.BackStackRecord) -> setOutEpicenter
    1026:1033:void setViewVisibility(java.util.ArrayList,int) -> setViewVisibility
    107:143:void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean) -> startTransitions
androidx.fragment.app.FragmentTransition$1 -> androidx.fragment.app.FragmentTransition$1:
    285:285:void <init>(java.util.ArrayList) -> <init>
    288:289:void run() -> run
androidx.fragment.app.FragmentTransition$2 -> androidx.fragment.app.FragmentTransition$2:
    394:394:void <init>(java.lang.Object,androidx.fragment.app.FragmentTransitionImpl,android.view.View,androidx.fragment.app.Fragment,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.lang.Object) -> <init>
    397:415:void run() -> run
androidx.fragment.app.FragmentTransition$3 -> androidx.fragment.app.FragmentTransition$3:
    624:624:void <init>(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,android.view.View,androidx.fragment.app.FragmentTransitionImpl,android.graphics.Rect) -> <init>
    627:632:void run() -> run
androidx.fragment.app.FragmentTransition$4 -> androidx.fragment.app.FragmentTransition$4:
    736:736:void <init>(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,android.view.View,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,java.util.ArrayList,java.lang.Object,android.graphics.Rect) -> <init>
    739:761:void run() -> run
androidx.fragment.app.FragmentTransition$FragmentContainerTransition -> androidx.fragment.app.FragmentTransition$FragmentContainerTransition:
    1233:1233:void <init>() -> <init>
androidx.fragment.app.FragmentTransitionCompat21 -> androidx.fragment.app.FragmentTransitionCompat21:
    32:32:void <init>() -> <init>
    288:292:void addTarget(java.lang.Object,android.view.View) -> addTarget
    92:113:void addTargets(java.lang.Object,java.util.ArrayList) -> addTargets
    206:207:void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> beginDelayedTransition
    36:36:boolean canHandle(java.lang.Object) -> canHandle
    41:45:java.lang.Object cloneTransition(java.lang.Object) -> cloneTransition
    119:121:boolean hasSimpleTarget(android.transition.Transition) -> hasSimpleTarget
    178:200:java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsInSequence
    127:137:java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsTogether
    296:300:void removeTarget(java.lang.Object,android.view.View) -> removeTarget
    262:284:void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> replaceTargets
    143:171:void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> scheduleHideFragmentView
    214:246:void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleRemoveTargets
    76:88:void setEpicenter(java.lang.Object,android.view.View) -> setEpicenter
    304:316:void setEpicenter(java.lang.Object,android.graphics.Rect) -> setEpicenter
    61:72:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList) -> setSharedElementTargets
    251:257:void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> swapSharedElementTargets
    50:55:java.lang.Object wrapTransitionInSet(java.lang.Object) -> wrapTransitionInSet
androidx.fragment.app.FragmentTransitionCompat21$1 -> androidx.fragment.app.FragmentTransitionCompat21$1:
    81:81:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect) -> <init>
    84:84:android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
androidx.fragment.app.FragmentTransitionCompat21$2 -> androidx.fragment.app.FragmentTransitionCompat21$2:
    144:144:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.view.View,java.util.ArrayList) -> <init>
    161:161:void onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    151:157:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    165:165:void onTransitionPause(android.transition.Transition) -> onTransitionPause
    169:169:void onTransitionResume(android.transition.Transition) -> onTransitionResume
    147:147:void onTransitionStart(android.transition.Transition) -> onTransitionStart
androidx.fragment.app.FragmentTransitionCompat21$3 -> androidx.fragment.app.FragmentTransitionCompat21$3:
    215:215:void <init>(androidx.fragment.app.FragmentTransitionCompat21,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> <init>
    236:236:void onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    231:232:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    240:240:void onTransitionPause(android.transition.Transition) -> onTransitionPause
    244:244:void onTransitionResume(android.transition.Transition) -> onTransitionResume
    218:227:void onTransitionStart(android.transition.Transition) -> onTransitionStart
androidx.fragment.app.FragmentTransitionCompat21$4 -> androidx.fragment.app.FragmentTransitionCompat21$4:
    306:306:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect) -> <init>
    309:312:android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
androidx.fragment.app.FragmentTransitionImpl -> androidx.fragment.app.FragmentTransitionImpl:
    42:42:void <init>() -> <init>
    315:333:void bfsAddViewChildren(java.util.List,android.view.View) -> bfsAddViewChildren
    193:209:void captureTransitioningViews(java.util.ArrayList,android.view.View) -> captureTransitioningViews
    340:345:boolean containedBeforeIndex(java.util.List,android.view.View,int) -> containedBeforeIndex
    360:365:java.lang.String findKeyForValue(java.util.Map,java.lang.String) -> findKeyForValue
    216:230:void findNamedViews(java.util.Map,android.view.View) -> findNamedViews
    79:82:void getBoundsOnScreen(android.view.View,android.graphics.Rect) -> getBoundsOnScreen
    352:352:boolean isNullOrEmpty(java.util.List) -> isNullOrEmpty
    134:141:java.util.ArrayList prepareSetNameOverridesReordered(java.util.ArrayList) -> prepareSetNameOverridesReordered
    296:308:void scheduleNameReset(android.view.ViewGroup,java.util.ArrayList,java.util.Map) -> scheduleNameReset
    237:251:void setNameOverridesOrdered(android.view.View,java.util.ArrayList,java.util.Map) -> setNameOverridesOrdered
    153:182:void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map) -> setNameOverridesReordered
androidx.fragment.app.FragmentTransitionImpl$1 -> androidx.fragment.app.FragmentTransitionImpl$1:
    173:173:void <init>(androidx.fragment.app.FragmentTransitionImpl,int,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> <init>
    176:180:void run() -> run
androidx.fragment.app.FragmentTransitionImpl$2 -> androidx.fragment.app.FragmentTransitionImpl$2:
    237:237:void <init>(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map) -> <init>
    240:249:void run() -> run
androidx.fragment.app.FragmentTransitionImpl$3 -> androidx.fragment.app.FragmentTransitionImpl$3:
    296:296:void <init>(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map) -> <init>
    299:306:void run() -> run
androidx.fragment.app.FragmentViewLifecycleOwner -> androidx.fragment.app.FragmentViewLifecycleOwner:
    24:25:void <init>() -> <init>
    46:47:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    51:52:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event) -> handleLifecycleEvent
    31:34:void initialize() -> initialize
    40:40:boolean isInitialized() -> isInitialized
androidx.fragment.app.SuperNotCalledException -> androidx.fragment.app.SuperNotCalledException:
    23:24:void <init>(java.lang.String) -> <init>
androidx.interpolator.view.animation.FastOutLinearInInterpolator -> androidx.interpolator.view.animation.FastOutLinearInInterpolator:
    34:34:void <clinit>() -> <clinit>
    67:68:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.FastOutSlowInInterpolator -> androidx.interpolator.view.animation.FastOutSlowInInterpolator:
    34:34:void <clinit>() -> <clinit>
    67:68:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.LinearOutSlowInInterpolator -> androidx.interpolator.view.animation.LinearOutSlowInInterpolator:
    34:34:void <clinit>() -> <clinit>
    67:68:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.LookupTableInterpolator -> androidx.interpolator.view.animation.LookupTableInterpolator:
    30:33:void <init>(float[]) -> <init>
    37:54:float getInterpolation(float) -> getInterpolation
androidx.lifecycle.ClassesInfoCache -> androidx.lifecycle.ClassesInfoCache:
    35:35:void <clinit>() -> <clinit>
    33:42:void <init>() -> <init>
    105:161:androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[]) -> createInfo
    70:72:java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class) -> getDeclaredMethods
    81:86:androidx.lifecycle.ClassesInfoCache$CallbackInfo getInfo(java.lang.Class) -> getInfo
    45:65:boolean hasLifecycleMethods(java.lang.Class) -> hasLifecycleMethods
    91:102:void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class) -> verifyAndPutHandler
androidx.lifecycle.ClassesInfoCache$CallbackInfo -> androidx.lifecycle.ClassesInfoCache$CallbackInfo:
    169:181:void <init>(java.util.Map) -> <init>
    185:188:void invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeCallbacks
    192:197:void invokeMethodsForEvent(java.util.List,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeMethodsForEvent
androidx.lifecycle.ClassesInfoCache$MethodReference -> androidx.lifecycle.ClassesInfoCache$MethodReference:
    205:209:void <init>(int,java.lang.reflect.Method) -> <init>
    234:242:boolean equals(java.lang.Object) -> equals
    247:247:int hashCode() -> hashCode
    214:230:void invokeCallback(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeCallback
androidx.lifecycle.CompositeGeneratedAdaptersObserver -> androidx.lifecycle.CompositeGeneratedAdaptersObserver:
    24:26:void <init>(androidx.lifecycle.GeneratedAdapter[]) -> <init>
    30:37:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.FullLifecycleObserverAdapter -> androidx.lifecycle.FullLifecycleObserverAdapter:
    25:28:void <init>(androidx.lifecycle.FullLifecycleObserver,androidx.lifecycle.LifecycleEventObserver) -> <init>
    32:57:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.FullLifecycleObserverAdapter$1 -> androidx.lifecycle.FullLifecycleObserverAdapter$1:
    32:32:void <clinit>() -> <clinit>
androidx.lifecycle.Lifecycle -> androidx.lifecycle.Lifecycle:
    78:85:void <init>() -> <init>
androidx.lifecycle.Lifecycle$Event -> androidx.lifecycle.Lifecycle$Event:
    127:156:void <clinit>() -> <clinit>
    128:128:void <init>(java.lang.String,int) -> <init>
    127:127:androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String) -> valueOf
    127:127:androidx.lifecycle.Lifecycle$Event[] values() -> values
androidx.lifecycle.Lifecycle$State -> androidx.lifecycle.Lifecycle$State:
    163:203:void <clinit>() -> <clinit>
    164:164:void <init>(java.lang.String,int) -> <init>
    212:212:boolean isAtLeast(androidx.lifecycle.Lifecycle$State) -> isAtLeast
    163:163:androidx.lifecycle.Lifecycle$State valueOf(java.lang.String) -> valueOf
    163:163:androidx.lifecycle.Lifecycle$State[] values() -> values
androidx.lifecycle.LifecycleRegistry -> androidx.lifecycle.LifecycleRegistry:
    56:97:void <init>(androidx.lifecycle.LifecycleOwner) -> <init>
    169:199:void addObserver(androidx.lifecycle.LifecycleObserver) -> addObserver
    307:320:void backwardPass(androidx.lifecycle.LifecycleOwner) -> backwardPass
    159:164:androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver) -> calculateTargetState
    261:273:androidx.lifecycle.Lifecycle$Event downEvent(androidx.lifecycle.Lifecycle$State) -> downEvent
    292:304:void forwardPass(androidx.lifecycle.LifecycleOwner) -> forwardPass
    239:239:androidx.lifecycle.Lifecycle$State getCurrentState() -> getCurrentState
    243:257:androidx.lifecycle.Lifecycle$State getStateAfter(androidx.lifecycle.Lifecycle$Event) -> getStateAfter
    130:132:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event) -> handleLifecycleEvent
    150:155:boolean isSynced() -> isSynced
    108:109:void markState(androidx.lifecycle.Lifecycle$State) -> markState
    346:346:androidx.lifecycle.Lifecycle$State min(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State) -> min
    135:147:void moveToState(androidx.lifecycle.Lifecycle$State) -> moveToState
    202:203:void popParentState() -> popParentState
    206:207:void pushParentState(androidx.lifecycle.Lifecycle$State) -> pushParentState
    223:224:void removeObserver(androidx.lifecycle.LifecycleObserver) -> removeObserver
    118:119:void setCurrentState(androidx.lifecycle.Lifecycle$State) -> setCurrentState
    325:343:void sync() -> sync
    277:288:androidx.lifecycle.Lifecycle$Event upEvent(androidx.lifecycle.Lifecycle$State) -> upEvent
androidx.lifecycle.LifecycleRegistry$1 -> androidx.lifecycle.LifecycleRegistry$1:
    243:261:void <clinit>() -> <clinit>
androidx.lifecycle.LifecycleRegistry$ObserverWithState -> androidx.lifecycle.LifecycleRegistry$ObserverWithState:
    353:356:void <init>(androidx.lifecycle.LifecycleObserver,androidx.lifecycle.Lifecycle$State) -> <init>
    359:363:void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> dispatchEvent
androidx.lifecycle.Lifecycling -> androidx.lifecycle.Lifecycling:
    42:43:void <clinit>() -> <clinit>
    104:110:androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object) -> createGeneratedAdapter
    117:136:java.lang.reflect.Constructor generatedConstructor(java.lang.Class) -> generatedConstructor
    205:205:java.lang.String getAdapterName(java.lang.String) -> getAdapterName
    141:147:int getObserverConstructorType(java.lang.Class) -> getObserverConstructorType
    198:198:boolean isLifecycleParent(java.lang.Class) -> isLifecycleParent
    67:97:androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object) -> lifecycleEventObserver
    152:194:int resolveObserverCallbackType(java.lang.Class) -> resolveObserverCallbackType
androidx.lifecycle.Lifecycling$1 -> androidx.lifecycle.Lifecycling$1:
    60:61:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.LiveData -> androidx.lifecycle.LiveData:
    64:64:void <clinit>() -> <clinit>
    59:429:void <init>() -> <init>
    442:446:void assertMainThread(java.lang.String) -> assertMainThread
    96:114:void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper) -> considerNotify
    118:139:void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper) -> dispatchingValue
    171:186:void observe(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer) -> observe
    321:321:void onActive() -> onActive
    334:334:void onInactive() -> onInactive
    224:231:void removeObserver(androidx.lifecycle.Observer) -> removeObserver
    286:290:void setValue(java.lang.Object) -> setValue
androidx.lifecycle.LiveData$1 -> androidx.lifecycle.LiveData$1:
    82:82:void <init>(androidx.lifecycle.LiveData) -> <init>
    86:92:void run() -> run
androidx.lifecycle.LiveData$LifecycleBoundObserver -> androidx.lifecycle.LiveData$LifecycleBoundObserver:
    360:363:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer) -> <init>
    386:387:void detachObserver() -> detachObserver
    381:381:boolean isAttachedTo(androidx.lifecycle.LifecycleOwner) -> isAttachedTo
    372:377:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
    367:367:boolean shouldBeActive() -> shouldBeActive
androidx.lifecycle.LiveData$ObserverWrapper -> androidx.lifecycle.LiveData$ObserverWrapper:
    393:397:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.Observer) -> <init>
    409:426:void activeStateChanged(boolean) -> activeStateChanged
    406:406:void detachObserver() -> detachObserver
    402:402:boolean isAttachedTo(androidx.lifecycle.LifecycleOwner) -> isAttachedTo
androidx.lifecycle.MethodCallsLogger -> androidx.lifecycle.MethodCallsLogger:
    28:29:void <init>() -> <init>
androidx.lifecycle.MutableLiveData -> androidx.lifecycle.MutableLiveData:
    25:25:void <init>() -> <init>
    33:34:void setValue(java.lang.Object) -> setValue
androidx.lifecycle.ReflectiveGenericLifecycleObserver -> androidx.lifecycle.ReflectiveGenericLifecycleObserver:
    29:32:void <init>(java.lang.Object) -> <init>
    36:37:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.ReportFragment -> androidx.lifecycle.ReportFragment:
    32:32:void <init>() -> <init>
    114:126:void dispatch(androidx.lifecycle.Lifecycle$Event) -> dispatch
    55:58:void dispatchCreate(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchCreate
    67:70:void dispatchResume(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchResume
    61:64:void dispatchStart(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchStart
    39:45:void injectIfNeededIn(android.app.Activity) -> injectIfNeededIn
    74:77:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    107:111:void onDestroy() -> onDestroy
    95:97:void onPause() -> onPause
    88:91:void onResume() -> onResume
    81:84:void onStart() -> onStart
    101:103:void onStop() -> onStop
androidx.lifecycle.SingleGeneratedAdapterObserver -> androidx.lifecycle.SingleGeneratedAdapterObserver:
    23:25:void <init>(androidx.lifecycle.GeneratedAdapter) -> <init>
    29:31:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.ViewModel -> androidx.lifecycle.ViewModel:
    108:112:void <init>() -> <init>
    126:140:void clear() -> clear
    185:192:void closeWithRuntimeException(java.lang.Object) -> closeWithRuntimeException
    122:122:void onCleared() -> onCleared
androidx.lifecycle.ViewModelProvider -> androidx.lifecycle.ViewModelProvider:
    105:108:void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory) -> <init>
    126:130:androidx.lifecycle.ViewModel get(java.lang.Class) -> get
    150:168:androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class) -> get
androidx.lifecycle.ViewModelProvider$KeyedFactory -> androidx.lifecycle.ViewModelProvider$KeyedFactory:
    60:60:void <init>() -> <init>
    76:76:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.lifecycle.ViewModelStore -> androidx.lifecycle.ViewModelStore:
    38:40:void <init>() -> <init>
    61:65:void clear() -> clear
    50:50:androidx.lifecycle.ViewModel get(java.lang.String) -> get
    43:47:void put(java.lang.String,androidx.lifecycle.ViewModel) -> put
androidx.loader.app.LoaderManager -> androidx.loader.app.LoaderManager:
    40:44:void <init>() -> <init>
    128:128:androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner) -> getInstance
androidx.loader.app.LoaderManagerImpl -> androidx.loader.app.LoaderManagerImpl:
    42:42:void <clinit>() -> <clinit>
    371:374:void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore) -> <init>
    498:499:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    481:482:void markForRedelivery() -> markForRedelivery
    486:492:java.lang.String toString() -> toString
androidx.loader.app.LoaderManagerImpl$LoaderInfo -> androidx.loader.app.LoaderManagerImpl$LoaderInfo:
    149:152:androidx.loader.content.Loader destroy(boolean) -> destroy
    212:216:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    111:121:void markForRedelivery() -> markForRedelivery
    76:78:void onActive() -> onActive
    82:84:void onInactive() -> onInactive
    134:138:void removeObserver(androidx.lifecycle.Observer) -> removeObserver
    189:195:void setValue(java.lang.Object) -> setValue
    199:207:java.lang.String toString() -> toString
androidx.loader.app.LoaderManagerImpl$LoaderViewModel -> androidx.loader.app.LoaderManagerImpl$LoaderViewModel:
    281:281:void <clinit>() -> <clinit>
    280:296:void <init>() -> <init>
    354:364:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    292:292:androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore) -> getInstance
    335:340:void markForRedelivery() -> markForRedelivery
    344:351:void onCleared() -> onCleared
androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1 -> androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1:
    281:281:void <init>() -> <init>
    286:286:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.recyclerview.widget.AdapterHelper -> androidx.recyclerview.widget.AdapterHelper:
    72:73:void <init>(androidx.recyclerview.widget.AdapterHelper$Callback) -> <init>
    55:79:void <init>(androidx.recyclerview.widget.AdapterHelper$Callback,boolean) -> <init>
    432:433:void applyAdd(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyAdd
    130:131:void applyMove(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyMove
    588:620:int applyPendingUpdatesToPosition(int) -> applyPendingUpdatesToPosition
    134:185:void applyRemove(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyRemove
    188:225:void applyUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyUpdate
    411:428:boolean canFindInPreLayout(int) -> canFindInPreLayout
    119:125:void consumePostponedUpdates() -> consumePostponedUpdates
    557:585:void consumeUpdatesInOnePass() -> consumeUpdatesInOnePass
    231:312:void dispatchAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> dispatchAndUpdateViewHolders
    315:327:void dispatchFirstPassAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp,int) -> dispatchFirstPassAndUpdateViewHolders
    468:468:int findPositionOffset(int) -> findPositionOffset
    472:497:int findPositionOffset(int,int) -> findPositionOffset
    464:464:boolean hasAnyUpdateTypes(int) -> hasAnyUpdateTypes
    460:460:boolean hasPendingUpdates() -> hasPendingUpdates
    624:624:boolean hasUpdates() -> hasUpdates
    727:736:androidx.recyclerview.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int,java.lang.Object) -> obtainUpdateOp
    504:509:boolean onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    516:521:boolean onItemRangeInserted(int,int) -> onItemRangeInserted
    528:533:boolean onItemRangeRemoved(int,int) -> onItemRangeRemoved
    439:457:void postponeAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> postponeAndUpdateViewHolders
    93:116:void preProcess() -> preProcess
    741:745:void recycleUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> recycleUpdateOp
    748:753:void recycleUpdateOpsAndClearList(java.util.List) -> recycleUpdateOpsAndClearList
    87:90:void reset() -> reset
    330:407:int updatePositionWithPostponed(int,int) -> updatePositionWithPostponed
androidx.recyclerview.widget.AdapterHelper$UpdateOp -> androidx.recyclerview.widget.AdapterHelper$UpdateOp:
    651:656:void <init>(int,int,int,java.lang.Object) -> <init>
    659:669:java.lang.String cmdToString() -> cmdToString
    681:713:boolean equals(java.lang.Object) -> equals
    718:721:int hashCode() -> hashCode
    674:675:java.lang.String toString() -> toString
androidx.recyclerview.widget.ChildHelper -> androidx.recyclerview.widget.ChildHelper:
    48:52:void <init>(androidx.recyclerview.widget.ChildHelper$Callback) -> <init>
    85:86:void addView(android.view.View,boolean) -> addView
    98:111:void addView(android.view.View,int,boolean) -> addView
    230:244:void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean) -> attachViewToParent
    282:288:void detachViewFromParent(int) -> detachViewFromParent
    206:216:android.view.View findHiddenNonRemovedView(int) -> findHiddenNonRemovedView
    180:181:android.view.View getChildAt(int) -> getChildAt
    253:253:int getChildCount() -> getChildCount
    114:131:int getOffset(int) -> getOffset
    273:273:android.view.View getUnfilteredChildAt(int) -> getUnfilteredChildAt
    263:263:int getUnfilteredChildCount() -> getUnfilteredChildCount
    328:340:void hide(android.view.View) -> hide
    60:62:void hideViewInternal(android.view.View) -> hideViewInternal
    297:309:int indexOfChild(android.view.View) -> indexOfChild
    319:319:boolean isHidden(android.view.View) -> isHidden
    188:197:void removeAllViewsUnfiltered() -> removeAllViewsUnfiltered
    140:151:void removeView(android.view.View) -> removeView
    160:172:void removeViewAt(int) -> removeViewAt
    373:389:boolean removeViewIfHidden(android.view.View) -> removeViewIfHidden
    363:363:java.lang.String toString() -> toString
    350:359:void unhide(android.view.View) -> unhide
    70:74:boolean unhideViewInternal(android.view.View) -> unhideViewInternal
androidx.recyclerview.widget.ChildHelper$Bucket -> androidx.recyclerview.widget.ChildHelper$Bucket:
    395:401:void <init>() -> <init>
    421:429:void clear(int) -> clear
    493:502:int countOnesBefore(int) -> countOnesBefore
    415:418:void ensureNext() -> ensureNext
    432:436:boolean get(int) -> get
    448:467:void insert(int,boolean) -> insert
    470:488:boolean remove(int) -> remove
    441:445:void reset() -> reset
    406:412:void set(int) -> set
    508:509:java.lang.String toString() -> toString
androidx.recyclerview.widget.DefaultItemAnimator -> androidx.recyclerview.widget.DefaultItemAnimator:
    38:70:void <init>() -> <init>
    222:225:boolean animateAdd(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateAdd
    229:252:void animateAddImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateAddImpl
    321:344:boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateChange
    348:397:void animateChangeImpl(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo) -> animateChangeImpl
    257:274:boolean animateMove(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateMove
    278:316:void animateMoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateMoveImpl
    193:195:boolean animateRemove(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateRemove
    199:218:void animateRemoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateRemoveImpl
    665:665:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List) -> canReuseUpdatedViewHolder
    641:644:void cancelAll(java.util.List) -> cancelAll
    550:553:void dispatchFinishedWhenDone() -> dispatchFinishedWhenDone
    437:519:void endAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> endAnimation
    557:638:void endAnimations() -> endAnimations
    400:408:void endChangeAnimation(java.util.List,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> endChangeAnimation
    411:417:void endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo) -> endChangeAnimationIfNecessary
    419:432:boolean endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> endChangeAnimationIfNecessary
    531:541:boolean isRunning() -> isRunning
    522:527:void resetAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> resetAnimation
    102:189:void runPendingAnimations() -> runPendingAnimations
androidx.recyclerview.widget.DefaultItemAnimator$1 -> androidx.recyclerview.widget.DefaultItemAnimator$1:
    121:121:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    124:130:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$2 -> androidx.recyclerview.widget.DefaultItemAnimator$2:
    145:145:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    148:153:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$3 -> androidx.recyclerview.widget.DefaultItemAnimator$3:
    168:168:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    171:176:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$4 -> androidx.recyclerview.widget.DefaultItemAnimator$4:
    203:203:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    211:216:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    206:207:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$5 -> androidx.recyclerview.widget.DefaultItemAnimator$5:
    233:233:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,android.view.View,android.view.ViewPropertyAnimator) -> <init>
    241:242:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    246:250:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    236:237:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$6 -> androidx.recyclerview.widget.DefaultItemAnimator$6:
    292:292:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,android.view.View,int,android.view.ViewPropertyAnimator) -> <init>
    300:306:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    310:314:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    295:296:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$7 -> androidx.recyclerview.widget.DefaultItemAnimator$7:
    358:358:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    366:373:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    361:362:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$8 -> androidx.recyclerview.widget.DefaultItemAnimator$8:
    380:380:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    387:394:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    383:384:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo -> androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo:
    73:76:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> <init>
    80:85:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> <init>
    89:89:java.lang.String toString() -> toString
androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo -> androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo:
    61:67:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> <init>
androidx.recyclerview.widget.FastScroller -> androidx.recyclerview.widget.FastScroller:
    74:75:void <clinit>() -> <clinit>
    104:161:void <init>(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int) -> <init>
    164:174:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> attachToRecyclerView
    267:268:void cancelHide() -> cancelHide
    183:187:void destroyCallbacks() -> destroyCallbacks
    325:338:void drawHorizontalScrollbar(android.graphics.Canvas) -> drawHorizontalScrollbar
    300:322:void drawVerticalScrollbar(android.graphics.Canvas) -> drawVerticalScrollbar
    551:553:int[] getHorizontalRange() -> getHorizontalRange
    542:544:int[] getVerticalRange() -> getVerticalRange
    253:264:void hide(int) -> hide
    470:484:void horizontalScrollTo(float) -> horizontalScrollTo
    216:216:boolean isLayoutRTL() -> isLayoutRTL
    513:513:boolean isPointInsideHorizontalThumb(float,float) -> isPointInsideHorizontalThumb
    505:505:boolean isPointInsideVerticalThumb(float,float) -> isPointInsideVerticalThumb
    277:297:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
    390:413:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    452:452:void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
    418:449:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
    191:192:void requestRedraw() -> requestRedraw
    271:273:void resetHideDelay(int) -> resetHideDelay
    488:499:int scrollTo(float,float,int[],int,int,int) -> scrollTo
    195:213:void setState(int) -> setState
    177:180:void setupCallbacks() -> setupCallbacks
    233:245:void show() -> show
    348:384:void updateScrollPosition(int,int) -> updateScrollPosition
    455:467:void verticalScrollTo(float) -> verticalScrollTo
androidx.recyclerview.widget.FastScroller$1 -> androidx.recyclerview.widget.FastScroller$1:
    123:123:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    126:127:void run() -> run
androidx.recyclerview.widget.FastScroller$2 -> androidx.recyclerview.widget.FastScroller$2:
    130:130:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    133:135:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
androidx.recyclerview.widget.FastScroller$AnimatorListener -> androidx.recyclerview.widget.FastScroller$AnimatorListener:
    558:561:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    581:582:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    566:577:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.recyclerview.widget.FastScroller$AnimatorUpdater -> androidx.recyclerview.widget.FastScroller$AnimatorUpdater:
    586:587:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    591:595:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.recyclerview.widget.GapWorker -> androidx.recyclerview.widget.GapWorker:
    31:188:void <clinit>() -> <clinit>
    29:63:void <init>() -> <init>
    161:162:void add(androidx.recyclerview.widget.RecyclerView) -> add
    215:260:void buildTaskList() -> buildTaskList
    342:351:void flushTaskWithDeadline(androidx.recyclerview.widget.GapWorker$Task,long) -> flushTaskWithDeadline
    354:362:void flushTasksWithDeadline(long) -> flushTasksWithDeadline
    263:272:boolean isPrefetchPositionAttached(androidx.recyclerview.widget.RecyclerView,int) -> isPrefetchPositionAttached
    175:186:void postFromTraversal(androidx.recyclerview.widget.RecyclerView,int,int) -> postFromTraversal
    365:367:void prefetch(long) -> prefetch
    310:339:void prefetchInnerRecyclerViewWithDeadline(androidx.recyclerview.widget.RecyclerView,long) -> prefetchInnerRecyclerViewWithDeadline
    277:305:androidx.recyclerview.widget.RecyclerView$ViewHolder prefetchPositionWithDeadline(androidx.recyclerview.widget.RecyclerView,int,long) -> prefetchPositionWithDeadline
    165:169:void remove(androidx.recyclerview.widget.RecyclerView) -> remove
    372:404:void run() -> run
androidx.recyclerview.widget.GapWorker$1 -> androidx.recyclerview.widget.GapWorker$1:
    188:188:void <init>() -> <init>
    188:188:int compare(java.lang.Object,java.lang.Object) -> compare
    192:209:int compare(androidx.recyclerview.widget.GapWorker$Task,androidx.recyclerview.widget.GapWorker$Task) -> compare
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl -> androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl:
    63:63:void <init>() -> <init>
    110:134:void addPosition(int,int) -> addPosition
    150:154:void clearPrefetchPositions() -> clearPrefetchPositions
    77:106:void collectPrefetchPositionsFromView(androidx.recyclerview.widget.RecyclerView,boolean) -> collectPrefetchPositionsFromView
    137:143:boolean lastPrefetchIncludedPosition(int) -> lastPrefetchIncludedPosition
    72:74:void setPrefetchVector(int,int) -> setPrefetchVector
androidx.recyclerview.widget.GapWorker$Task -> androidx.recyclerview.widget.GapWorker$Task:
    37:37:void <init>() -> <init>
    45:50:void clear() -> clear
androidx.recyclerview.widget.GridLayoutManager -> androidx.recyclerview.widget.GridLayoutManager:
    44:75:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    44:86:void <init>(android.content.Context,int) -> <init>
    771:788:void assignSpans(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int,boolean) -> assignSpans
    190:197:void cachePreLayoutSpanMapping() -> cachePreLayoutSpanMapping
    310:311:void calculateItemBorders(int) -> calculateItemBorders
    321:340:int[] calculateItemBorders(int[],int,int) -> calculateItemBorders
    252:252:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    185:187:void clearPreLayoutSpanMappingCache() -> clearPreLayoutSpanMappingCache
    511:521:void collectPrefetchPositionsForLayoutState(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectPrefetchPositionsForLayoutState
    387:412:void ensureAnchorIsInCorrectSpan(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> ensureAnchorIsInCorrectSpan
    364:367:void ensureViewSet() -> ensureViewSet
    417:446:android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int,int) -> findReferenceChild
    227:231:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    238:238:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    243:246:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    132:140:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getColumnCountForAccessibility
    118:126:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getRowCountForAccessibility
    344:348:int getSpaceForSpanRange(int,int) -> getSpaceForSpanRange
    451:463:int getSpanGroupIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> getSpanGroupIndex
    467:484:int getSpanIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> getSpanIndex
    488:505:int getSpanSize(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> getSpanSize
    746:749:void guessMeasurement(float,int) -> guessMeasurement
    526:700:void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult) -> layoutChunk
    712:733:void measureChild(android.view.View,int,boolean) -> measureChild
    753:763:void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean) -> measureChildWithDecorationsAndMargin
    355:361:void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> onAnchorReady
    995:1112:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    146:164:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    201:202:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    206:207:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> onItemsChanged
    222:223:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    211:212:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    217:218:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    168:176:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    180:182:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    372:374:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    380:382:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    286:304:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    810:821:void setSpanCount(int) -> setSpanCount
    107:113:void setStackFromEnd(boolean) -> setStackFromEnd
    1117:1117:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    276:282:void updateMeasurements() -> updateMeasurements
androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup -> androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup:
    1123:1123:void <init>() -> <init>
    1132:1132:int getSpanIndex(int,int) -> getSpanIndex
    1127:1127:int getSpanSize(int) -> getSpanSize
androidx.recyclerview.widget.GridLayoutManager$LayoutParams -> androidx.recyclerview.widget.GridLayoutManager$LayoutParams:
    1150:1156:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1150:1160:void <init>(int,int) -> <init>
    1150:1164:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    1150:1168:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    1189:1189:int getSpanIndex() -> getSpanIndex
    1199:1199:int getSpanSize() -> getSpanSize
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup -> androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup:
    830:834:void <init>() -> <init>
    873:882:int getCachedSpanIndex(int,int) -> getCachedSpanIndex
    970:988:int getSpanGroupIndex(int,int) -> getSpanGroupIndex
    860:861:void invalidateSpanIndexCache() -> invalidateSpanIndexCache
androidx.recyclerview.widget.LayoutState -> androidx.recyclerview.widget.LayoutState:
    25:74:void <init>() -> <init>
    90:90:boolean hasMore(androidx.recyclerview.widget.RecyclerView$State) -> hasMore
    100:102:android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler) -> next
    107:107:java.lang.String toString() -> toString
androidx.recyclerview.widget.LinearLayoutManager -> androidx.recyclerview.widget.LinearLayoutManager:
    153:154:void <init>(android.content.Context) -> <init>
    66:166:void <init>(android.content.Context,int,boolean) -> <init>
    66:182:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1349:1352:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    289:289:boolean canScrollHorizontally() -> canScrollHorizontally
    297:297:boolean canScrollVertically() -> canScrollVertically
    1308:1319:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    1228:1254:void collectInitialPrefetchPositions(int,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectInitialPrefetchPositions
    1217:1221:void collectPrefetchPositionsForLayoutState(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectPrefetchPositionsForLayoutState
    1090:1090:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    1080:1080:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1100:1100:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    1120:1126:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollExtent
    1109:1115:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollOffset
    1131:1137:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollRange
    456:464:android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    1095:1095:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    1085:1085:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1105:1105:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    1646:1679:int convertFocusDirectionToLayoutDirection(int) -> convertFocusDirectionToLayoutDirection
    998:998:androidx.recyclerview.widget.LinearLayoutManager$LayoutState createLayoutState() -> createLayoutState
    987:990:void ensureLayoutState() -> ensureLayoutState
    1502:1552:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fill
    1830:1830:android.view.View findFirstPartiallyOrCompletelyInvisibleChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findFirstPartiallyOrCompletelyInvisibleChild
    1775:1775:android.view.View findFirstReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findFirstReferenceChild
    1731:1735:android.view.View findFirstVisibleChildClosestToEnd(boolean,boolean) -> findFirstVisibleChildClosestToEnd
    1713:1717:android.view.View findFirstVisibleChildClosestToStart(boolean,boolean) -> findFirstVisibleChildClosestToStart
    1857:1858:int findFirstVisibleItemPosition() -> findFirstVisibleItemPosition
    1835:1835:android.view.View findLastPartiallyOrCompletelyInvisibleChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findLastPartiallyOrCompletelyInvisibleChild
    1779:1779:android.view.View findLastReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findLastReferenceChild
    1897:1898:int findLastVisibleItemPosition() -> findLastVisibleItemPosition
    1946:1968:android.view.View findOnePartiallyOrCompletelyInvisibleChild(int,int) -> findOnePartiallyOrCompletelyInvisibleChild
    1924:1941:android.view.View findOneVisibleChild(int,int,boolean,boolean) -> findOneVisibleChild
    1816:1817:android.view.View findPartiallyOrCompletelyInvisibleChildClosestToEnd(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findPartiallyOrCompletelyInvisibleChildClosestToEnd
    1824:1825:android.view.View findPartiallyOrCompletelyInvisibleChildClosestToStart(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findPartiallyOrCompletelyInvisibleChildClosestToStart
    1785:1809:android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int,int) -> findReferenceChild
    1753:1754:android.view.View findReferenceChildClosestToEnd(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findReferenceChildClosestToEnd
    1770:1771:android.view.View findReferenceChildClosestToStart(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findReferenceChildClosestToStart
    401:414:android.view.View findViewByPosition(int) -> findViewByPosition
    908:925:int fixLayoutEndGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixLayoutEndGap
    933:950:int fixLayoutStartGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixLayoutStartGap
    194:194:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1701:1701:android.view.View getChildClosestToEnd() -> getChildClosestToEnd
    1691:1691:android.view.View getChildClosestToStart() -> getChildClosestToStart
    438:441:int getExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State) -> getExtraLayoutSpace
    324:324:int getOrientation() -> getOrientation
    186:186:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    983:983:boolean isLayoutRTL() -> isLayoutRTL
    1557:1626:void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult) -> layoutChunk
    702:749:void layoutForPredictiveAnimations(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int) -> layoutForPredictiveAnimations
    690:690:void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> onAnchorReady
    228:233:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    1975:2016:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    237:242:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    483:668:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    672:677:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    273:282:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    246:268:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1478:1486:void recycleByLayoutState(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState) -> recycleByLayoutState
    1361:1376:void recycleChildren(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> recycleChildren
    1434:1464:void recycleViewsFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int) -> recycleViewsFromEnd
    1389:1420:void recycleViewsFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int) -> recycleViewsFromStart
    1211:1212:boolean resolveIsInfinite() -> resolveIsInfinite
    356:361:void resolveShouldLayoutReverse() -> resolveShouldLayoutReverse
    1322:1344:int scrollBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollBy
    1060:1063:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    1017:1023:void scrollToPosition(int) -> scrollToPosition
    1072:1075:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    334:347:void setOrientation(int) -> setOrientation
    388:394:void setReverseLayout(boolean) -> setReverseLayout
    304:310:void setStackFromEnd(boolean) -> setStackFromEnd
    1630:1632:boolean shouldMeasureTwice() -> shouldMeasureTwice
    448:452:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
    2085:2085:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    781:814:boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorFromChildren
    822:900:boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorFromPendingData
    753:771:void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorInfoForLayout
    1176:1208:void updateLayoutState(int,int,boolean,androidx.recyclerview.widget.RecyclerView$State) -> updateLayoutState
    954:955:void updateLayoutStateToFillEnd(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateLayoutStateToFillEnd
    958:965:void updateLayoutStateToFillEnd(int,int) -> updateLayoutStateToFillEnd
    968:969:void updateLayoutStateToFillStart(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateLayoutStateToFillStart
    972:980:void updateLayoutStateToFillStart(int,int) -> updateLayoutStateToFillStart
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo -> androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo:
    2379:2381:void <init>() -> <init>
    2395:2398:void assignCoordinateFromPadding() -> assignCoordinateFromPadding
    2464:2472:void assignFromView(android.view.View,int) -> assignFromView
    2417:2461:void assignFromViewAndKeepVisibleRect(android.view.View,int) -> assignFromViewAndKeepVisibleRect
    2411:2413:boolean isViewValidAsAnchor(android.view.View,androidx.recyclerview.widget.RecyclerView$State) -> isViewValidAsAnchor
    2384:2388:void reset() -> reset
    2402:2402:java.lang.String toString() -> toString
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult -> androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult:
    2475:2475:void <init>() -> <init>
    2482:2486:void resetInternal() -> resetInternal
androidx.recyclerview.widget.LinearLayoutManager$LayoutState -> androidx.recyclerview.widget.LinearLayoutManager$LayoutState:
    2127:2206:void <init>() -> <init>
    2259:2260:void assignPositionFromScrapList() -> assignPositionFromScrapList
    2263:2270:void assignPositionFromScrapList(android.view.View) -> assignPositionFromScrapList
    2217:2217:boolean hasMore(androidx.recyclerview.widget.RecyclerView$State) -> hasMore
    2227:2232:android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler) -> next
    2243:2255:android.view.View nextViewFromScrapList() -> nextViewFromScrapList
    2273:2298:android.view.View nextViewInLimitedList(android.view.View) -> nextViewInLimitedList
androidx.recyclerview.widget.LinearLayoutManager$SavedState -> androidx.recyclerview.widget.LinearLayoutManager$SavedState:
    2355:2355:void <clinit>() -> <clinit>
    2319:2321:void <init>() -> <init>
    2323:2327:void <init>(android.os.Parcel) -> <init>
    2329:2333:void <init>(androidx.recyclerview.widget.LinearLayoutManager$SavedState) -> <init>
    2345:2345:int describeContents() -> describeContents
    2336:2336:boolean hasValidAnchor() -> hasValidAnchor
    2340:2341:void invalidateAnchor() -> invalidateAnchor
    2350:2353:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.LinearLayoutManager$SavedState$1 -> androidx.recyclerview.widget.LinearLayoutManager$SavedState$1:
    2356:2356:void <init>() -> <init>
    2356:2356:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2359:2359:androidx.recyclerview.widget.LinearLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2356:2356:java.lang.Object[] newArray(int) -> newArray
    2364:2364:androidx.recyclerview.widget.LinearLayoutManager$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.LinearSmoothScroller -> androidx.recyclerview.widget.LinearSmoothScroller:
    81:95:void <init>(android.content.Context) -> <init>
    269:288:int calculateDtToFit(int,int,int,int,int) -> calculateDtToFit
    328:338:int calculateDxToMakeVisible(android.view.View,int) -> calculateDxToMakeVisible
    303:313:int calculateDyToMakeVisible(android.view.View,int) -> calculateDyToMakeVisible
    163:163:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
    180:180:int calculateTimeForDeceleration(int) -> calculateTimeForDeceleration
    194:194:int calculateTimeForScrolling(int) -> calculateTimeForScrolling
    255:260:int clampApplyScroll(int,int) -> clampApplyScroll
    207:207:int getHorizontalSnapPreference() -> getHorizontalSnapPreference
    221:221:int getVerticalSnapPreference() -> getVerticalSnapPreference
    127:144:void onSeekTargetStep(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onSeekTargetStep
    103:103:void onStart() -> onStart
    151:153:void onStop() -> onStop
    110:117:void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onTargetFound
    233:252:void updateActionForInterimTarget(androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> updateActionForInterimTarget
androidx.recyclerview.widget.OpReorderer -> androidx.recyclerview.widget.OpReorderer:
    25:27:void <init>(androidx.recyclerview.widget.OpReorderer$Callback) -> <init>
    213:224:int getLastMoveOutOfOrder(java.util.List) -> getLastMoveOutOfOrder
    33:36:void reorderOps(java.util.List) -> reorderOps
    155:172:void swapMoveAdd(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveAdd
    39:52:void swapMoveOp(java.util.List,int,int) -> swapMoveOp
    56:151:void swapMoveRemove(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveRemove
    176:210:void swapMoveUpdate(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveUpdate
androidx.recyclerview.widget.OrientationHelper -> androidx.recyclerview.widget.OrientationHelper:
    32:32:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper$1) -> <init>
    42:48:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    258:258:androidx.recyclerview.widget.OrientationHelper createHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createHorizontalHelper
    241:247:androidx.recyclerview.widget.OrientationHelper createOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager,int) -> createOrientationHelper
    356:356:androidx.recyclerview.widget.OrientationHelper createVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createVerticalHelper
    78:78:int getTotalSpaceChange() -> getTotalSpaceChange
    64:65:void onLayoutComplete() -> onLayoutComplete
androidx.recyclerview.widget.OrientationHelper$1 -> androidx.recyclerview.widget.OrientationHelper$1:
    258:258:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    297:299:int getDecoratedEnd(android.view.View) -> getDecoratedEnd
    281:283:int getDecoratedMeasurement(android.view.View) -> getDecoratedMeasurement
    289:291:int getDecoratedMeasurementInOther(android.view.View) -> getDecoratedMeasurementInOther
    304:306:int getDecoratedStart(android.view.View) -> getDecoratedStart
    266:266:int getEnd() -> getEnd
    261:261:int getEndAfterPadding() -> getEndAfterPadding
    334:334:int getEndPadding() -> getEndPadding
    339:339:int getMode() -> getMode
    344:344:int getModeInOther() -> getModeInOther
    276:276:int getStartAfterPadding() -> getStartAfterPadding
    323:324:int getTotalSpace() -> getTotalSpace
    311:312:int getTransformedEndWithDecoration(android.view.View) -> getTransformedEndWithDecoration
    317:318:int getTransformedStartWithDecoration(android.view.View) -> getTransformedStartWithDecoration
    271:272:void offsetChildren(int) -> offsetChildren
androidx.recyclerview.widget.OrientationHelper$2 -> androidx.recyclerview.widget.OrientationHelper$2:
    356:356:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    395:397:int getDecoratedEnd(android.view.View) -> getDecoratedEnd
    379:381:int getDecoratedMeasurement(android.view.View) -> getDecoratedMeasurement
    387:389:int getDecoratedMeasurementInOther(android.view.View) -> getDecoratedMeasurementInOther
    402:404:int getDecoratedStart(android.view.View) -> getDecoratedStart
    364:364:int getEnd() -> getEnd
    359:359:int getEndAfterPadding() -> getEndAfterPadding
    432:432:int getEndPadding() -> getEndPadding
    437:437:int getMode() -> getMode
    442:442:int getModeInOther() -> getModeInOther
    374:374:int getStartAfterPadding() -> getStartAfterPadding
    421:422:int getTotalSpace() -> getTotalSpace
    409:410:int getTransformedEndWithDecoration(android.view.View) -> getTransformedEndWithDecoration
    415:416:int getTransformedStartWithDecoration(android.view.View) -> getTransformedStartWithDecoration
    369:370:void offsetChildren(int) -> offsetChildren
androidx.recyclerview.widget.RecyclerView -> androidx.recyclerview.widget.RecyclerView:
    215:595:void <clinit>() -> <clinit>
    647:648:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    358:727:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    2440:2459:void absorbGlows(int,int) -> absorbGlows
    207:207:void access$000(androidx.recyclerview.widget.RecyclerView,android.view.View,int,android.view.ViewGroup$LayoutParams) -> access$000
    207:207:void access$100(androidx.recyclerview.widget.RecyclerView,int) -> access$100
    207:207:boolean access$200(androidx.recyclerview.widget.RecyclerView) -> access$200
    207:207:void access$300(androidx.recyclerview.widget.RecyclerView,int,int) -> access$300
    1426:1437:void addAnimatingView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> addAnimatingView
    2772:2775:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    1563:1577:void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration,int) -> addItemDecoration
    1592:1593:void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration) -> addItemDecoration
    2908:2909:void addOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener) -> addOnItemTouchListener
    1701:1705:void addOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> addOnScrollListener
    4153:4157:void animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateAppearance
    4171:4189:void animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,boolean,boolean) -> animateChange
    4161:4166:void animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateDisappearance
    2877:2892:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    4464:4465:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    3239:3241:void cancelTouch() -> cancelTouch
    4290:4290:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    5592:5608:void clearNestedRecyclerViewIfNotNested(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> clearNestedRecyclerViewIfNotNested
    4344:4352:void clearOldPositions() -> clearOldPositions
    2007:2010:int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    1982:1985:int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    2030:2033:int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    2079:2082:int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    2055:2058:int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    2102:2105:int computeVerticalScrollRange() -> computeVerticalScrollRange
    2417:2437:void considerReleasingGlowsOnScroll(int,int) -> considerReleasingGlowsOnScroll
    1856:1891:void consumePendingUpdateOperations() -> consumePendingUpdateOperations
    778:827:void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int) -> createLayoutManager
    3402:3410:void defaultOnMeasure(int,int) -> defaultOnMeasure
    4117:4118:boolean didChildRangeChange(int,int) -> didChildRangeChange
    7267:7278:void dispatchChildAttached(android.view.View) -> dispatchChildAttached
    7253:7264:void dispatchChildDetached(android.view.View) -> dispatchChildDetached
    3471:3479:void dispatchContentChangedIfNecessary() -> dispatchContentChangedIfNecessary
    3627:3653:void dispatchLayout() -> dispatchLayout
    3823:3908:void dispatchLayoutStep1() -> dispatchLayoutStep1
    3915:3934:void dispatchLayoutStep2() -> dispatchLayoutStep2
    3941:4025:void dispatchLayoutStep3() -> dispatchLayoutStep3
    11332:11332:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    11337:11337:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    11320:11320:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    11326:11326:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    11307:11307:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    11314:11314:boolean dispatchNestedScroll(int,int,int,int,int[],int) -> dispatchNestedScroll
    2941:2968:boolean dispatchOnItemTouch(android.view.MotionEvent) -> dispatchOnItemTouch
    2924:2937:boolean dispatchOnItemTouchIntercept(android.view.MotionEvent) -> dispatchOnItemTouchIntercept
    4984:5001:void dispatchOnScrollStateChanged(int) -> dispatchOnScrollStateChanged
    4944:4965:void dispatchOnScrolled(int,int) -> dispatchOnScrolled
    11219:11233:void dispatchPendingImportantForAccessibilityChanges() -> dispatchPendingImportantForAccessibilityChanges
    1414:1415:void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    1406:1407:void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    4219:4276:void draw(android.graphics.Canvas) -> draw
    4820:4820:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    2502:2512:void ensureBottomGlow() -> ensureBottomGlow
    2462:2472:void ensureLeftGlow() -> ensureLeftGlow
    2475:2485:void ensureRightGlow() -> ensureRightGlow
    2488:2499:void ensureTopGlow() -> ensureTopGlow
    734:737:java.lang.String exceptionLabel() -> exceptionLabel
    3805:3813:void fillRemainingScrollValues(androidx.recyclerview.widget.RecyclerView$State) -> fillRemainingScrollValues
    4582:4587:android.view.View findContainingItemView(android.view.View) -> findContainingItemView
    4600:4601:androidx.recyclerview.widget.RecyclerView$ViewHolder findContainingViewHolder(android.view.View) -> findContainingViewHolder
    4091:4114:void findMinMaxChildLayoutPositions(int[]) -> findMinMaxChildLayoutPositions
    5570:5585:androidx.recyclerview.widget.RecyclerView findNestedRecyclerView(android.view.View) -> findNestedRecyclerView
    3692:3715:android.view.View findNextViewToFocus() -> findNextViewToFocus
    4714:4731:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int) -> findViewHolderForAdapterPosition
    4776:4791:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForItemId(long) -> findViewHolderForItemId
    4736:4758:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int,boolean) -> findViewHolderForPosition
    2275:2322:boolean fling(int,int) -> fling
    2577:2651:android.view.View focusSearch(android.view.View,int) -> focusSearch
    4295:4298:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    4303:4306:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    4311:4314:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1221:1221:androidx.recyclerview.widget.RecyclerView$Adapter getAdapter() -> getAdapter
    11236:11241:int getAdapterPositionFor(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getAdapterPositionFor
    1248:1251:int getBaseline() -> getBaseline
    4148:4148:long getChangedHolderKey(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getChangedHolderKey
    13220:13223:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    4643:4644:int getChildLayoutPosition(android.view.View) -> getChildLayoutPosition
    4559:4564:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> getChildViewHolder
    4606:4609:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View) -> getChildViewHolderInt
    1094:1094:boolean getClipToPadding() -> getClipToPadding
    760:760:androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate() -> getCompatAccessibilityDelegate
    4886:4892:void getDecoratedBoundsWithMarginsInt(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMarginsInt
    3793:3801:int getDeepestFocusedViewWithId(android.view.View) -> getDeepestFocusedViewWithId
    2542:2542:androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory() -> getEdgeEffectFactory
    830:836:java.lang.String getFullClassName(android.content.Context,java.lang.String) -> getFullClassName
    3546:3546:androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator() -> getItemAnimator
    4895:4916:android.graphics.Rect getItemDecorInsetsForChild(android.view.View) -> getItemDecorInsetsForChild
    1618:1618:int getItemDecorationCount() -> getItemDecorationCount
    1469:1469:androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    2360:2360:int getMaxFlingVelocity() -> getMaxFlingVelocity
    2350:2350:int getMinFlingVelocity() -> getMinFlingVelocity
    5617:5620:long getNanoTime() -> getNanoTime
    1370:1370:androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener() -> getOnFlingListener
    4531:4531:boolean getPreserveFocusAfterLayout() -> getPreserveFocusAfterLayout
    1482:1482:androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> getRecycledViewPool
    1530:1530:int getScrollState() -> getScrollState
    13250:13253:androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper() -> getScrollingChildHelper
    4045:4072:void handleMissingPreInfoForChangeError(long,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> handleMissingPreInfoForChangeError
    11296:11296:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    11301:11301:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    5017:5018:boolean hasPendingAdapterUpdates() -> hasPendingAdapterUpdates
    1897:1907:boolean hasUpdatedView() -> hasUpdatedView
    963:1043:void initAdapterManager() -> initAdapterManager
    748:752:void initAutofill() -> initAutofill
    840:960:void initChildrenHelper() -> initChildrenHelper
    11248:11260:void initFastScroller(android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable) -> initFastScroller
    2515:2516:void invalidateGlows() -> invalidateGlows
    3467:3467:boolean isAccessibilityEnabled() -> isAccessibilityEnabled
    2848:2848:boolean isAttachedToWindow() -> isAttachedToWindow
    3501:3501:boolean isComputingLayout() -> isComputingLayout
    11271:11271:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    2663:2717:boolean isPreferredNextFocus(android.view.View,android.view.View,int) -> isPreferredNextFocus
    1750:1755:void jumpToPositionForSmoothScroller(int) -> jumpToPositionForSmoothScroller
    4209:4215:void markItemDecorInsetsDirty() -> markItemDecorInsetsDirty
    4492:4501:void markKnownViewsInvalid() -> markKnownViewsInvalid
    4868:4872:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    4830:4834:void offsetChildrenVertical(int) -> offsetChildrenVertical
    4389:4403:void offsetPositionRecordsForInsert(int,int) -> offsetPositionRecordsForInsert
    4355:4386:void offsetPositionRecordsForMove(int,int) -> offsetPositionRecordsForMove
    4407:4433:void offsetPositionRecordsForRemove(int,int,boolean) -> offsetPositionRecordsForRemove
    2789:2819:void onAttachedToWindow() -> onAttachedToWindow
    4847:4847:void onChildAttachedToWindow(android.view.View) -> onChildAttachedToWindow
    4859:4859:void onChildDetachedFromWindow(android.view.View) -> onChildDetachedFromWindow
    2823:2841:void onDetachedFromWindow() -> onDetachedFromWindow
    4280:4286:void onDraw(android.graphics.Canvas) -> onDraw
    3444:3445:void onEnterLayoutOrScroll() -> onEnterLayoutOrScroll
    3448:3449:void onExitLayoutOrScroll() -> onExitLayoutOrScroll
    3452:3464:void onExitLayoutOrScroll(boolean) -> onExitLayoutOrScroll
    3256:3301:boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    2973:3072:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    4193:4197:void onLayout(boolean,int,int,int,int) -> onLayout
    3306:3393:void onMeasure(int,int) -> onMeasure
    3244:3252:void onPointerUp(android.view.MotionEvent) -> onPointerUp
    2779:2784:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    1389:1399:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1375:1384:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    4979:4979:void onScrollStateChanged(int) -> onScrollStateChanged
    4941:4941:void onScrolled(int,int) -> onScrolled
    3414:3419:void onSizeChanged(int,int,int,int) -> onSizeChanged
    3087:3227:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    3554:3558:void postAnimationRunner() -> postAnimationRunner
    3561:3561:boolean predictiveItemAnimationsEnabled() -> predictiveItemAnimationsEnabled
    3571:3599:void processAdapterUpdatesAndSetAnimationFlags() -> processAdapterUpdatesAndSetAnimationFlags
    4482:4485:void processDataSetCompletelyChanged(boolean) -> processDataSetCompletelyChanged
    2367:2391:void pullGlows(float,float,float,float) -> pullGlows
    4081:4088:void recordAnimationInfoIfBouncedHiddenView(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> recordAnimationInfoIfBouncedHiddenView
    3719:3790:void recoverFocusFromState() -> recoverFocusFromState
    2394:2414:void releaseGlows() -> releaseGlows
    1166:1179:void removeAndRecycleViews() -> removeAndRecycleViews
    1446:1458:boolean removeAnimatingView(android.view.View) -> removeAnimatingView
    4124:4141:void removeDetachedView(android.view.View,boolean) -> removeDetachedView
    1645:1655:void removeItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration) -> removeItemDecoration
    2917:2921:void removeOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener) -> removeOnItemTouchListener
    1713:1716:void removeOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> removeOnScrollListener
    5258:5273:void repositionShadowingViews() -> repositionShadowingViews
    2722:2726:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    2738:2763:void requestChildOnScreen(android.view.View,android.view.View) -> requestChildOnScreen
    2767:2767:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    3077:3083:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    4201:4206:void requestLayout() -> requestLayout
    3677:3680:void resetFocusInfo() -> resetFocusInfo
    3231:3236:void resetTouch() -> resetTouch
    3656:3674:void saveFocusInfo() -> saveFocusInfo
    4330:4341:void saveOldPositions() -> saveOldPositions
    1792:1805:void scrollBy(int,int) -> scrollBy
    1922:1959:boolean scrollByInternal(int,int,android.view.MotionEvent) -> scrollByInternal
    1820:1845:void scrollStep(int,int,int[]) -> scrollStep
    1786:1788:void scrollTo(int,int) -> scrollTo
    1736:1747:void scrollToPosition(int) -> scrollToPosition
    3529:3533:void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    769:771:void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate) -> setAccessibilityDelegateCompat
    1155:1159:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter) -> setAdapter
    1192:1211:void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean) -> setAdapterInternal
    1671:1676:void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback) -> setChildDrawingOrderCallback
    11209:11215:boolean setChildImportantForAccessibilityInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> setChildImportantForAccessibilityInternal
    1070:1078:void setClipToPadding(boolean) -> setClipToPadding
    2528:2531:void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory) -> setEdgeEffectFactory
    1057:1058:void setHasFixedSize(boolean) -> setHasFixedSize
    3433:3441:void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator) -> setItemAnimator
    1520:1521:void setItemViewCacheSize(int) -> setItemViewCacheSize
    2193:2211:void setLayoutFrozen(boolean) -> setLayoutFrozen
    1310:1349:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> setLayoutManager
    11266:11267:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    1360:1361:void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener) -> setOnFlingListener
    1688:1689:void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> setOnScrollListener
    4549:4550:void setPreserveFocusAfterLayout(boolean) -> setPreserveFocusAfterLayout
    1494:1495:void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool) -> setRecycledViewPool
    1235:1236:void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener) -> setRecyclerListener
    1534:1546:void setScrollState(int) -> setScrollState
    1107:1121:void setScrollingTouchSlop(int) -> setScrollingTouchSlop
    1505:1506:void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension) -> setViewCacheExtension
    3513:3524:boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> shouldDeferAccessibilityEvent
    2230:2231:void smoothScrollBy(int,int) -> smoothScrollBy
    2242:2259:void smoothScrollBy(int,int,android.view.animation.Interpolator) -> smoothScrollBy
    1773:1782:void smoothScrollToPosition(int) -> smoothScrollToPosition
    2120:2124:void startInterceptRequestLayout() -> startInterceptRequestLayout
    11276:11276:boolean startNestedScroll(int) -> startNestedScroll
    11281:11281:boolean startNestedScroll(int,int) -> startNestedScroll
    2137:2168:void stopInterceptRequestLayout(boolean) -> stopInterceptRequestLayout
    11286:11287:void stopNestedScroll() -> stopNestedScroll
    11291:11292:void stopNestedScroll(int) -> stopNestedScroll
    2330:2332:void stopScroll() -> stopScroll
    2338:2342:void stopScrollersInternal() -> stopScrollersInternal
    4442:4461:void viewRangeUpdate(int,int,java.lang.Object) -> viewRangeUpdate
androidx.recyclerview.widget.RecyclerView$1 -> androidx.recyclerview.widget.RecyclerView$1:
    391:391:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    394:408:void run() -> run
androidx.recyclerview.widget.RecyclerView$2 -> androidx.recyclerview.widget.RecyclerView$2:
    585:585:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    588:592:void run() -> run
androidx.recyclerview.widget.RecyclerView$3 -> androidx.recyclerview.widget.RecyclerView$3:
    595:595:void <init>() -> <init>
    598:599:float getInterpolation(float) -> getInterpolation
androidx.recyclerview.widget.RecyclerView$4 -> androidx.recyclerview.widget.RecyclerView$4:
    607:607:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    617:618:void processAppeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processAppeared
    611:613:void processDisappeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processDisappeared
    623:635:void processPersistent(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processPersistent
    638:639:void unused(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> unused
androidx.recyclerview.widget.RecyclerView$5 -> androidx.recyclerview.widget.RecyclerView$5:
    840:840:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    851:856:void addView(android.view.View,int) -> addView
    911:923:void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams) -> attachViewToParent
    927:942:void detachViewFromParent(int) -> detachViewFromParent
    885:885:android.view.View getChildAt(int) -> getChildAt
    843:843:int getChildCount() -> getChildCount
    905:905:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> getChildViewHolder
    860:860:int indexOfChild(android.view.View) -> indexOfChild
    946:950:void onEnteredHiddenState(android.view.View) -> onEnteredHiddenState
    954:958:void onLeftHiddenState(android.view.View) -> onLeftHiddenState
    890:901:void removeAllViews() -> removeAllViews
    865:881:void removeViewAt(int) -> removeViewAt
androidx.recyclerview.widget.RecyclerView$6 -> androidx.recyclerview.widget.RecyclerView$6:
    963:963:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    1008:1023:void dispatchUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> dispatchUpdate
    966:978:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolder(int) -> findViewHolder
    998:1000:void markViewHoldersUpdated(int,int,java.lang.Object) -> markViewHoldersUpdated
    1032:1034:void offsetPositionsForAdd(int,int) -> offsetPositionsForAdd
    1038:1041:void offsetPositionsForMove(int,int) -> offsetPositionsForMove
    983:986:void offsetPositionsForRemovingInvisible(int,int) -> offsetPositionsForRemovingInvisible
    991:993:void offsetPositionsForRemovingLaidOutOrNewView(int,int) -> offsetPositionsForRemovingLaidOutOrNewView
    1004:1005:void onDispatchFirstPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> onDispatchFirstPass
    1027:1028:void onDispatchSecondPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> onDispatchSecondPass
androidx.recyclerview.widget.RecyclerView$Adapter -> androidx.recyclerview.widget.RecyclerView$Adapter:
    6700:6702:void <init>() -> <init>
    6815:6830:void bindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> bindViewHolder
    6793:6803:androidx.recyclerview.widget.RecyclerView$ViewHolder createViewHolder(android.view.ViewGroup,int) -> createViewHolder
    6873:6873:long getItemId(int) -> getItemId
    6845:6845:int getItemViewType(int) -> getItemViewType
    6983:6983:boolean hasObservers() -> hasObservers
    6891:6891:boolean hasStableIds() -> hasStableIds
    7070:7071:void notifyDataSetChanged() -> notifyDataSetChanged
    7086:7087:void notifyItemChanged(int) -> notifyItemChanged
    7132:7133:void notifyItemRangeChanged(int,int) -> notifyItemRangeChanged
    7163:7164:void notifyItemRangeChanged(int,int,java.lang.Object) -> notifyItemRangeChanged
    7214:7215:void notifyItemRangeInserted(int,int) -> notifyItemRangeInserted
    7248:7249:void notifyItemRangeRemoved(int,int) -> notifyItemRangeRemoved
    7029:7029:void onAttachedToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> onAttachedToRecyclerView
    6781:6782:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List) -> onBindViewHolder
    7038:7038:void onDetachedFromRecyclerView(androidx.recyclerview.widget.RecyclerView) -> onDetachedFromRecyclerView
    6949:6949:boolean onFailedToRecycleView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onFailedToRecycleView
    6963:6963:void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewAttachedToWindow
    6975:6975:void onViewDetachedFromWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewDetachedFromWindow
    6912:6912:void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewRecycled
    7003:7004:void registerAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver) -> registerAdapterDataObserver
    6857:6862:void setHasStableIds(boolean) -> setHasStableIds
    7017:7018:void unregisterAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver) -> unregisterAdapterDataObserver
androidx.recyclerview.widget.RecyclerView$AdapterDataObservable -> androidx.recyclerview.widget.RecyclerView$AdapterDataObservable:
    11986:11986:void <init>() -> <init>
    11988:11988:boolean hasObservers() -> hasObservers
    11996:11999:void notifyChanged() -> notifyChanged
    12002:12003:void notifyItemRangeChanged(int,int) -> notifyItemRangeChanged
    12011:12014:void notifyItemRangeChanged(int,int,java.lang.Object) -> notifyItemRangeChanged
    12021:12024:void notifyItemRangeInserted(int,int) -> notifyItemRangeInserted
    12031:12034:void notifyItemRangeRemoved(int,int) -> notifyItemRangeRemoved
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver -> androidx.recyclerview.widget.RecyclerView$AdapterDataObserver:
    11452:11452:void <init>() -> <init>
    11455:11455:void onChanged() -> onChanged
    11459:11459:void onItemRangeChanged(int,int) -> onItemRangeChanged
    11464:11465:void onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    11469:11469:void onItemRangeInserted(int,int) -> onItemRangeInserted
    11473:11473:void onItemRangeRemoved(int,int) -> onItemRangeRemoved
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory -> androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory:
    5337:5339:void <init>() -> <init>
    5368:5368:android.widget.EdgeEffect createEdgeEffect(androidx.recyclerview.widget.RecyclerView,int) -> createEdgeEffect
androidx.recyclerview.widget.RecyclerView$ItemAnimator -> androidx.recyclerview.widget.RecyclerView$ItemAnimator:
    12483:13151:void <init>() -> <init>
    12868:12879:int buildAdapterChangeFlagsForAnimations(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> buildAdapterChangeFlagsForAnimations
    13087:13087:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List) -> canReuseUpdatedViewHolder
    12952:12956:void dispatchAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAnimationFinished
    13095:13100:void dispatchAnimationsFinished() -> dispatchAnimationsFinished
    12572:12572:long getAddDuration() -> getAddDuration
    12608:12608:long getChangeDuration() -> getChangeDuration
    12554:12554:long getMoveDuration() -> getMoveDuration
    12590:12590:long getRemoveDuration() -> getRemoveDuration
    13113:13113:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo obtainHolderInfo() -> obtainHolderInfo
    12967:12967:void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAnimationFinished
    12697:12697:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPostLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> recordPostLayoutInformation
    12668:12668:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPreLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List) -> recordPreLayoutInformation
    12629:12630:void setListener(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener) -> setListener
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo -> androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo:
    13180:13181:void <init>() -> <init>
    13192:13192:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> setFrom
    13208:13213:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> setFrom
androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener -> androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener:
    12441:12442:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    12446:12458:void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAnimationFinished
androidx.recyclerview.widget.RecyclerView$ItemDecoration -> androidx.recyclerview.widget.RecyclerView$ItemDecoration:
    10444:10444:void <init>() -> <init>
    10496:10497:void getItemOffsets(android.graphics.Rect,int,androidx.recyclerview.widget.RecyclerView) -> getItemOffsets
    10521:10523:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
    10455:10456:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDraw
    10464:10464:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView) -> onDraw
    10477:10478:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
    10486:10486:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView) -> onDrawOver
androidx.recyclerview.widget.RecyclerView$LayoutManager -> androidx.recyclerview.widget.RecyclerView$LayoutManager:
    7296:10422:void <init>() -> <init>
    8253:8254:void addDisappearingView(android.view.View) -> addDisappearingView
    8271:8272:void addDisappearingView(android.view.View,int) -> addDisappearingView
    8282:8283:void addView(android.view.View) -> addView
    8294:8295:void addView(android.view.View,int) -> addView
    8298:8349:void addViewInt(android.view.View,int,boolean) -> addViewInt
    7631:7634:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    8539:8549:void attachView(android.view.View,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> attachView
    8560:8561:void attachView(android.view.View,int) -> attachView
    9442:9448:void calculateItemDecorationsForChild(android.view.View,android.graphics.Rect) -> calculateItemDecorationsForChild
    8149:8149:boolean canScrollHorizontally() -> canScrollHorizontally
    8159:8159:boolean canScrollVertically() -> canScrollVertically
    8064:8064:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    7610:7619:int chooseSize(int,int,int) -> chooseSize
    7816:7816:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    7844:7844:void collectInitialPrefetchPositions(int,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectInitialPrefetchPositions
    9892:9892:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    9907:9907:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    9922:9922:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    9937:9937:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    9952:9952:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    9967:9967:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    8927:8932:void detachAndScrapAttachedViews(androidx.recyclerview.widget.RecyclerView$Recycler) -> detachAndScrapAttachedViews
    8519:8520:void detachViewAt(int) -> detachViewAt
    8526:8527:void detachViewInternal(int,android.view.View) -> detachViewInternal
    7847:7849:void dispatchAttachedToWindow(androidx.recyclerview.widget.RecyclerView) -> dispatchAttachedToWindow
    7852:7854:void dispatchDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> dispatchDetachedFromWindow
    8438:8448:android.view.View findContainingItemView(android.view.View) -> findContainingItemView
    8466:8478:android.view.View findViewByPosition(int) -> findViewByPosition
    8081:8086:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    8105:8105:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    8397:8397:int getBaseline() -> getBaseline
    9477:9477:int getBottomDecorationHeight(android.view.View) -> getBottomDecorationHeight
    8668:8668:android.view.View getChildAt(int) -> getChildAt
    8658:8658:int getChildCount() -> getChildCount
    9181:9222:int getChildMeasureSpec(int,int,int,int,boolean) -> getChildMeasureSpec
    9573:9606:int[] getChildRectangleOnScreenScrollAmount(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean) -> getChildRectangleOnScreenScrollAmount
    7964:7964:boolean getClipToPadding() -> getClipToPadding
    10267:10270:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getColumnCountForAccessibility
    9421:9421:int getDecoratedBottom(android.view.View) -> getDecoratedBottom
    9373:9374:void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMargins
    9385:9385:int getDecoratedLeft(android.view.View) -> getDecoratedLeft
    9249:9250:int getDecoratedMeasuredHeight(android.view.View) -> getDecoratedMeasuredHeight
    9235:9236:int getDecoratedMeasuredWidth(android.view.View) -> getDecoratedMeasuredWidth
    9409:9409:int getDecoratedRight(android.view.View) -> getDecoratedRight
    9397:9397:int getDecoratedTop(android.view.View) -> getDecoratedTop
    8824:8831:android.view.View getFocusedChild() -> getFocusedChild
    8734:8734:int getHeight() -> getHeight
    8702:8702:int getHeightMode() -> getHeightMode
    8224:8224:int getLayoutDirection() -> getLayoutDirection
    9492:9492:int getLeftDecorationWidth(android.view.View) -> getLeftDecorationWidth
    10022:10022:int getMinimumHeight() -> getMinimumHeight
    10014:10014:int getMinimumWidth() -> getMinimumWidth
    8774:8774:int getPaddingBottom() -> getPaddingBottom
    8744:8744:int getPaddingLeft() -> getPaddingLeft
    8764:8764:int getPaddingRight() -> getPaddingRight
    8754:8754:int getPaddingTop() -> getPaddingTop
    8408:8408:int getPosition(android.view.View) -> getPosition
    10374:10383:androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties getProperties(android.content.Context,android.util.AttributeSet,int,int) -> getProperties
    9507:9507:int getRightDecorationWidth(android.view.View) -> getRightDecorationWidth
    10247:10250:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getRowCountForAccessibility
    10231:10231:int getSelectionModeForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getSelectionModeForAccessibility
    9462:9462:int getTopDecorationHeight(android.view.View) -> getTopDecorationHeight
    9340:9363:void getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect) -> getTransformedBoundingBox
    8718:8718:int getWidth() -> getWidth
    8685:8685:int getWidthMode() -> getWidthMode
    10408:10416:boolean hasFlexibleChildInBothOrientations() -> hasFlexibleChildInBothOrientations
    7864:7864:boolean isAttachedToWindow() -> isAttachedToWindow
    7725:7725:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    9705:9720:boolean isFocusedChildVisibleAfterScrolling(androidx.recyclerview.widget.RecyclerView,int,int) -> isFocusedChildVisibleAfterScrolling
    7792:7792:boolean isItemPrefetchEnabled() -> isItemPrefetchEnabled
    10284:10284:boolean isLayoutHierarchical(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> isLayoutHierarchical
    9075:9088:boolean isMeasurementUpToDate(int,int,int) -> isMeasurementUpToDate
    8211:8211:boolean isSmoothScrolling() -> isSmoothScrolling
    9683:9691:boolean isViewPartiallyVisible(android.view.View,boolean,boolean) -> isViewPartiallyVisible
    9320:9325:void layoutDecoratedWithMargins(android.view.View,int,int,int,int) -> layoutDecoratedWithMargins
    9104:9121:void measureChildWithMargins(android.view.View,int,int) -> measureChildWithMargins
    8591:8598:void moveView(int,int) -> moveView
    8858:8861:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    8870:8873:void offsetChildrenVertical(int) -> offsetChildrenVertical
    9770:9770:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter) -> onAdapterChanged
    9798:9798:boolean onAddFocusables(androidx.recyclerview.widget.RecyclerView,java.util.ArrayList,int,int) -> onAddFocusables
    7919:7919:void onAttachedToWindow(androidx.recyclerview.widget.RecyclerView) -> onAttachedToWindow
    7928:7928:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView) -> onDetachedFromWindow
    7955:7956:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    9535:9535:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    10136:10137:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    10152:10163:void onInitializeAccessibilityEvent(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    10087:10088:void onInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    10117:10132:void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    10167:10173:void onInitializeAccessibilityNodeInfoForItem(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    10192:10198:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    9556:9556:android.view.View onInterceptFocusSearch(android.view.View,int) -> onInterceptFocusSearch
    9822:9822:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    9809:9809:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> onItemsChanged
    9877:9877:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    9833:9833:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    9846:9846:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsUpdated
    9859:9860:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    8019:8020:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    8034:8034:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    9995:9996:void onMeasure(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int) -> onMeasure
    9730:9730:boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,android.view.View,android.view.View) -> onRequestChildFocus
    9752:9752:boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,android.view.View,android.view.View) -> onRequestChildFocus
    10042:10042:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    10036:10036:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    10062:10062:void onScrollStateChanged(int) -> onScrollStateChanged
    10051:10054:void onSmoothScrollerStopped(androidx.recyclerview.widget.RecyclerView$SmoothScroller) -> onSmoothScrollerStopped
    10289:10289:boolean performAccessibilityAction(int,android.os.Bundle) -> performAccessibilityAction
    10305:10331:boolean performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,android.os.Bundle) -> performAccessibilityAction
    10337:10337:boolean performAccessibilityActionForItem(android.view.View,int,android.os.Bundle) -> performAccessibilityActionForItem
    10358:10358:boolean performAccessibilityActionForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,int,android.os.Bundle) -> performAccessibilityActionForItem
    10077:10083:void removeAndRecycleAllViews(androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleAllViews
    8963:8990:void removeAndRecycleScrapInt(androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleScrapInt
    8635:8637:void removeAndRecycleView(android.view.View,androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleView
    8646:8649:void removeAndRecycleViewAt(int,androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleViewAt
    7898:7901:boolean removeCallbacks(java.lang.Runnable) -> removeCallbacks
    8360:8361:void removeView(android.view.View) -> removeView
    8372:8376:void removeViewAt(int) -> removeViewAt
    9625:9625:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    9645:9659:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean) -> requestChildRectangleOnScreen
    7581:7584:void requestLayout() -> requestLayout
    10211:10212:void requestSimpleAnimationsInNextLayout() -> requestSimpleAnimationsInNextLayout
    8935:8951:void scrapOrRecycleView(androidx.recyclerview.widget.RecyclerView$Recycler,int,android.view.View) -> scrapOrRecycleView
    8122:8122:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    8172:8172:void scrollToPosition(int) -> scrollToPosition
    8139:8139:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    10387:10391:void setExactMeasureSpecsFrom(androidx.recyclerview.widget.RecyclerView) -> setExactMeasureSpecsFrom
    7491:7502:void setMeasureSpecs(int,int) -> setMeasureSpecs
    7570:7575:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    10006:10007:void setMeasuredDimension(int,int) -> setMeasuredDimension
    7518:7547:void setMeasuredDimensionFromChildren(int,int) -> setMeasuredDimensionFromChildren
    7475:7488:void setRecyclerView(androidx.recyclerview.widget.RecyclerView) -> setRecyclerView
    9042:9045:boolean shouldMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> shouldMeasureChild
    10404:10404:boolean shouldMeasureTwice() -> shouldMeasureTwice
    9028:9030:boolean shouldReMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> shouldReMeasureChild
    8185:8186:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
    8199:8205:void startSmoothScroll(androidx.recyclerview.widget.RecyclerView$SmoothScroller) -> startSmoothScroll
    10045:10048:void stopSmoothScroller() -> stopSmoothScroller
    7751:7751:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
androidx.recyclerview.widget.RecyclerView$LayoutManager$1 -> androidx.recyclerview.widget.RecyclerView$LayoutManager$1:
    7305:7305:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    7318:7318:android.view.View getChildAt(int) -> getChildAt
    7340:7342:int getChildEnd(android.view.View) -> getChildEnd
    7333:7335:int getChildStart(android.view.View) -> getChildStart
    7328:7328:int getParentEnd() -> getParentEnd
    7323:7323:int getParentStart() -> getParentStart
androidx.recyclerview.widget.RecyclerView$LayoutManager$2 -> androidx.recyclerview.widget.RecyclerView$LayoutManager$2:
    7351:7351:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    7364:7364:android.view.View getChildAt(int) -> getChildAt
    7387:7389:int getChildEnd(android.view.View) -> getChildEnd
    7380:7382:int getChildStart(android.view.View) -> getChildStart
    7374:7375:int getParentEnd() -> getParentEnd
    7369:7369:int getParentStart() -> getParentStart
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties -> androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties:
    10422:10422:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$LayoutParams -> androidx.recyclerview.widget.RecyclerView$LayoutParams:
    11348:11357:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    11348:11361:void <init>(int,int) -> <init>
    11348:11365:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    11348:11369:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    11348:11373:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> <init>
    11432:11432:int getViewLayoutPosition() -> getViewLayoutPosition
    11414:11414:boolean isItemChanged() -> isItemChanged
    11403:11403:boolean isItemRemoved() -> isItemRemoved
    11392:11392:boolean isViewInvalid() -> isViewInvalid
androidx.recyclerview.widget.RecyclerView$OnScrollListener -> androidx.recyclerview.widget.RecyclerView$OnScrollListener:
    10609:10609:void <init>() -> <init>
    10617:10617:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
    10630:10630:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
androidx.recyclerview.widget.RecyclerView$RecycledViewPool -> androidx.recyclerview.widget.RecyclerView$RecycledViewPool:
    5380:5405:void <init>() -> <init>
    5523:5524:void attach() -> attach
    5411:5415:void clear() -> clear
    5527:5528:void detach() -> detach
    5507:5510:void factorInBindTime(int,long) -> factorInBindTime
    5501:5504:void factorInCreateTime(int,long) -> factorInCreateTime
    5449:5454:androidx.recyclerview.widget.RecyclerView$ViewHolder getRecycledView(int) -> getRecycledView
    5556:5561:androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData getScrapDataForType(int) -> getScrapDataForType
    5544:5553:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> onAdapterChanged
    5481:5491:void putRecycledView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> putRecycledView
    5494:5497:long runningAverage(long,long) -> runningAverage
    5518:5519:boolean willBindInTime(int,long,long) -> willBindInTime
    5513:5514:boolean willCreateInTime(int,long,long) -> willCreateInTime
androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData -> androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData:
    5397:5401:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$Recycler -> androidx.recyclerview.widget.RecyclerView$Recycler:
    5637:5647:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    6250:6260:void addViewHolderToRecycledViewPool(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> addViewHolderToRecycledViewPool
    6039:6052:void attachAccessibilityDelegateOnBind(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> attachAccessibilityDelegateOnBind
    5660:5662:void clear() -> clear
    6627:6642:void clearOldPositions() -> clearOldPositions
    6330:6334:void clearScrap() -> clearScrap
    5828:5835:int convertPreLayoutPositionToPostLayout(int) -> convertPreLayoutPositionToPostLayout
    6481:6491:void dispatchViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchViewRecycled
    6339:6364:androidx.recyclerview.widget.RecyclerView$ViewHolder getChangedScrapViewForPosition(int) -> getChangedScrapViewForPosition
    6585:6588:androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> getRecycledViewPool
    6322:6322:int getScrapCount() -> getScrapCount
    5692:5692:java.util.List getScrapList() -> getScrapList
    6429:6477:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrCachedViewForId(long,int,boolean) -> getScrapOrCachedViewForId
    6375:6424:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean) -> getScrapOrHiddenOrCachedHolderForPosition
    6326:6326:android.view.View getScrapViewAt(int) -> getScrapViewAt
    5854:5854:android.view.View getViewForPosition(int) -> getViewForPosition
    5858:5858:android.view.View getViewForPosition(int,boolean) -> getViewForPosition
    6055:6058:void invalidateDisplayListInt(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> invalidateDisplayListInt
    6061:6079:void invalidateDisplayListInt(android.view.ViewGroup,boolean) -> invalidateDisplayListInt
    6645:6653:void markItemDecorInsetsDirty() -> markItemDecorInsetsDirty
    6611:6624:void markKnownViewsInvalid() -> markKnownViewsInvalid
    6529:6540:void offsetPositionRecordsForInsert(int,int) -> offsetPositionRecordsForInsert
    6501:6526:void offsetPositionRecordsForMove(int,int) -> offsetPositionRecordsForMove
    6549:6568:void offsetPositionRecordsForRemove(int,int,boolean) -> offsetPositionRecordsForRemove
    6495:6497:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> onAdapterChanged
    6268:6273:void quickRecycleScrapView(android.view.View) -> quickRecycleScrapView
    6116:6124:void recycleAndClearCachedViews() -> recycleAndClearCachedViews
    6141:6147:void recycleCachedViewAt(int) -> recycleCachedViewAt
    6094:6104:void recycleView(android.view.View) -> recycleView
    6155:6239:void recycleViewHolderInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> recycleViewHolderInternal
    6285:6302:void scrapView(android.view.View) -> scrapView
    6575:6582:void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool) -> setRecycledViewPool
    6571:6572:void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension) -> setViewCacheExtension
    5670:5672:void setViewCacheSize(int) -> setViewCacheSize
    5744:5759:boolean tryBindViewHolderByDeadline(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,long) -> tryBindViewHolderByDeadline
    5882:6035:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long) -> tryGetViewHolderForPositionByDeadline
    6311:6319:void unscrapView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> unscrapView
    5675:5683:void updateViewCacheSize() -> updateViewCacheSize
    5706:5727:boolean validateViewHolderForOffsetPosition(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> validateViewHolderForOffsetPosition
    6592:6608:void viewRangeUpdate(int,int) -> viewRangeUpdate
androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver -> androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver:
    5276:5277:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    5281:5288:void onChanged() -> onChanged
    5292:5296:void onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    5300:5304:void onItemRangeInserted(int,int) -> onItemRangeInserted
    5308:5312:void onItemRangeRemoved(int,int) -> onItemRangeRemoved
    5323:5329:void triggerUpdateProcessor() -> triggerUpdateProcessor
androidx.recyclerview.widget.RecyclerView$SavedState -> androidx.recyclerview.widget.RecyclerView$SavedState:
    12078:12078:void <clinit>() -> <clinit>
    12056:12059:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    12065:12066:void <init>(android.os.Parcelable) -> <init>
    12075:12076:void copyFrom(androidx.recyclerview.widget.RecyclerView$SavedState) -> copyFrom
    12070:12072:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.RecyclerView$SavedState$1 -> androidx.recyclerview.widget.RecyclerView$SavedState$1:
    12078:12078:void <init>() -> <init>
    12078:12078:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    12078:12078:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    12081:12081:androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    12086:12086:androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    12078:12078:java.lang.Object[] newArray(int) -> newArray
    12091:12091:androidx.recyclerview.widget.RecyclerView$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.RecyclerView$SmoothScroller -> androidx.recyclerview.widget.RecyclerView$SmoothScroller:
    11491:11509:void <init>() -> <init>
    11562:11569:android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    11707:11707:android.view.View findViewByPosition(int) -> findViewByPosition
    11700:11700:int getChildCount() -> getChildCount
    11693:11693:int getChildPosition(android.view.View) -> getChildPosition
    11578:11578:androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    11630:11630:int getTargetPosition() -> getTargetPosition
    11612:11612:boolean isPendingInitialRun() -> isPendingInitialRun
    11620:11620:boolean isRunning() -> isRunning
    11733:11737:void normalize(android.graphics.PointF) -> normalize
    11637:11687:void onAnimation(int,int) -> onAnimation
    11720:11726:void onChildAttachedToWindow(android.view.View) -> onChildAttachedToWindow
    11547:11548:void setTargetPosition(int) -> setTargetPosition
    11524:11544:void start(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$LayoutManager) -> start
    11588:11602:void stop() -> stop
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action -> androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action:
    11805:11806:void <init>(int,int) -> <init>
    11790:11830:void <init>(int,int,int,android.view.animation.Interpolator) -> <init>
    11852:11852:boolean hasJumpTarget() -> hasJumpTarget
    11848:11849:void jumpTo(int) -> jumpTo
    11856:11886:void runIfNecessary(androidx.recyclerview.widget.RecyclerView) -> runIfNecessary
    11952:11957:void update(int,int,int,android.view.animation.Interpolator) -> update
    11889:11895:void validate() -> validate
androidx.recyclerview.widget.RecyclerView$State -> androidx.recyclerview.widget.RecyclerView$State:
    12106:12177:void <init>() -> <init>
    12112:12117:void assertLayoutStep(int) -> assertLayoutStep
    12366:12366:int getItemCount() -> getItemCount
    12321:12321:int getTargetScrollPosition() -> getTargetScrollPosition
    12330:12330:boolean hasTargetScrollPosition() -> hasTargetScrollPosition
    12245:12245:boolean isPreLayout() -> isPreLayout
    12214:12219:void prepareForNestedPrefetch(androidx.recyclerview.widget.RecyclerView$Adapter) -> prepareForNestedPrefetch
    12395:12395:java.lang.String toString() -> toString
    12256:12256:boolean willRunPredictiveAnimations() -> willRunPredictiveAnimations
androidx.recyclerview.widget.RecyclerView$ViewFlinger -> androidx.recyclerview.widget.RecyclerView$ViewFlinger:
    5025:5035:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    5202:5220:int computeScrollDuration(int,int,int,int) -> computeScrollDuration
    5159:5161:void disableRunOnAnimationRequests() -> disableRunOnAnimationRequests
    5196:5198:float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    5164:5168:void enableRunOnAnimationRequests() -> enableRunOnAnimationRequests
    5180:5185:void fling(int,int) -> fling
    5171:5177:void postOnAnimation() -> postOnAnimation
    5039:5156:void run() -> run
    5188:5189:void smoothScrollBy(int,int) -> smoothScrollBy
    5192:5193:void smoothScrollBy(int,int,int,int) -> smoothScrollBy
    5224:5225:void smoothScrollBy(int,int,int) -> smoothScrollBy
    5228:5230:void smoothScrollBy(int,int,android.view.animation.Interpolator) -> smoothScrollBy
    5233:5247:void smoothScrollBy(int,int,int,android.view.animation.Interpolator) -> smoothScrollBy
    5250:5252:void stop() -> stop
androidx.recyclerview.widget.RecyclerView$ViewHolder -> androidx.recyclerview.widget.RecyclerView$ViewHolder:
    10804:10804:void <clinit>() -> <clinit>
    10692:10836:void <init>(android.view.View) -> <init>
    11041:11047:void addChangePayload(java.lang.Object) -> addChangePayload
    11037:11038:void addFlags(int) -> addFlags
    10861:10863:void clearOldPosition() -> clearOldPosition
    11057:11061:void clearPayload() -> clearPayload
    10988:10989:void clearReturnedFromScrapFlag() -> clearReturnedFromScrapFlag
    10992:10993:void clearTmpDetachFlag() -> clearTmpDetachFlag
    11050:11054:void createPayloadsIfNeeded() -> createPayloadsIfNeeded
    11195:11195:boolean doesTransientStatePreventRecycling() -> doesTransientStatePreventRecycling
    10839:10842:void flagRemovedAndOffsetPosition(int,int,boolean) -> flagRemovedAndOffsetPosition
    10937:10940:int getAdapterPosition() -> getAdapterPosition
    10965:10965:long getItemId() -> getItemId
    10972:10972:int getItemViewType() -> getItemViewType
    10911:10911:int getLayoutPosition() -> getLayoutPosition
    10955:10955:int getOldPosition() -> getOldPosition
    11064:11073:java.util.List getUnmodifiedPayloads() -> getUnmodifiedPayloads
    11021:11021:boolean hasAnyOfTheFlags(int) -> hasAnyOfTheFlags
    11029:11029:boolean isAdapterPositionUnknown() -> isAdapterPositionUnknown
    11013:11013:boolean isBound() -> isBound
    11005:11005:boolean isInvalid() -> isInvalid
    11178:11179:boolean isRecyclable() -> isRecyclable
    11017:11017:boolean isRemoved() -> isRemoved
    10976:10976:boolean isScrap() -> isScrap
    11025:11025:boolean isTmpDetached() -> isTmpDetached
    11199:11199:boolean isUpdated() -> isUpdated
    11009:11009:boolean needsUpdate() -> needsUpdate
    10845:10858:void offsetPosition(int,boolean) -> offsetPosition
    11097:11105:void onEnteredHiddenState(androidx.recyclerview.widget.RecyclerView) -> onEnteredHiddenState
    11111:11114:void onLeftHiddenState(androidx.recyclerview.widget.RecyclerView) -> onLeftHiddenState
    11078:11090:void resetInternal() -> resetInternal
    10866:10869:void saveOldPosition() -> saveOldPosition
    11033:11034:void setFlags(int,int) -> setFlags
    11153:11170:void setIsRecyclable(boolean) -> setIsRecyclable
    11000:11002:void setScrapContainer(androidx.recyclerview.widget.RecyclerView$Recycler,boolean) -> setScrapContainer
    11187:11187:boolean shouldBeKeptAsChild() -> shouldBeKeptAsChild
    10872:10872:boolean shouldIgnore() -> shouldIgnore
    11118:11136:java.lang.String toString() -> toString
    10980:10981:void unScrap() -> unScrap
    10984:10984:boolean wasReturnedFromScrap() -> wasReturnedFromScrap
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate -> androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate:
    37:40:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    86:86:androidx.core.view.AccessibilityDelegateCompat getItemDelegate() -> getItemDelegate
    69:77:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    60:65:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    48:55:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    43:43:boolean shouldIgnore() -> shouldIgnore
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate -> androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate:
    105:107:void <init>(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate) -> <init>
    111:117:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    121:129:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
androidx.recyclerview.widget.ScrollbarHelper -> androidx.recyclerview.widget.ScrollbarHelper:
    63:72:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean) -> computeScrollExtent
    32:53:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean,boolean) -> computeScrollOffset
    82:96:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean) -> computeScrollRange
androidx.recyclerview.widget.SimpleItemAnimator -> androidx.recyclerview.widget.SimpleItemAnimator:
    35:41:void <init>() -> <init>
    114:126:boolean animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateAppearance
    151:161:boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateChange
    90:107:boolean animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateDisappearance
    133:142:boolean animatePersistence(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animatePersistence
    84:84:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    301:303:void dispatchAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAddFinished
    344:345:void dispatchAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAddStarting
    316:318:void dispatchChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> dispatchChangeFinished
    357:358:void dispatchChangeStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> dispatchChangeStarting
    291:293:void dispatchMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchMoveFinished
    335:336:void dispatchMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchMoveStarting
    276:278:void dispatchRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchRemoveFinished
    326:327:void dispatchRemoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchRemoveStarting
    404:404:void onAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAddFinished
    393:393:void onAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAddStarting
    454:454:void onChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> onChangeFinished
    441:441:void onChangeStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> onChangeStarting
    427:427:void onMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onMoveFinished
    416:416:void onMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onMoveStarting
    381:381:void onRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onRemoveFinished
    370:370:void onRemoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onRemoveStarting
androidx.recyclerview.widget.StaggeredGridLayoutManager -> androidx.recyclerview.widget.StaggeredGridLayoutManager:
    107:236:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1808:1811:void appendViewToAllSpans(android.view.View) -> appendViewToAllSpans
    786:819:void applyPendingSavedState(androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> applyPendingSavedState
    1867:1873:boolean areAllEndsEqual() -> areAllEndsEqual
    1877:1883:boolean areAllStartsEqual() -> areAllStartsEqual
    528:531:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    1752:1765:void attachViewToSpans(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,androidx.recyclerview.widget.LayoutState) -> attachViewToSpans
    2045:2049:int calculateScrollDirectionForPosition(int) -> calculateScrollDirectionForPosition
    2029:2029:boolean canScrollHorizontally() -> canScrollHorizontally
    2024:2024:boolean canScrollVertically() -> canScrollVertically
    270:311:boolean checkForGaps() -> checkForGaps
    2275:2275:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    403:416:boolean checkSpanForGap(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span) -> checkSpanForGap
    2125:2157:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    1088:1088:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    1068:1068:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1108:1108:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    1092:1097:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollExtent
    1072:1077:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollOffset
    1112:1117:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollRange
    2054:2066:android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    1103:1103:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    1083:1083:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1123:1123:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    2394:2427:int convertFocusDirectionToLayoutDirection(int) -> convertFocusDirectionToLayoutDirection
    1734:1739:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromEnd(int) -> createFullSpanItemFromEnd
    1743:1748:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromStart(int) -> createFullSpanItemFromStart
    258:261:void createOrientationHelpers() -> createOrientationHelpers
    1577:1730:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState,androidx.recyclerview.widget.RecyclerView$State) -> fill
    2220:2228:int findFirstReferenceChildPosition(int) -> findFirstReferenceChildPosition
    1389:1408:android.view.View findFirstVisibleItemClosestToEnd(boolean) -> findFirstVisibleItemClosestToEnd
    1359:1379:android.view.View findFirstVisibleItemClosestToStart(boolean) -> findFirstVisibleItemClosestToStart
    1329:1331:int findFirstVisibleItemPositionInt() -> findFirstVisibleItemPositionInt
    2237:2244:int findLastReferenceChildPosition(int) -> findLastReferenceChildPosition
    1413:1428:void fixEndGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixEndGap
    1432:1447:void fixStartGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixStartGap
    2250:2254:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    2261:2261:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    2266:2269:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1346:1349:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getColumnCountForAccessibility
    2210:2211:int getFirstChildPosition() -> getFirstChildPosition
    2205:2206:int getLastChildPosition() -> getLastChildPosition
    1887:1894:int getMaxEnd(int) -> getMaxEnd
    1845:1852:int getMaxStart(int) -> getMaxStart
    1898:1905:int getMinEnd(int) -> getMinEnd
    1856:1863:int getMinStart(int) -> getMinStart
    1982:2018:androidx.recyclerview.widget.StaggeredGridLayoutManager$Span getNextSpan(androidx.recyclerview.widget.LayoutState) -> getNextSpan
    1337:1340:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getRowCountForAccessibility
    1533:1573:void handleUpdate(int,int,int) -> handleUpdate
    339:399:android.view.View hasGapsToFix() -> hasGapsToFix
    549:551:void invalidateSpanAssignments() -> invalidateSpanAssignments
    254:254:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    568:568:boolean isLayoutRTL() -> isLayoutRTL
    1128:1189:void measureChildWithDecorationsAndMargin(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,boolean) -> measureChildWithDecorationsAndMargin
    1193:1206:void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean) -> measureChildWithDecorationsAndMargin
    1488:1492:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    1496:1500:void offsetChildrenVertical(int) -> offsetChildrenVertical
    323:331:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    2286:2380:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    1304:1321:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1283:1300:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    1509:1510:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    1514:1516:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> onItemsChanged
    1520:1521:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    1504:1505:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    1526:1527:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    605:606:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    611:722:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> onLayoutChildren
    726:731:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    1222:1228:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1232:1277:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    316:319:void onScrollStateChanged(int) -> onScrollStateChanged
    1972:1975:boolean preferLastSpan(int) -> preferLastSpan
    2162:2174:void prepareLayoutStateForDelta(int,androidx.recyclerview.widget.RecyclerView$State) -> prepareLayoutStateForDelta
    1815:1818:void prependViewToAllSpans(android.view.View) -> prependViewToAllSpans
    1768:1804:void recycle(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState) -> recycle
    1938:1966:void recycleFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int) -> recycleFromEnd
    1909:1935:void recycleFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int) -> recycleFromStart
    734:780:void repositionToWrapContentIfNecessary() -> repositionToWrapContentIfNecessary
    560:565:void resolveShouldLayoutReverse() -> resolveShouldLayoutReverse
    2177:2201:int scrollBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollBy
    2035:2035:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    2079:2085:void scrollToPosition(int) -> scrollToPosition
    2041:2041:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    1481:1484:void setLayoutStateDirection(int) -> setLayoutStateDirection
    587:601:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    449:461:void setOrientation(int) -> setOrientation
    477:483:void setReverseLayout(boolean) -> setReverseLayout
    429:440:void setSpanCount(int) -> setSpanCount
    2072:2075:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
    935:935:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    1821:1827:void updateAllRemainingSpans(int,int) -> updateAllRemainingSpans
    840:844:boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorFromChildren
    849:923:boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorFromPendingData
    822:833:void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorInfoForLayout
    1450:1478:void updateLayoutState(int,androidx.recyclerview.widget.RecyclerView$State) -> updateLayoutState
    927:931:void updateMeasureSpecs(int) -> updateMeasureSpecs
    1830:1842:void updateRemainingSpans(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span,int,int) -> updateRemainingSpans
    1209:1217:int updateSpecWithExtra(int,int,int) -> updateSpecWithExtra
androidx.recyclerview.widget.StaggeredGridLayoutManager$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$1:
    216:216:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager) -> <init>
    219:220:void run() -> run
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo -> androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo:
    3266:3268:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager) -> <init>
    3293:3295:void assignCoordinateFromPadding() -> assignCoordinateFromPadding
    3298:3303:void assignCoordinateFromPadding(int) -> assignCoordinateFromPadding
    3271:3279:void reset() -> reset
    3282:3290:void saveSpanReferenceLines(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span[]) -> saveSpanReferenceLines
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams:
    2452:2453:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2456:2457:void <init>(int,int) -> <init>
    2460:2461:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2464:2465:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2500:2503:int getSpanIndex() -> getSpanIndex
    2490:2490:boolean isFullSpan() -> isFullSpan
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup:
    2840:3074:void <init>() -> <init>
    3009:3029:void addFullSpanItem(androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem) -> addFullSpanItem
    2917:2921:void clear() -> clear
    2905:2914:void ensureSize(int) -> ensureSize
    2851:2859:int forceInvalidateAfter(int) -> forceInvalidateAfter
    3053:3068:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFirstFullSpanItemInRange(int,int,int,boolean) -> getFirstFullSpanItemInRange
    3032:3041:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFullSpanItem(int) -> getFullSpanItem
    2884:2887:int getSpan(int) -> getSpan
    2866:2879:int invalidateAfter(int) -> invalidateAfter
    2983:3005:int invalidateFullSpansAfter(int) -> invalidateFullSpansAfter
    2954:2963:void offsetForAddition(int,int) -> offsetForAddition
    2924:2933:void offsetForRemoval(int,int) -> offsetForRemoval
    2966:2976:void offsetFullSpansForAddition(int,int) -> offsetFullSpansForAddition
    2936:2951:void offsetFullSpansForRemoval(int,int) -> offsetFullSpansForRemoval
    2892:2894:void setSpan(int,androidx.recyclerview.widget.StaggeredGridLayoutManager$Span) -> setSpan
    2897:2901:int sizeForPosition(int) -> sizeForPosition
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem:
    3130:3130:void <clinit>() -> <clinit>
    3084:3093:void <init>(android.os.Parcel) -> <init>
    3095:3096:void <init>() -> <init>
    3104:3104:int describeContents() -> describeContents
    3099:3099:int getGapForSpan(int) -> getGapForSpan
    3122:3126:java.lang.String toString() -> toString
    3109:3118:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1:
    3131:3131:void <init>() -> <init>
    3131:3131:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3134:3134:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFromParcel(android.os.Parcel) -> createFromParcel
    3131:3131:java.lang.Object[] newArray(int) -> newArray
    3139:3139:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem[] newArray(int) -> newArray
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState -> androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState:
    3238:3238:void <clinit>() -> <clinit>
    3162:3163:void <init>() -> <init>
    3165:3185:void <init>(android.os.Parcel) -> <init>
    3187:3198:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState) -> <init>
    3217:3217:int describeContents() -> describeContents
    3209:3213:void invalidateAnchorPositionInfo() -> invalidateAnchorPositionInfo
    3201:3206:void invalidateSpanInfo() -> invalidateSpanInfo
    3222:3236:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1:
    3239:3239:void <init>() -> <init>
    3239:3239:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3242:3242:androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    3239:3239:java.lang.Object[] newArray(int) -> newArray
    3247:3247:androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span -> androidx.recyclerview.widget.StaggeredGridLayoutManager$Span:
    2511:2519:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager,int) -> <init>
    2602:2612:void appendToSpan(android.view.View) -> appendToSpan
    2617:2634:void cacheReferenceLineAndClear(boolean,int) -> cacheReferenceLineAndClear
    2567:2577:void calculateCachedEnd() -> calculateCachedEnd
    2533:2543:void calculateCachedStart() -> calculateCachedStart
    2637:2640:void clear() -> clear
    2702:2704:int findFirstPartiallyVisibleItemPosition() -> findFirstPartiallyVisibleItemPosition
    2720:2722:int findLastPartiallyVisibleItemPosition() -> findLastPartiallyVisibleItemPosition
    2758:2785:int findOnePartiallyOrCompletelyVisibleChild(int,int,boolean,boolean,boolean) -> findOnePartiallyOrCompletelyVisibleChild
    2795:2795:int findOnePartiallyVisibleChild(int,int,boolean) -> findOnePartiallyVisibleChild
    2679:2679:int getDeletedSize() -> getDeletedSize
    2555:2563:int getEndLine(int) -> getEndLine
    2581:2585:int getEndLine() -> getEndLine
    2803:2832:android.view.View getFocusableViewAfter(int,int) -> getFocusableViewAfter
    2683:2683:androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams getLayoutParams(android.view.View) -> getLayoutParams
    2522:2529:int getStartLine(int) -> getStartLine
    2547:2551:int getStartLine() -> getStartLine
    2643:2645:void invalidateCache() -> invalidateCache
    2687:2693:void onOffset(int) -> onOffset
    2652:2663:void popEnd() -> popEnd
    2666:2676:void popStart() -> popStart
    2589:2599:void prependToSpan(android.view.View) -> prependToSpan
    2648:2649:void setLine(int) -> setLine
androidx.recyclerview.widget.ViewBoundsCheck -> androidx.recyclerview.widget.ViewBoundsCheck:
    131:134:void <init>(androidx.recyclerview.widget.ViewBoundsCheck$Callback) -> <init>
    217:242:android.view.View findOneViewWithinBoundFlags(int,int,int,int) -> findOneViewWithinBoundFlags
    252:259:boolean isViewWithinBoundFlags(android.view.View,int) -> isViewWithinBoundFlags
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags -> androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags:
    136:137:void <init>() -> <init>
    152:153:void addFlags(int) -> addFlags
    170:193:boolean boundsMatch() -> boundsMatch
    160:166:int compare(int,int) -> compare
    156:157:void resetFlags() -> resetFlags
    141:145:void setBounds(int,int,int,int) -> setBounds
androidx.recyclerview.widget.ViewInfoStore -> androidx.recyclerview.widget.ViewInfoStore:
    35:288:void <init>() -> <init>
    143:150:void addToAppearedInPreLayoutHolders(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToAppearedInPreLayoutHolders
    196:202:void addToDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> addToDisappearedInLayout
    130:131:void addToOldChangeHolders(long,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> addToOldChangeHolders
    180:187:void addToPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToPostLayout
    62:69:void addToPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToPreLayout
    52:54:void clear() -> clear
    171:171:androidx.recyclerview.widget.RecyclerView$ViewHolder getFromOldChangeHolders(long) -> getFromOldChangeHolders
    72:73:boolean isDisappearing(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> isDisappearing
    159:160:boolean isInPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> isInPreLayout
    271:272:void onDetach() -> onDetach
    275:276:void onViewDetached(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewDetached
    99:121:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromLayoutStep(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> popFromLayoutStep
    95:95:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> popFromPostLayout
    84:84:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> popFromPreLayout
    217:251:void process(androidx.recyclerview.widget.ViewInfoStore$ProcessCallback) -> process
    209:214:void removeFromDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> removeFromDisappearedInLayout
    258:268:void removeViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> removeViewHolder
androidx.recyclerview.widget.ViewInfoStore$InfoRecord -> androidx.recyclerview.widget.ViewInfoStore$InfoRecord:
    305:305:void <clinit>() -> <clinit>
    307:308:void <init>() -> <init>
    324:325:void drainCache() -> drainCache
    311:312:androidx.recyclerview.widget.ViewInfoStore$InfoRecord obtain() -> obtain
    316:320:void recycle(androidx.recyclerview.widget.ViewInfoStore$InfoRecord) -> recycle
androidx.savedstate.Recreator -> androidx.savedstate.Recreator:
    42:44:void <init>(androidx.savedstate.SavedStateRegistryOwner) -> <init>
    48:66:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
    71:93:void reflectiveNew(java.lang.String) -> reflectiveNew
androidx.savedstate.SavedStateRegistry -> androidx.savedstate.SavedStateRegistry:
    44:53:void <init>() -> <init>
    76:88:android.os.Bundle consumeRestoredStateForKey(java.lang.String) -> consumeRestoredStateForKey
    190:209:void performRestore(androidx.lifecycle.Lifecycle,android.os.Bundle) -> performRestore
    220:230:void performSave(android.os.Bundle) -> performSave
androidx.savedstate.SavedStateRegistry$1 -> androidx.savedstate.SavedStateRegistry$1:
    197:197:void <init>(androidx.savedstate.SavedStateRegistry) -> <init>
    200:205:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.savedstate.SavedStateRegistryController -> androidx.savedstate.SavedStateRegistryController:
    36:39:void <init>(androidx.savedstate.SavedStateRegistryOwner) -> <init>
    84:84:androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner) -> create
    46:46:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    56:63:void performRestore(android.os.Bundle) -> performRestore
    74:75:void performSave(android.os.Bundle) -> performSave
androidx.transition.AnimatorUtils -> androidx.transition.AnimatorUtils:
    31:34:void addPauseListener(android.animation.Animator,android.animation.AnimatorListenerAdapter) -> addPauseListener
    37:50:void pause(android.animation.Animator) -> pause
    53:66:void resume(android.animation.Animator) -> resume
androidx.transition.AutoTransition -> androidx.transition.AutoTransition:
    37:39:void <init>() -> <init>
    47:51:void init() -> init
androidx.transition.ChangeBounds -> androidx.transition.ChangeBounds:
    60:167:void <clinit>() -> <clinit>
    163:170:void <init>() -> <init>
    241:242:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    236:237:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    217:232:void captureValues(androidx.transition.TransitionValues) -> captureValues
    261:455:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createAnimator
    185:185:java.lang.String[] getTransitionProperties() -> getTransitionProperties
    245:254:boolean parentMatches(android.view.View,android.view.View) -> parentMatches
androidx.transition.ChangeBounds$1 -> androidx.transition.ChangeBounds$1:
    69:70:void <init>(java.lang.Class,java.lang.String) -> <init>
    69:69:java.lang.Object get(java.lang.Object) -> get
    81:82:android.graphics.PointF get(android.graphics.drawable.Drawable) -> get
    69:69:void set(java.lang.Object,java.lang.Object) -> set
    74:77:void set(android.graphics.drawable.Drawable,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$10 -> androidx.transition.ChangeBounds$10:
    445:445:void <init>(androidx.transition.ChangeBounds,android.view.ViewGroup,android.graphics.drawable.BitmapDrawable,android.view.View,float) -> <init>
    448:450:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.transition.ChangeBounds$2 -> androidx.transition.ChangeBounds$2:
    87:87:void <init>(java.lang.Class,java.lang.String) -> <init>
    87:87:java.lang.Object get(java.lang.Object) -> get
    95:95:android.graphics.PointF get(androidx.transition.ChangeBounds$ViewBounds) -> get
    87:87:void set(java.lang.Object,java.lang.Object) -> set
    90:91:void set(androidx.transition.ChangeBounds$ViewBounds,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$3 -> androidx.transition.ChangeBounds$3:
    100:100:void <init>(java.lang.Class,java.lang.String) -> <init>
    100:100:java.lang.Object get(java.lang.Object) -> get
    108:108:android.graphics.PointF get(androidx.transition.ChangeBounds$ViewBounds) -> get
    100:100:void set(java.lang.Object,java.lang.Object) -> set
    103:104:void set(androidx.transition.ChangeBounds$ViewBounds,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$4 -> androidx.transition.ChangeBounds$4:
    113:113:void <init>(java.lang.Class,java.lang.String) -> <init>
    113:113:java.lang.Object get(java.lang.Object) -> get
    125:125:android.graphics.PointF get(android.view.View) -> get
    113:113:void set(java.lang.Object,java.lang.Object) -> set
    116:121:void set(android.view.View,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$5 -> androidx.transition.ChangeBounds$5:
    130:130:void <init>(java.lang.Class,java.lang.String) -> <init>
    130:130:java.lang.Object get(java.lang.Object) -> get
    142:142:android.graphics.PointF get(android.view.View) -> get
    130:130:void set(java.lang.Object,java.lang.Object) -> set
    133:138:void set(android.view.View,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$6 -> androidx.transition.ChangeBounds$6:
    147:147:void <init>(java.lang.Class,java.lang.String) -> <init>
    147:147:java.lang.Object get(java.lang.Object) -> get
    159:159:android.graphics.PointF get(android.view.View) -> get
    147:147:void set(java.lang.Object,java.lang.Object) -> set
    150:155:void set(android.view.View,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$7 -> androidx.transition.ChangeBounds$7:
    323:326:void <init>(androidx.transition.ChangeBounds,androidx.transition.ChangeBounds$ViewBounds) -> <init>
androidx.transition.ChangeBounds$8 -> androidx.transition.ChangeBounds$8:
    367:367:void <init>(androidx.transition.ChangeBounds,android.view.View,android.graphics.Rect,int,int,int,int) -> <init>
    372:373:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    377:382:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.transition.ChangeBounds$9 -> androidx.transition.ChangeBounds$9:
    391:392:void <init>(androidx.transition.ChangeBounds,android.view.ViewGroup) -> <init>
    402:406:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    410:411:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    415:416:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
androidx.transition.ChangeBounds$ViewBounds -> androidx.transition.ChangeBounds$ViewBounds:
    468:470:void <init>(android.view.View) -> <init>
    482:488:void setBottomRight(android.graphics.PointF) -> setBottomRight
    491:494:void setLeftTopRightBottom() -> setLeftTopRightBottom
    473:479:void setTopLeft(android.graphics.PointF) -> setTopLeft
androidx.transition.Fade -> androidx.transition.Fade:
    90:92:void <init>(int) -> <init>
    112:115:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    121:140:android.animation.Animator createAnimation(android.view.View,float,float) -> createAnimation
    168:175:float getStartAlpha(androidx.transition.TransitionValues,float) -> getStartAlpha
    152:156:android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> onAppear
    162:164:android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> onDisappear
androidx.transition.Fade$1 -> androidx.transition.Fade$1:
    132:132:void <init>(androidx.transition.Fade,android.view.View) -> <init>
    135:138:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
androidx.transition.Fade$FadeAnimatorListener -> androidx.transition.Fade$FadeAnimatorListener:
    181:185:void <init>(android.view.View) -> <init>
    198:202:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    189:194:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.transition.FragmentTransitionSupport -> androidx.transition.FragmentTransitionSupport:
    39:39:void <init>() -> <init>
    291:295:void addTarget(java.lang.Object,android.view.View) -> addTarget
    99:120:void addTargets(java.lang.Object,java.util.ArrayList) -> addTargets
    210:211:void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> beginDelayedTransition
    43:43:boolean canHandle(java.lang.Object) -> canHandle
    48:52:java.lang.Object cloneTransition(java.lang.Object) -> cloneTransition
    123:125:boolean hasSimpleTarget(androidx.transition.Transition) -> hasSimpleTarget
    182:204:java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsInSequence
    131:141:java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsTogether
    299:303:void removeTarget(java.lang.Object,android.view.View) -> removeTarget
    265:287:void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> replaceTargets
    147:175:void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> scheduleHideFragmentView
    218:249:void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleRemoveTargets
    83:95:void setEpicenter(java.lang.Object,android.view.View) -> setEpicenter
    307:319:void setEpicenter(java.lang.Object,android.graphics.Rect) -> setEpicenter
    68:79:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList) -> setSharedElementTargets
    254:260:void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> swapSharedElementTargets
    57:62:java.lang.Object wrapTransitionInSet(java.lang.Object) -> wrapTransitionInSet
androidx.transition.FragmentTransitionSupport$1 -> androidx.transition.FragmentTransitionSupport$1:
    88:88:void <init>(androidx.transition.FragmentTransitionSupport,android.graphics.Rect) -> <init>
androidx.transition.FragmentTransitionSupport$2 -> androidx.transition.FragmentTransitionSupport$2:
    148:148:void <init>(androidx.transition.FragmentTransitionSupport,android.view.View,java.util.ArrayList) -> <init>
    155:161:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    169:169:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    173:173:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
    151:151:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
androidx.transition.FragmentTransitionSupport$3 -> androidx.transition.FragmentTransitionSupport$3:
    219:219:void <init>(androidx.transition.FragmentTransitionSupport,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> <init>
    235:235:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    243:243:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    247:247:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
    222:231:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
androidx.transition.FragmentTransitionSupport$4 -> androidx.transition.FragmentTransitionSupport$4:
    309:309:void <init>(androidx.transition.FragmentTransitionSupport,android.graphics.Rect) -> <init>
androidx.transition.ObjectAnimatorUtils -> androidx.transition.ObjectAnimatorUtils:
    28:29:android.animation.ObjectAnimator ofPointF(java.lang.Object,android.util.Property,android.graphics.Path) -> ofPointF
androidx.transition.PathMotion -> androidx.transition.PathMotion:
    43:44:void <init>() -> <init>
androidx.transition.PropertyValuesHolderUtils -> androidx.transition.PropertyValuesHolderUtils:
    38:39:android.animation.PropertyValuesHolder ofPointF(android.util.Property,android.graphics.Path) -> ofPointF
androidx.transition.RectEvaluator -> androidx.transition.RectEvaluator:
    39:40:void <init>() -> <init>
    25:25:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    75:83:android.graphics.Rect evaluate(float,android.graphics.Rect,android.graphics.Rect) -> evaluate
androidx.transition.Scene -> androidx.transition.Scene:
    149:154:void exit() -> exit
    207:207:androidx.transition.Scene getCurrentScene(android.view.View) -> getCurrentScene
    196:197:void setCurrentScene(android.view.View,androidx.transition.Scene) -> setCurrentScene
androidx.transition.Transition -> androidx.transition.Transition:
    163:204:void <clinit>() -> <clinit>
    180:263:void <init>() -> <init>
    2033:2037:androidx.transition.Transition addListener(androidx.transition.Transition$TransitionListener) -> addListener
    998:999:androidx.transition.Transition addTarget(android.view.View) -> addTarget
    644:660:void addUnmatched(androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> addUnmatched
    1531:1568:void addViewValues(androidx.transition.TransitionValuesMaps,android.view.View,androidx.transition.TransitionValues) -> addViewValues
    1895:1916:void animate(android.animation.Animator) -> animate
    1598:1653:void captureHierarchy(android.view.View,boolean) -> captureHierarchy
    2180:2196:void capturePropagationValues(androidx.transition.TransitionValues) -> capturePropagationValues
    1468:1527:void captureValues(android.view.ViewGroup,boolean) -> captureValues
    1576:1585:void clearValues(boolean) -> clearValues
    119:119:java.lang.Object clone() -> clone
    2215:2223:androidx.transition.Transition clone() -> clone
    486:486:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createAnimator
    707:801:void createAnimators(android.view.ViewGroup,androidx.transition.TransitionValuesMaps,androidx.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList) -> createAnimators
    1954:1978:void end() -> end
    354:354:long getDuration() -> getDuration
    2124:2124:androidx.transition.Transition$EpicenterCallback getEpicenterCallback() -> getEpicenterCallback
    409:409:android.animation.TimeInterpolator getInterpolator() -> getInterpolator
    1682:1706:androidx.transition.TransitionValues getMatchedTransitionValues(android.view.View,boolean) -> getMatchedTransitionValues
    2241:2241:java.lang.String getName() -> getName
    2094:2094:androidx.transition.PathMotion getPathMotion() -> getPathMotion
    2172:2172:androidx.transition.TransitionPropagation getPropagation() -> getPropagation
    857:862:androidx.collection.ArrayMap getRunningAnimators() -> getRunningAnimators
    381:381:long getStartDelay() -> getStartDelay
    1412:1412:java.util.List getTargetIds() -> getTargetIds
    1441:1441:java.util.List getTargetNames() -> getTargetNames
    1456:1456:java.util.List getTargetTypes() -> getTargetTypes
    1426:1426:java.util.List getTargets() -> getTargets
    435:435:java.lang.String[] getTransitionProperties() -> getTransitionProperties
    1663:1667:androidx.transition.TransitionValues getTransitionValues(android.view.View,boolean) -> getTransitionValues
    1836:1857:boolean isTransitionRequired(androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> isTransitionRequired
    814:853:boolean isValidTarget(android.view.View) -> isValidTarget
    1862:1880:boolean isValueChanged(androidx.transition.TransitionValues,androidx.transition.TransitionValues,java.lang.String) -> isValueChanged
    591:608:void matchIds(androidx.collection.ArrayMap,androidx.collection.ArrayMap,android.util.SparseArray,android.util.SparseArray) -> matchIds
    543:554:void matchInstances(androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> matchInstances
    564:581:void matchItemIds(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.LongSparseArray,androidx.collection.LongSparseArray) -> matchItemIds
    618:635:void matchNames(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> matchNames
    664:687:void matchStartAndEnd(androidx.transition.TransitionValuesMaps,androidx.transition.TransitionValuesMaps) -> matchStartAndEnd
    1718:1739:void pause(android.view.View) -> pause
    1781:1819:void playTransition(android.view.ViewGroup) -> playTransition
    2049:2056:androidx.transition.Transition removeListener(androidx.transition.Transition$TransitionListener) -> removeListener
    1096:1097:androidx.transition.Transition removeTarget(android.view.View) -> removeTarget
    1750:1773:void resume(android.view.View) -> resume
    894:910:void runAnimator(android.animation.Animator,androidx.collection.ArrayMap) -> runAnimator
    876:890:void runAnimators() -> runAnimators
    341:342:androidx.transition.Transition setDuration(long) -> setDuration
    2109:2110:void setEpicenterCallback(androidx.transition.Transition$EpicenterCallback) -> setEpicenterCallback
    395:396:androidx.transition.Transition setInterpolator(android.animation.TimeInterpolator) -> setInterpolator
    2076:2081:void setPathMotion(androidx.transition.PathMotion) -> setPathMotion
    2155:2156:void setPropagation(androidx.transition.TransitionPropagation) -> setPropagation
    368:369:androidx.transition.Transition setStartDelay(long) -> setStartDelay
    1927:1939:void start() -> start
    2209:2209:java.lang.String toString() -> toString
    2245:2276:java.lang.String toString(java.lang.String) -> toString
androidx.transition.Transition$1 -> androidx.transition.Transition$1:
    170:170:void <init>() -> <init>
    173:176:android.graphics.Path getPath(float,float,float,float) -> getPath
androidx.transition.Transition$2 -> androidx.transition.Transition$2:
    896:896:void <init>(androidx.transition.Transition,androidx.collection.ArrayMap) -> <init>
    904:906:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    899:900:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.transition.Transition$3 -> androidx.transition.Transition$3:
    1907:1907:void <init>(androidx.transition.Transition) -> <init>
    1910:1912:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.transition.Transition$AnimationInfo -> androidx.transition.Transition$AnimationInfo:
    2359:2365:void <init>(android.view.View,java.lang.String,androidx.transition.Transition,androidx.transition.WindowIdImpl,androidx.transition.TransitionValues) -> <init>
androidx.transition.Transition$EpicenterCallback -> androidx.transition.Transition$EpicenterCallback:
    2422:2422:void <init>() -> <init>
androidx.transition.TransitionListenerAdapter -> androidx.transition.TransitionListenerAdapter:
    27:27:void <init>() -> <init>
    43:43:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    47:47:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
    31:31:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
androidx.transition.TransitionManager -> androidx.transition.TransitionManager:
    83:90:void <clinit>() -> <clinit>
    402:416:void beginDelayedTransition(android.view.ViewGroup,androidx.transition.Transition) -> beginDelayedTransition
    195:206:androidx.collection.ArrayMap getRunningTransitions() -> getRunningTransitions
    211:216:void sceneChangeRunTransition(android.view.ViewGroup,androidx.transition.Transition) -> sceneChangeRunTransition
    303:320:void sceneChangeSetup(android.view.ViewGroup,androidx.transition.Transition) -> sceneChangeSetup
androidx.transition.TransitionManager$MultiListener -> androidx.transition.TransitionManager$MultiListener:
    233:236:void <init>(androidx.transition.Transition,android.view.ViewGroup) -> <init>
    263:297:boolean onPreDraw() -> onPreDraw
    245:245:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    249:259:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    239:241:void removeListeners() -> removeListeners
androidx.transition.TransitionManager$MultiListener$1 -> androidx.transition.TransitionManager$MultiListener$1:
    282:282:void <init>(androidx.transition.TransitionManager$MultiListener,androidx.collection.ArrayMap) -> <init>
    285:287:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
androidx.transition.TransitionSet -> androidx.transition.TransitionSet:
    79:110:void <init>() -> <init>
    61:61:androidx.transition.Transition addListener(androidx.transition.Transition$TransitionListener) -> addListener
    299:299:androidx.transition.TransitionSet addListener(androidx.transition.Transition$TransitionListener) -> addListener
    61:61:androidx.transition.Transition addTarget(android.view.View) -> addTarget
    263:266:androidx.transition.TransitionSet addTarget(android.view.View) -> addTarget
    176:193:androidx.transition.TransitionSet addTransition(androidx.transition.Transition) -> addTransition
    526:534:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    538:543:void capturePropagationValues(androidx.transition.TransitionValues) -> capturePropagationValues
    514:522:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    61:61:java.lang.Object clone() -> clone
    639:645:androidx.transition.Transition clone() -> clone
    456:473:void createAnimators(android.view.ViewGroup,androidx.transition.TransitionValuesMaps,androidx.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList) -> createAnimators
    215:218:androidx.transition.Transition getTransitionAt(int) -> getTransitionAt
    204:204:int getTransitionCount() -> getTransitionCount
    549:554:void pause(android.view.View) -> pause
    61:61:androidx.transition.Transition removeListener(androidx.transition.Transition$TransitionListener) -> removeListener
    377:377:androidx.transition.TransitionSet removeListener(androidx.transition.Transition$TransitionListener) -> removeListener
    61:61:androidx.transition.Transition removeTarget(android.view.View) -> removeTarget
    314:317:androidx.transition.TransitionSet removeTarget(android.view.View) -> removeTarget
    560:565:void resume(android.view.View) -> resume
    481:510:void runAnimators() -> runAnimators
    61:61:androidx.transition.Transition setDuration(long) -> setDuration
    231:238:androidx.transition.TransitionSet setDuration(long) -> setDuration
    620:626:void setEpicenterCallback(androidx.transition.Transition$EpicenterCallback) -> setEpicenterCallback
    61:61:androidx.transition.Transition setInterpolator(android.animation.TimeInterpolator) -> setInterpolator
    250:257:androidx.transition.TransitionSet setInterpolator(android.animation.TimeInterpolator) -> setInterpolator
    132:143:androidx.transition.TransitionSet setOrdering(int) -> setOrdering
    382:387:void setPathMotion(androidx.transition.PathMotion) -> setPathMotion
    610:616:void setPropagation(androidx.transition.TransitionPropagation) -> setPropagation
    61:61:androidx.transition.Transition setStartDelay(long) -> setStartDelay
    244:244:androidx.transition.TransitionSet setStartDelay(long) -> setStartDelay
    408:413:void setupStartEndListeners() -> setupStartEndListeners
    630:634:java.lang.String toString(java.lang.String) -> toString
androidx.transition.TransitionSet$1 -> androidx.transition.TransitionSet$1:
    493:493:void <init>(androidx.transition.TransitionSet,androidx.transition.Transition) -> <init>
    496:498:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
androidx.transition.TransitionSet$TransitionSetListener -> androidx.transition.TransitionSet$TransitionSetListener:
    423:425:void <init>(androidx.transition.TransitionSet) -> <init>
    437:444:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    429:433:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
androidx.transition.TransitionUtils -> androidx.transition.TransitionUtils:
    35:39:void <clinit>() -> <clinit>
    51:72:android.view.View copyViewImage(android.view.ViewGroup,android.view.View,android.view.View) -> copyViewImage
    93:140:android.graphics.Bitmap createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF,android.view.ViewGroup) -> createViewBitmap
    144:151:android.animation.Animator mergeAnimators(android.animation.Animator,android.animation.Animator) -> mergeAnimators
androidx.transition.TransitionValues -> androidx.transition.TransitionValues:
    43:58:void <init>() -> <init>
    62:69:boolean equals(java.lang.Object) -> equals
    74:74:int hashCode() -> hashCode
    79:85:java.lang.String toString() -> toString
androidx.transition.TransitionValuesMaps -> androidx.transition.TransitionValuesMaps:
    25:33:void <init>() -> <init>
androidx.transition.ViewGroupOverlayApi18 -> androidx.transition.ViewGroupOverlayApi18:
    32:34:void <init>(android.view.ViewGroup) -> <init>
    38:39:void add(android.graphics.drawable.Drawable) -> add
    53:54:void add(android.view.View) -> add
    48:49:void remove(android.graphics.drawable.Drawable) -> remove
    58:59:void remove(android.view.View) -> remove
androidx.transition.ViewGroupUtils -> androidx.transition.ViewGroupUtils:
    33:34:androidx.transition.ViewGroupOverlayImpl getOverlay(android.view.ViewGroup) -> getOverlay
    43:48:void suppressLayout(android.view.ViewGroup,boolean) -> suppressLayout
androidx.transition.ViewGroupUtilsApi18 -> androidx.transition.ViewGroupUtilsApi18:
    50:60:void fetchSuppressLayoutMethod() -> fetchSuppressLayoutMethod
    37:47:void suppressLayout(android.view.ViewGroup,boolean) -> suppressLayout
androidx.transition.ViewOverlayApi18 -> androidx.transition.ViewOverlayApi18:
    31:33:void <init>(android.view.View) -> <init>
    37:38:void add(android.graphics.drawable.Drawable) -> add
    47:48:void remove(android.graphics.drawable.Drawable) -> remove
androidx.transition.ViewUtils -> androidx.transition.ViewUtils:
    45:74:void <clinit>() -> <clinit>
    131:132:void clearNonTransitionAlpha(android.view.View) -> clearNonTransitionAlpha
    214:223:void fetchViewFlagsField() -> fetchViewFlagsField
    93:94:androidx.transition.ViewOverlayImpl getOverlay(android.view.View) -> getOverlay
    114:114:float getTransitionAlpha(android.view.View) -> getTransitionAlpha
    103:104:androidx.transition.WindowIdImpl getWindowId(android.view.View) -> getWindowId
    122:123:void saveNonTransitionAlpha(android.view.View) -> saveNonTransitionAlpha
    210:211:void setLeftTopRightBottom(android.view.View,int,int,int,int) -> setLeftTopRightBottom
    110:111:void setTransitionAlpha(android.view.View,float) -> setTransitionAlpha
    148:157:void setTransitionVisibility(android.view.View,int) -> setTransitionVisibility
    172:173:void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> transformMatrixToGlobal
    188:189:void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> transformMatrixToLocal
androidx.transition.ViewUtils$1 -> androidx.transition.ViewUtils$1:
    60:60:void <init>(java.lang.Class,java.lang.String) -> <init>
    60:60:java.lang.Object get(java.lang.Object) -> get
    64:64:java.lang.Float get(android.view.View) -> get
    60:60:void set(java.lang.Object,java.lang.Object) -> set
    69:70:void set(android.view.View,java.lang.Float) -> set
androidx.transition.ViewUtils$2 -> androidx.transition.ViewUtils$2:
    75:75:void <init>(java.lang.Class,java.lang.String) -> <init>
    75:75:java.lang.Object get(java.lang.Object) -> get
    79:79:android.graphics.Rect get(android.view.View) -> get
    75:75:void set(java.lang.Object,java.lang.Object) -> set
    84:85:void set(android.view.View,android.graphics.Rect) -> set
androidx.transition.ViewUtilsApi19 -> androidx.transition.ViewUtilsApi19:
    29:29:void <init>() -> <init>
    77:77:void clearNonTransitionAlpha(android.view.View) -> clearNonTransitionAlpha
    93:102:void fetchGetTransitionAlphaMethod() -> fetchGetTransitionAlphaMethod
    80:90:void fetchSetTransitionAlphaMethod() -> fetchSetTransitionAlphaMethod
    56:66:float getTransitionAlpha(android.view.View) -> getTransitionAlpha
    72:72:void saveNonTransitionAlpha(android.view.View) -> saveNonTransitionAlpha
    40:52:void setTransitionAlpha(android.view.View,float) -> setTransitionAlpha
androidx.transition.ViewUtilsApi21 -> androidx.transition.ViewUtilsApi21:
    30:30:void <init>() -> <init>
    84:94:void fetchTransformMatrixToGlobalMethod() -> fetchTransformMatrixToGlobalMethod
    97:107:void fetchTransformMatrixToLocalMethod() -> fetchTransformMatrixToLocalMethod
    43:53:void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> transformMatrixToGlobal
    57:67:void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> transformMatrixToLocal
androidx.transition.ViewUtilsApi22 -> androidx.transition.ViewUtilsApi22:
    29:29:void <init>() -> <init>
    52:62:void fetchSetLeftTopRightBottomMethod() -> fetchSetLeftTopRightBottomMethod
    38:48:void setLeftTopRightBottom(android.view.View,int,int,int,int) -> setLeftTopRightBottom
androidx.transition.ViewUtilsBase -> androidx.transition.ViewUtilsBase:
    25:25:void <init>() -> <init>
    39:43:float getTransitionAlpha(android.view.View) -> getTransitionAlpha
androidx.transition.Visibility -> androidx.transition.Visibility:
    79:79:void <clinit>() -> <clinit>
    96:99:void <init>() -> <init>
    161:162:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    156:157:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    146:152:void captureValues(androidx.transition.TransitionValues) -> captureValues
    246:258:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createAnimator
    142:142:java.lang.String[] getTransitionProperties() -> getTransitionProperties
    191:239:androidx.transition.Visibility$VisibilityInfo getVisibilityChangeInfo(androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> getVisibilityChangeInfo
    462:473:boolean isTransitionRequired(androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> isTransitionRequired
    279:293:android.animation.Animator onAppear(android.view.ViewGroup,androidx.transition.TransitionValues,int,androidx.transition.TransitionValues,int) -> onAppear
    336:436:android.animation.Animator onDisappear(android.view.ViewGroup,androidx.transition.TransitionValues,int,androidx.transition.TransitionValues,int) -> onDisappear
    122:126:void setMode(int) -> setMode
androidx.transition.Visibility$1 -> androidx.transition.Visibility$1:
    411:411:void <init>(androidx.transition.Visibility,androidx.transition.ViewGroupOverlayImpl,android.view.View) -> <init>
    414:415:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.transition.Visibility$DisappearListener -> androidx.transition.Visibility$DisappearListener:
    486:495:void <init>(android.view.View,int,boolean) -> <init>
    559:568:void hideViewWhenNotCanceled() -> hideViewWhenNotCanceled
    517:518:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    530:531:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    501:504:void onAnimationPause(android.animation.Animator) -> onAnimationPause
    522:522:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    510:513:void onAnimationResume(android.animation.Animator) -> onAnimationResume
    526:526:void onAnimationStart(android.animation.Animator) -> onAnimationStart
    540:542:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    550:551:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    555:556:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
    536:536:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
    571:575:void suppressLayout(boolean) -> suppressLayout
androidx.transition.Visibility$VisibilityInfo -> androidx.transition.Visibility$VisibilityInfo:
    85:86:void <init>() -> <init>
androidx.transition.WindowIdApi18 -> androidx.transition.WindowIdApi18:
    29:31:void <init>(android.view.View) -> <init>
    35:35:boolean equals(java.lang.Object) -> equals
    40:40:int hashCode() -> hashCode
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback -> androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback:
    57:57:void <init>() -> <init>
    69:69:void onAnimationEnd(android.graphics.drawable.Drawable) -> onAnimationEnd
androidx.versionedparcelable.CustomVersionedParcelable -> androidx.versionedparcelable.CustomVersionedParcelable:
    27:27:void <init>() -> <init>
androidx.versionedparcelable.ParcelImpl -> androidx.versionedparcelable.ParcelImpl:
    60:60:void <clinit>() -> <clinit>
    38:40:void <init>(android.os.Parcel) -> <init>
    51:51:int describeContents() -> describeContents
    56:58:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.versionedparcelable.ParcelImpl$1 -> androidx.versionedparcelable.ParcelImpl$1:
    60:60:void <init>() -> <init>
    60:60:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    63:63:androidx.versionedparcelable.ParcelImpl createFromParcel(android.os.Parcel) -> createFromParcel
    60:60:java.lang.Object[] newArray(int) -> newArray
    68:68:androidx.versionedparcelable.ParcelImpl[] newArray(int) -> newArray
androidx.versionedparcelable.VersionedParcel -> androidx.versionedparcelable.VersionedParcel:
    86:90:void <init>(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> <init>
    1628:1635:java.lang.Class findParcelClass(java.lang.Class) -> findParcelClass
    1604:1611:java.lang.reflect.Method getReadMethod(java.lang.String) -> getReadMethod
    1616:1623:java.lang.reflect.Method getWriteMethod(java.lang.Class) -> getWriteMethod
    96:96:boolean isStream() -> isStream
    399:402:boolean readBoolean(boolean,int) -> readBoolean
    472:475:byte[] readByteArray(byte[],int) -> readByteArray
    616:619:java.lang.CharSequence readCharSequence(java.lang.CharSequence,int) -> readCharSequence
    1565:1577:androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel) -> readFromParcel
    409:412:int readInt(int,int) -> readInt
    481:484:android.os.Parcelable readParcelable(android.os.Parcelable,int) -> readParcelable
    451:454:java.lang.String readString(java.lang.String,int) -> readString
    1493:1496:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int) -> readVersionedParcelable
    1509:1513:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable() -> readVersionedParcelable
    269:269:void setSerializationFlags(boolean,boolean) -> setSerializationFlags
    294:296:void writeBoolean(boolean,int) -> writeBoolean
    304:306:void writeByteArray(byte[],int) -> writeByteArray
    325:327:void writeCharSequence(java.lang.CharSequence,int) -> writeCharSequence
    334:336:void writeInt(int,int) -> writeInt
    391:393:void writeParcelable(android.os.Parcelable,int) -> writeParcelable
    370:372:void writeString(java.lang.String,int) -> writeString
    1586:1600:void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel) -> writeToParcel
    1021:1023:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int) -> writeVersionedParcelable
    1028:1037:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable) -> writeVersionedParcelable
    1040:1048:void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable) -> writeVersionedParcelableCreator
androidx.versionedparcelable.VersionedParcelParcel -> androidx.versionedparcelable.VersionedParcelParcel:
    51:54:void <init>(android.os.Parcel) -> <init>
    41:66:void <init>(android.os.Parcel,int,int,java.lang.String,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> <init>
    99:111:void closeField() -> closeField
    119:119:androidx.versionedparcelable.VersionedParcel createSubParcel() -> createSubParcel
    258:258:boolean readBoolean() -> readBoolean
    236:242:byte[] readByteArray() -> readByteArray
    201:201:java.lang.CharSequence readCharSequence() -> readCharSequence
    70:84:boolean readField(int) -> readField
    206:206:int readInt() -> readInt
    248:248:android.os.Parcelable readParcelable() -> readParcelable
    226:226:java.lang.String readString() -> readString
    89:95:void setOutputField(int) -> setOutputField
    181:182:void writeBoolean(boolean) -> writeBoolean
    126:132:void writeByteArray(byte[]) -> writeByteArray
    196:197:void writeCharSequence(java.lang.CharSequence) -> writeCharSequence
    146:147:void writeInt(int) -> writeInt
    176:177:void writeParcelable(android.os.Parcelable) -> writeParcelable
    166:167:void writeString(java.lang.String) -> writeString
androidx.viewpager.widget.PagerAdapter -> androidx.viewpager.widget.PagerAdapter:
    81:82:void <init>() -> <init>
    129:130:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    202:202:void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    154:155:void finishUpdate(android.view.ViewGroup) -> finishUpdate
    231:231:void finishUpdate(android.view.View) -> finishUpdate
    281:281:int getItemPosition(java.lang.Object) -> getItemPosition
    343:343:float getPageWidth(int) -> getPageWidth
    115:115:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    184:184:java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    303:304:void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    263:263:void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    252:252:android.os.Parcelable saveState() -> saveState
    143:144:void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    218:218:void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    316:319:void setViewPagerObserver(android.database.DataSetObserver) -> setViewPagerObserver
    99:100:void startUpdate(android.view.ViewGroup) -> startUpdate
    166:166:void startUpdate(android.view.View) -> startUpdate
    312:313:void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
com.android.volley.AuthFailureError -> com.android.volley.AuthFailureError:
    34:35:void <init>(com.android.volley.NetworkResponse) -> <init>
    51:54:java.lang.String getMessage() -> getMessage
com.android.volley.Cache$Entry -> com.android.volley.Cache$Entry:
    68:95:void <init>() -> <init>
    105:105:boolean isExpired() -> isExpired
    109:109:boolean isExpired(long) -> isExpired
    118:118:boolean refreshNeeded(long) -> refreshNeeded
com.android.volley.CacheDispatcher -> com.android.volley.CacheDispatcher:
    33:33:void <clinit>() -> <clinit>
    48:72:void <init>(java.util.concurrent.BlockingQueue,java.util.concurrent.BlockingQueue,com.android.volley.Cache,com.android.volley.ResponseDelivery) -> <init>
    31:31:java.util.concurrent.BlockingQueue access$000(com.android.volley.CacheDispatcher) -> access$000
    114:116:void processRequest() -> processRequest
    120:211:void processRequest(com.android.volley.Request) -> processRequest
    79:81:void quit() -> quit
    85:103:void run() -> run
com.android.volley.CacheDispatcher$1 -> com.android.volley.CacheDispatcher$1:
    191:191:void <init>(com.android.volley.CacheDispatcher,com.android.volley.Request) -> <init>
    195:200:void run() -> run
com.android.volley.ClientError -> com.android.volley.ClientError:
    28:29:void <init>(com.android.volley.NetworkResponse) -> <init>
com.android.volley.DefaultRetryPolicy -> com.android.volley.DefaultRetryPolicy:
    44:45:void <init>() -> <init>
    54:58:void <init>(int,int,float) -> <init>
    69:69:int getCurrentRetryCount() -> getCurrentRetryCount
    63:63:int getCurrentTimeout() -> getCurrentTimeout
    93:93:boolean hasAttemptRemaining() -> hasAttemptRemaining
    84:89:void retry(com.android.volley.VolleyError) -> retry
com.android.volley.ExecutorDelivery -> com.android.volley.ExecutorDelivery:
    32:41:void <init>(android.os.Handler) -> <init>
    66:69:void postError(com.android.volley.Request,com.android.volley.VolleyError) -> postError
    54:55:void postResponse(com.android.volley.Request,com.android.volley.Response) -> postResponse
    59:62:void postResponse(com.android.volley.Request,com.android.volley.Response,java.lang.Runnable) -> postResponse
com.android.volley.ExecutorDelivery$1 -> com.android.volley.ExecutorDelivery$1:
    35:35:void <init>(com.android.volley.ExecutorDelivery,android.os.Handler) -> <init>
    38:39:void execute(java.lang.Runnable) -> execute
com.android.volley.ExecutorDelivery$ResponseDeliveryRunnable -> com.android.volley.ExecutorDelivery$ResponseDeliveryRunnable:
    78:82:void <init>(com.android.volley.Request,com.android.volley.Response,java.lang.Runnable) -> <init>
    95:119:void run() -> run
com.android.volley.Header -> com.android.volley.Header:
    25:28:void <init>(java.lang.String,java.lang.String) -> <init>
    40:45:boolean equals(java.lang.Object) -> equals
    31:31:java.lang.String getName() -> getName
    35:35:java.lang.String getValue() -> getValue
    50:52:int hashCode() -> hashCode
    57:57:java.lang.String toString() -> toString
com.android.volley.NetworkDispatcher -> com.android.volley.NetworkDispatcher:
    46:66:void <init>(java.util.concurrent.BlockingQueue,com.android.volley.Network,com.android.volley.Cache,com.android.volley.ResponseDelivery) -> <init>
    80:83:void addTrafficStatsTag(com.android.volley.Request) -> addTrafficStatsTag
    174:176:void parseAndDeliverNetworkError(com.android.volley.Request,com.android.volley.VolleyError) -> parseAndDeliverNetworkError
    110:112:void processRequest() -> processRequest
    116:171:void processRequest(com.android.volley.Request) -> processRequest
    73:75:void quit() -> quit
    87:100:void run() -> run
com.android.volley.NetworkError -> com.android.volley.NetworkError:
    23:24:void <init>() -> <init>
    27:28:void <init>(java.lang.Throwable) -> <init>
com.android.volley.NetworkResponse -> com.android.volley.NetworkResponse:
    49:50:void <init>(int,byte[],java.util.Map,boolean,long) -> <init>
    67:68:void <init>(int,byte[],boolean,long,java.util.List) -> <init>
    115:121:void <init>(byte[],java.util.Map) -> <init>
    129:140:void <init>(int,byte[],java.util.Map,java.util.List,boolean,long) -> <init>
    186:196:java.util.List toAllHeaderList(java.util.Map) -> toAllHeaderList
    170:181:java.util.Map toHeaderMap(java.util.List) -> toHeaderMap
com.android.volley.NoConnectionError -> com.android.volley.NoConnectionError:
    23:24:void <init>() -> <init>
    27:28:void <init>(java.lang.Throwable) -> <init>
com.android.volley.Request -> com.android.volley.Request:
    67:155:void <init>(int,java.lang.String,com.android.volley.Response$ErrorListener) -> <init>
    38:38:com.android.volley.VolleyLog$MarkerLog access$000(com.android.volley.Request) -> access$000
    221:224:void addMarker(java.lang.String) -> addMarker
    38:38:int compareTo(java.lang.Object) -> compareTo
    699:704:int compareTo(com.android.volley.Request) -> compareTo
    644:650:void deliverError(com.android.volley.VolleyError) -> deliverError
    485:503:byte[] encodeParameters(java.util.Map,java.lang.String) -> encodeParameters
    197:206:int findDefaultTrafficStatsTag(java.lang.String) -> findDefaultTrafficStatsTag
    232:255:void finish(java.lang.String) -> finish
    476:480:byte[] getBody() -> getBody
    463:463:java.lang.String getBodyContentType() -> getBodyContentType
    327:327:com.android.volley.Cache$Entry getCacheEntry() -> getCacheEntry
    299:310:java.lang.String getCacheKey() -> getCacheKey
    367:367:java.util.Map getHeaders() -> getHeaders
    159:159:int getMethod() -> getMethod
    441:441:java.util.Map getParams() -> getParams
    458:458:java.lang.String getParamsEncoding() -> getParamsEncoding
    424:428:byte[] getPostBody() -> getPostBody
    383:383:java.util.Map getPostParams() -> getPostParams
    403:403:java.lang.String getPostParamsEncoding() -> getPostParamsEncoding
    571:571:com.android.volley.Request$Priority getPriority() -> getPriority
    585:585:com.android.volley.RetryPolicy getRetryPolicy() -> getRetryPolicy
    580:580:int getTimeoutMs() -> getTimeoutMs
    192:192:int getTrafficStatsTag() -> getTrafficStatsTag
    294:294:java.lang.String getUrl() -> getUrl
    600:602:boolean hasHadResponseDelivered() -> hasHadResponseDelivered
    355:357:boolean isCanceled() -> isCanceled
    593:596:void markDelivered() -> markDelivered
    685:691:void notifyListenerResponseNotUsable() -> notifyListenerResponseNotUsable
    671:677:void notifyListenerResponseReceived(com.android.volley.Response) -> notifyListenerResponseReceived
    624:624:com.android.volley.VolleyError parseNetworkError(com.android.volley.VolleyError) -> parseNetworkError
    258:261:void sendEvent(int) -> sendEvent
    320:321:com.android.volley.Request setCacheEntry(com.android.volley.Cache$Entry) -> setCacheEntry
    658:661:void setNetworkRequestCompleteListener(com.android.volley.Request$NetworkRequestCompleteListener) -> setNetworkRequestCompleteListener
    270:271:com.android.volley.Request setRequestQueue(com.android.volley.RequestQueue) -> setRequestQueue
    215:216:com.android.volley.Request setRetryPolicy(com.android.volley.RetryPolicy) -> setRetryPolicy
    280:281:com.android.volley.Request setSequence(int) -> setSequence
    519:519:boolean shouldCache() -> shouldCache
    555:555:boolean shouldRetryConnectionErrors() -> shouldRetryConnectionErrors
    536:536:boolean shouldRetryServerErrors() -> shouldRetryServerErrors
    709:715:java.lang.String toString() -> toString
com.android.volley.Request$1 -> com.android.volley.Request$1:
    242:242:void <init>(com.android.volley.Request,java.lang.String,long) -> <init>
    245:247:void run() -> run
com.android.volley.Request$Priority -> com.android.volley.Request$Priority:
    562:566:void <clinit>() -> <clinit>
    562:562:void <init>(java.lang.String,int) -> <init>
    562:562:com.android.volley.Request$Priority valueOf(java.lang.String) -> valueOf
    562:562:com.android.volley.Request$Priority[] values() -> values
com.android.volley.RequestQueue -> com.android.volley.RequestQueue:
    92:143:void <init>(com.android.volley.Cache,com.android.volley.Network,int,com.android.volley.ResponseDelivery) -> <init>
    153:158:void <init>(com.android.volley.Cache,com.android.volley.Network,int) -> <init>
    167:168:void <init>(com.android.volley.Cache,com.android.volley.Network) -> <init>
    256:267:com.android.volley.Request add(com.android.volley.Request) -> add
    272:277:void beginRequest(com.android.volley.Request) -> beginRequest
    286:295:void finish(com.android.volley.Request) -> finish
    200:200:int getSequenceNumber() -> getSequenceNumber
    299:304:void sendRequestEvent(com.android.volley.Request,int) -> sendRequestEvent
    340:341:void sendRequestOverNetwork(com.android.volley.Request) -> sendRequestOverNetwork
    172:184:void start() -> start
    188:196:void stop() -> stop
com.android.volley.Response -> com.android.volley.Response:
    66:77:void <init>(java.lang.Object,com.android.volley.Cache$Entry) -> <init>
    66:83:void <init>(com.android.volley.VolleyError) -> <init>
    53:53:com.android.volley.Response error(com.android.volley.VolleyError) -> error
    70:70:boolean isSuccess() -> isSuccess
    45:45:com.android.volley.Response success(java.lang.Object,com.android.volley.Cache$Entry) -> success
com.android.volley.ServerError -> com.android.volley.ServerError:
    23:24:void <init>(com.android.volley.NetworkResponse) -> <init>
com.android.volley.TimeoutError -> com.android.volley.TimeoutError:
    21:21:void <init>() -> <init>
com.android.volley.VolleyError -> com.android.volley.VolleyError:
    25:27:void <init>() -> <init>
    29:31:void <init>(com.android.volley.NetworkResponse) -> <init>
    44:46:void <init>(java.lang.Throwable) -> <init>
    49:50:void setNetworkTimeMs(long) -> setNetworkTimeMs
com.android.volley.VolleyLog -> com.android.volley.VolleyLog:
    32:40:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
    87:104:java.lang.String buildMessage(java.lang.String,java.lang.Object[]) -> buildMessage
    63:64:void d(java.lang.String,java.lang.Object[]) -> d
    67:68:void e(java.lang.String,java.lang.Object[]) -> e
    71:72:void e(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> e
    57:60:void v(java.lang.String,java.lang.Object[]) -> v
com.android.volley.VolleyLog$MarkerLog -> com.android.volley.VolleyLog$MarkerLog:
    109:109:void <clinit>() -> <clinit>
    108:127:void <init>() -> <init>
    130:136:void add(java.lang.String,long) -> add
    165:169:void finalize() -> finalize
    144:159:void finish(java.lang.String) -> finish
    173:179:long getTotalDuration() -> getTotalDuration
com.android.volley.VolleyLog$MarkerLog$Marker -> com.android.volley.VolleyLog$MarkerLog$Marker:
    119:123:void <init>(java.lang.String,long,long) -> <init>
com.android.volley.WaitingRequestManager -> com.android.volley.WaitingRequestManager:
    43:80:void <init>(com.android.volley.CacheDispatcher,java.util.concurrent.BlockingQueue,com.android.volley.ResponseDelivery) -> <init>
    148:173:boolean maybeAddToWaitingRequests(com.android.volley.Request) -> maybeAddToWaitingRequests
    109:138:void onNoUsableResponseReceived(com.android.volley.Request) -> onNoUsableResponseReceived
    85:105:void onResponseReceived(com.android.volley.Request,com.android.volley.Response) -> onResponseReceived
com.android.volley.toolbox.BaseHttpStack -> com.android.volley.toolbox.BaseHttpStack:
    36:36:void <init>() -> <init>
com.android.volley.toolbox.BasicNetwork -> com.android.volley.toolbox.BasicNetwork:
    77:78:void <init>(com.android.volley.toolbox.BaseHttpStack) -> <init>
    84:91:void <init>(com.android.volley.toolbox.BaseHttpStack,com.android.volley.toolbox.ByteArrayPool) -> <init>
    95:150:com.android.volley.NetworkResponse performRequest(com.android.volley.Request) -> performRequest
com.android.volley.toolbox.ByteArrayPool -> com.android.volley.toolbox.ByteArrayPool:
    68:68:void <clinit>() -> <clinit>
    54:79:void <init>(int) -> <init>
    89:99:byte[] getBuf(int) -> getBuf
    108:120:void returnBuf(byte[]) -> returnBuf
    123:129:void trim() -> trim
com.android.volley.toolbox.ByteArrayPool$1 -> com.android.volley.toolbox.ByteArrayPool$1:
    69:69:void <init>() -> <init>
    69:69:int compare(java.lang.Object,java.lang.Object) -> compare
    72:72:int compare(byte[],byte[]) -> compare
com.android.volley.toolbox.DiskBasedCache -> com.android.volley.toolbox.DiskBasedCache:
    53:103:void <init>(com.android.volley.toolbox.DiskBasedCache$FileSupplier,int) -> <init>
    122:123:void <init>(com.android.volley.toolbox.DiskBasedCache$FileSupplier) -> <init>
    398:398:java.io.InputStream createInputStream(java.io.File) -> createInputStream
    403:403:java.io.OutputStream createOutputStream(java.io.File) -> createOutputStream
    141:172:com.android.volley.Cache$Entry get(java.lang.String) -> get
    295:295:java.io.File getFileForKey(java.lang.String) -> getFileForKey
    287:290:java.lang.String getFilenameForKey(java.lang.String) -> getFilenameForKey
    181:213:void initialize() -> initialize
    300:306:void initializeIfRootDirectoryDeleted() -> initializeIfRootDirectoryDeleted
    222:231:void invalidate(java.lang.String,boolean) -> invalidate
    315:351:void pruneIfNeeded() -> pruneIfNeeded
    239:266:void put(java.lang.String,com.android.volley.Cache$Entry) -> put
    360:367:void putEntry(java.lang.String,com.android.volley.toolbox.DiskBasedCache$CacheHeader) -> putEntry
    592:596:int read(java.io.InputStream) -> read
    664:675:java.util.List readHeaderList(com.android.volley.toolbox.DiskBasedCache$CountingInputStream) -> readHeaderList
    607:612:int readInt(java.io.InputStream) -> readInt
    627:636:long readLong(java.io.InputStream) -> readLong
    646:648:java.lang.String readString(com.android.volley.toolbox.DiskBasedCache$CountingInputStream) -> readString
    270:278:void remove(java.lang.String) -> remove
    371:375:void removeEntry(java.lang.String) -> removeEntry
    386:393:byte[] streamToBytes(com.android.volley.toolbox.DiskBasedCache$CountingInputStream,long) -> streamToBytes
    652:661:void writeHeaderList(java.util.List,java.io.OutputStream) -> writeHeaderList
    600:604:void writeInt(java.io.OutputStream,int) -> writeInt
    616:624:void writeLong(java.io.OutputStream,long) -> writeLong
    640:643:void writeString(java.io.OutputStream,java.lang.String) -> writeString
com.android.volley.toolbox.DiskBasedCache$CacheHeader -> com.android.volley.toolbox.DiskBasedCache$CacheHeader:
    446:454:void <init>(java.lang.String,java.lang.String,long,long,long,long,java.util.List) -> <init>
    463:471:void <init>(java.lang.String,com.android.volley.Cache$Entry) -> <init>
    475:480:java.util.List getAllResponseHeaders(com.android.volley.Cache$Entry) -> getAllResponseHeaders
    490:502:com.android.volley.toolbox.DiskBasedCache$CacheHeader readHeader(com.android.volley.toolbox.DiskBasedCache$CountingInputStream) -> readHeader
    508:517:com.android.volley.Cache$Entry toCacheEntry(byte[]) -> toCacheEntry
    523:535:boolean writeHeader(java.io.OutputStream) -> writeHeader
com.android.volley.toolbox.DiskBasedCache$CountingInputStream -> com.android.volley.toolbox.DiskBasedCache$CountingInputStream:
    546:548:void <init>(java.io.InputStream,long) -> <init>
    574:574:long bytesRemaining() -> bytesRemaining
    552:556:int read() -> read
    561:565:int read(byte[],int,int) -> read
com.android.volley.toolbox.HttpHeaderParser -> com.android.volley.toolbox.HttpHeaderParser:
    251:279:java.util.List combineHeaders(java.util.List,com.android.volley.Cache$Entry) -> combineHeaders
    169:169:java.lang.String formatEpochAsRfc1123(long) -> formatEpochAsRfc1123
    284:299:java.util.Map getCacheHeaders(com.android.volley.Cache$Entry) -> getCacheHeaders
    173:175:java.text.SimpleDateFormat newUsGmtFormatter(java.lang.String) -> newUsGmtFormatter
    62:144:com.android.volley.Cache$Entry parseCacheHeaders(com.android.volley.NetworkResponse) -> parseCacheHeaders
    188:204:java.lang.String parseCharset(java.util.Map,java.lang.String) -> parseCharset
    212:212:java.lang.String parseCharset(java.util.Map) -> parseCharset
    151:163:long parseDateAsEpoch(java.lang.String) -> parseDateAsEpoch
    230:234:java.util.List toAllHeaderList(java.util.Map) -> toAllHeaderList
    221:226:java.util.Map toHeaderMap(java.util.List) -> toHeaderMap
com.android.volley.toolbox.HttpResponse -> com.android.volley.toolbox.HttpResponse:
    41:42:void <init>(int,java.util.List) -> <init>
    54:60:void <init>(int,java.util.List,int,java.io.InputStream) -> <init>
    110:115:java.io.InputStream getContent() -> getContent
    90:90:int getContentLength() -> getContentLength
    85:85:java.util.List getHeaders() -> getHeaders
    80:80:int getStatusCode() -> getStatusCode
com.android.volley.toolbox.HurlStack -> com.android.volley.toolbox.HurlStack:
    50:51:void <init>() -> <init>
    55:56:void <init>(com.android.volley.toolbox.HurlStack$UrlRewriter) -> <init>
    62:65:void <init>(com.android.volley.toolbox.HurlStack$UrlRewriter,javax.net.ssl.SSLSocketFactory) -> <init>
    39:39:java.io.InputStream access$000(java.net.HttpURLConnection) -> access$000
    294:304:void addBody(java.net.HttpURLConnection,com.android.volley.Request,byte[]) -> addBody
    283:287:void addBodyIfExists(java.net.HttpURLConnection,com.android.volley.Request) -> addBodyIfExists
    119:129:java.util.List convertHeaders(java.util.Map) -> convertHeaders
    197:204:java.net.HttpURLConnection createConnection(java.net.URL) -> createConnection
    176:176:java.io.InputStream createInputStream(com.android.volley.Request,java.net.HttpURLConnection) -> createInputStream
    319:319:java.io.OutputStream createOutputStream(com.android.volley.Request,java.net.HttpURLConnection,int) -> createOutputStream
    70:112:com.android.volley.toolbox.HttpResponse executeRequest(com.android.volley.Request,java.util.Map) -> executeRequest
    141:141:boolean hasResponseBody(int,int) -> hasResponseBody
    188:192:java.io.InputStream inputStreamFromConnection(java.net.HttpURLConnection) -> inputStreamFromConnection
    215:228:java.net.HttpURLConnection openConnection(java.net.URL,com.android.volley.Request) -> openConnection
    236:279:void setConnectionParametersForRequest(java.net.HttpURLConnection,com.android.volley.Request) -> setConnectionParametersForRequest
com.android.volley.toolbox.HurlStack$UrlConnectionInputStream -> com.android.volley.toolbox.HurlStack$UrlConnectionInputStream:
    155:157:void <init>(java.net.HttpURLConnection) -> <init>
    161:163:void close() -> close
com.android.volley.toolbox.NetworkUtility -> com.android.volley.toolbox.NetworkUtility:
    125:136:void attemptRetryOnException(com.android.volley.Request,com.android.volley.toolbox.NetworkUtility$RetryInfo) -> attemptRetryOnException
    67:78:com.android.volley.NetworkResponse getNotModifiedNetworkResponse(com.android.volley.Request,long,java.util.List) -> getNotModifiedNetworkResponse
    89:110:byte[] inputStreamToBytes(java.io.InputStream,int,com.android.volley.toolbox.ByteArrayPool) -> inputStreamToBytes
    53:63:void logSlowRequests(long,com.android.volley.Request,byte[],int) -> logSlowRequests
    161:203:com.android.volley.toolbox.NetworkUtility$RetryInfo shouldRetryException(com.android.volley.Request,java.io.IOException,long,com.android.volley.toolbox.HttpResponse,byte[]) -> shouldRetryException
com.android.volley.toolbox.NetworkUtility$RetryInfo -> com.android.volley.toolbox.NetworkUtility$RetryInfo:
    138:138:void <init>(java.lang.String,com.android.volley.VolleyError,com.android.volley.toolbox.NetworkUtility$1) -> <init>
    142:145:void <init>(java.lang.String,com.android.volley.VolleyError) -> <init>
    138:138:com.android.volley.VolleyError access$000(com.android.volley.toolbox.NetworkUtility$RetryInfo) -> access$000
    138:138:java.lang.String access$100(com.android.volley.toolbox.NetworkUtility$RetryInfo) -> access$100
com.android.volley.toolbox.PoolingByteArrayOutputStream -> com.android.volley.toolbox.PoolingByteArrayOutputStream:
    51:54:void <init>(com.android.volley.toolbox.ByteArrayPool,int) -> <init>
    58:61:void close() -> close
    72:79:void expand(int) -> expand
    65:66:void finalize() -> finalize
    82:85:void write(byte[],int,int) -> write
    88:91:void write(int) -> write
com.android.volley.toolbox.StringRequest -> com.android.volley.toolbox.StringRequest:
    32:53:void <init>(int,java.lang.String,com.android.volley.Response$Listener,com.android.volley.Response$ErrorListener) -> <init>
    29:29:void deliverResponse(java.lang.Object) -> deliverResponse
    78:84:void deliverResponse(java.lang.String) -> deliverResponse
    91:98:com.android.volley.Response parseNetworkResponse(com.android.volley.NetworkResponse) -> parseNetworkResponse
com.android.volley.toolbox.Volley -> com.android.volley.toolbox.Volley:
    42:67:com.android.volley.RequestQueue newRequestQueue(android.content.Context,com.android.volley.toolbox.BaseHttpStack) -> newRequestQueue
    89:106:com.android.volley.RequestQueue newRequestQueue(android.content.Context,com.android.volley.Network) -> newRequestQueue
    116:116:com.android.volley.RequestQueue newRequestQueue(android.content.Context) -> newRequestQueue
com.android.volley.toolbox.Volley$1 -> com.android.volley.toolbox.Volley$1:
    93:94:void <init>(android.content.Context) -> <init>
    98:101:java.io.File get() -> get
com.bumptech.glide.GeneratedAppGlideModule -> com.bumptech.glide.GeneratedAppGlideModule:
    15:15:void <init>() -> <init>
    22:22:com.bumptech.glide.manager.RequestManagerRetriever$RequestManagerFactory getRequestManagerFactory() -> getRequestManagerFactory
com.bumptech.glide.GenericTransitionOptions -> com.bumptech.glide.GenericTransitionOptions:
    15:15:void <init>() -> <init>
com.bumptech.glide.Glide -> com.bumptech.glide.Glide:
    130:609:void <init>(android.content.Context,com.bumptech.glide.load.engine.Engine,com.bumptech.glide.load.engine.cache.MemoryCache,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,com.bumptech.glide.manager.RequestManagerRetriever,com.bumptech.glide.manager.ConnectivityMonitorFactory,int,com.bumptech.glide.Glide$RequestOptionsFactory,java.util.Map,java.util.List,com.bumptech.glide.GlideExperiments) -> <init>
    204:212:void checkAndInitializeGlide(android.content.Context,com.bumptech.glide.GeneratedAppGlideModule) -> checkAndInitializeGlide
    694:699:void clearMemory() -> clearMemory
    186:196:com.bumptech.glide.Glide get(android.content.Context) -> get
    338:364:com.bumptech.glide.GeneratedAppGlideModule getAnnotationGeneratedGlideModules(android.content.Context) -> getAnnotationGeneratedGlideModules
    636:636:com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool getArrayPool() -> getArrayPool
    631:631:com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool getBitmapPool() -> getBitmapPool
    646:646:com.bumptech.glide.manager.ConnectivityMonitorFactory getConnectivityMonitorFactory() -> getConnectivityMonitorFactory
    642:642:android.content.Context getContext() -> getContext
    651:651:com.bumptech.glide.GlideContext getGlideContext() -> getGlideContext
    890:890:com.bumptech.glide.Registry getRegistry() -> getRegistry
    737:737:com.bumptech.glide.manager.RequestManagerRetriever getRequestManagerRetriever() -> getRequestManagerRetriever
    769:774:com.bumptech.glide.manager.RequestManagerRetriever getRetriever(android.content.Context) -> getRetriever
    266:267:void initializeGlide(android.content.Context,com.bumptech.glide.GeneratedAppGlideModule) -> initializeGlide
    275:333:void initializeGlide(android.content.Context,com.bumptech.glide.GlideBuilder,com.bumptech.glide.GeneratedAppGlideModule) -> initializeGlide
    931:931:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    935:936:void onLowMemory() -> onLowMemory
    925:926:void onTrimMemory(int) -> onTrimMemory
    906:912:void registerRequestManager(com.bumptech.glide.RequestManager) -> registerRequestManager
    894:902:boolean removeFromManagers(com.bumptech.glide.request.target.Target) -> removeFromManagers
    368:368:void throwIncorrectGlideModule(java.lang.Exception) -> throwIncorrectGlideModule
    708:720:void trimMemory(int) -> trimMemory
    915:921:void unregisterRequestManager(com.bumptech.glide.RequestManager) -> unregisterRequestManager
    801:801:com.bumptech.glide.RequestManager with(android.content.Context) -> with
    826:826:com.bumptech.glide.RequestManager with(androidx.fragment.app.FragmentActivity) -> with
    885:885:com.bumptech.glide.RequestManager with(android.view.View) -> with
com.bumptech.glide.GlideBuilder -> com.bumptech.glide.GlideBuilder:
    42:55:void <init>() -> <init>
    500:563:com.bumptech.glide.Glide build(android.content.Context) -> build
    489:490:void setRequestManagerFactory(com.bumptech.glide.manager.RequestManagerRetriever$RequestManagerFactory) -> setRequestManagerFactory
com.bumptech.glide.GlideBuilder$1 -> com.bumptech.glide.GlideBuilder$1:
    56:56:void <init>(com.bumptech.glide.GlideBuilder) -> <init>
    60:60:com.bumptech.glide.request.RequestOptions build() -> build
com.bumptech.glide.GlideBuilder$EnableImageDecoderForBitmaps -> com.bumptech.glide.GlideBuilder$EnableImageDecoderForBitmaps:
    592:592:void <init>() -> <init>
com.bumptech.glide.GlideBuilder$LogRequestOrigins -> com.bumptech.glide.GlideBuilder$LogRequestOrigins:
    595:595:void <init>() -> <init>
com.bumptech.glide.GlideBuilder$WaitForFramesAfterTrimMemory -> com.bumptech.glide.GlideBuilder$WaitForFramesAfterTrimMemory:
    589:589:void <init>() -> <init>
com.bumptech.glide.GlideContext -> com.bumptech.glide.GlideContext:
    28:28:void <clinit>() -> <clinit>
    56:66:void <init>(android.content.Context,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,com.bumptech.glide.Registry,com.bumptech.glide.request.target.ImageViewTargetFactory,com.bumptech.glide.Glide$RequestOptionsFactory,java.util.Map,java.util.List,com.bumptech.glide.load.engine.Engine,com.bumptech.glide.GlideExperiments,int) -> <init>
    100:100:com.bumptech.glide.request.target.ViewTarget buildImageViewTarget(android.widget.ImageView,java.lang.Class) -> buildImageViewTarget
    119:119:com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool getArrayPool() -> getArrayPool
    69:69:java.util.List getDefaultRequestListeners() -> getDefaultRequestListeners
    72:77:com.bumptech.glide.request.RequestOptions getDefaultRequestOptions() -> getDefaultRequestOptions
    83:94:com.bumptech.glide.TransitionOptions getDefaultTransitionOptions(java.lang.Class) -> getDefaultTransitionOptions
    105:105:com.bumptech.glide.load.engine.Engine getEngine() -> getEngine
    123:123:com.bumptech.glide.GlideExperiments getExperiments() -> getExperiments
    114:114:int getLogLevel() -> getLogLevel
    110:110:com.bumptech.glide.Registry getRegistry() -> getRegistry
com.bumptech.glide.GlideExperiments -> com.bumptech.glide.GlideExperiments:
    22:25:void <init>(com.bumptech.glide.GlideExperiments$Builder) -> <init>
    40:40:boolean isEnabled(java.lang.Class) -> isEnabled
com.bumptech.glide.GlideExperiments$Builder -> com.bumptech.glide.GlideExperiments$Builder:
    45:46:void <init>() -> <init>
    45:45:java.util.Map access$000(com.bumptech.glide.GlideExperiments$Builder) -> access$000
    63:63:com.bumptech.glide.GlideExperiments build() -> build
com.bumptech.glide.MemoryCategory -> com.bumptech.glide.MemoryCategory:
    4:15:void <clinit>() -> <clinit>
    19:21:void <init>(java.lang.String,int,float) -> <init>
    4:4:com.bumptech.glide.MemoryCategory valueOf(java.lang.String) -> valueOf
    4:4:com.bumptech.glide.MemoryCategory[] values() -> values
com.bumptech.glide.Priority -> com.bumptech.glide.Priority:
    8:12:void <clinit>() -> <clinit>
    8:8:void <init>(java.lang.String,int) -> <init>
    8:8:com.bumptech.glide.Priority valueOf(java.lang.String) -> valueOf
    8:8:com.bumptech.glide.Priority[] values() -> values
com.bumptech.glide.Registry -> com.bumptech.glide.Registry:
    54:69:void <init>() -> <init>
    109:110:com.bumptech.glide.Registry append(java.lang.Class,com.bumptech.glide.load.Encoder) -> append
    153:154:com.bumptech.glide.Registry append(java.lang.Class,java.lang.Class,com.bumptech.glide.load.ResourceDecoder) -> append
    183:184:com.bumptech.glide.Registry append(java.lang.String,java.lang.Class,java.lang.Class,com.bumptech.glide.load.ResourceDecoder) -> append
    316:317:com.bumptech.glide.Registry append(java.lang.Class,com.bumptech.glide.load.ResourceEncoder) -> append
    403:404:com.bumptech.glide.Registry append(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory) -> append
    499:525:java.util.List getDecodePaths(java.lang.Class,java.lang.Class,java.lang.Class) -> getDecodePaths
    593:597:java.util.List getImageHeaderParsers() -> getImageHeaderParsers
    473:491:com.bumptech.glide.load.engine.LoadPath getLoadPath(java.lang.Class,java.lang.Class,java.lang.Class) -> getLoadPath
    588:588:java.util.List getModelLoaders(java.lang.Object) -> getModelLoaders
    533:554:java.util.List getRegisteredResourceClasses(java.lang.Class,java.lang.Class,java.lang.Class) -> getRegisteredResourceClasses
    564:568:com.bumptech.glide.load.ResourceEncoder getResultEncoder(com.bumptech.glide.load.engine.Resource) -> getResultEncoder
    583:583:com.bumptech.glide.load.data.DataRewinder getRewinder(java.lang.Object) -> getRewinder
    574:578:com.bumptech.glide.load.Encoder getSourceEncoder(java.lang.Object) -> getSourceEncoder
    558:558:boolean isResourceEncoderAvailable(com.bumptech.glide.load.engine.Resource) -> isResourceEncoderAvailable
    345:346:com.bumptech.glide.Registry register(com.bumptech.glide.load.data.DataRewinder$Factory) -> register
    364:365:com.bumptech.glide.Registry register(java.lang.Class,java.lang.Class,com.bumptech.glide.load.resource.transcode.ResourceTranscoder) -> register
    374:375:com.bumptech.glide.Registry register(com.bumptech.glide.load.ImageHeaderParser) -> register
    263:271:com.bumptech.glide.Registry setResourceDecoderBucketPriorityList(java.util.List) -> setResourceDecoderBucketPriorityList
com.bumptech.glide.Registry$MissingComponentException -> com.bumptech.glide.Registry$MissingComponentException:
    655:656:void <init>(java.lang.String) -> <init>
com.bumptech.glide.Registry$NoImageHeaderParserException -> com.bumptech.glide.Registry$NoImageHeaderParserException:
    664:665:void <init>() -> <init>
com.bumptech.glide.Registry$NoModelLoaderAvailableException -> com.bumptech.glide.Registry$NoModelLoaderAvailableException:
    609:610:void <init>(java.lang.Object) -> <init>
    614:619:void <init>(java.lang.Object,java.util.List) -> <init>
    623:624:void <init>(java.lang.Class,java.lang.Class) -> <init>
com.bumptech.glide.Registry$NoResultEncoderAvailableException -> com.bumptech.glide.Registry$NoResultEncoderAvailableException:
    632:638:void <init>(java.lang.Class) -> <init>
com.bumptech.glide.Registry$NoSourceEncoderAvailableException -> com.bumptech.glide.Registry$NoSourceEncoderAvailableException:
    646:647:void <init>(java.lang.Class) -> <init>
com.bumptech.glide.RequestBuilder -> com.bumptech.glide.RequestBuilder:
    56:60:void <clinit>() -> <clinit>
    79:100:void <init>(com.bumptech.glide.Glide,com.bumptech.glide.RequestManager,java.lang.Class,android.content.Context) -> <init>
    197:206:com.bumptech.glide.RequestBuilder addListener(com.bumptech.glide.request.RequestListener) -> addListener
    52:52:com.bumptech.glide.request.BaseRequestOptions apply(com.bumptech.glide.request.BaseRequestOptions) -> apply
    138:139:com.bumptech.glide.RequestBuilder apply(com.bumptech.glide.request.BaseRequestOptions) -> apply
    949:957:com.bumptech.glide.request.Request buildRequest(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.BaseRequestOptions,java.util.concurrent.Executor) -> buildRequest
    975:1018:com.bumptech.glide.request.Request buildRequestRecursive(java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestCoordinator,com.bumptech.glide.TransitionOptions,com.bumptech.glide.Priority,int,int,com.bumptech.glide.request.BaseRequestOptions,java.util.concurrent.Executor) -> buildRequestRecursive
    1032:1129:com.bumptech.glide.request.Request buildThumbnailRequestRecursive(java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestCoordinator,com.bumptech.glide.TransitionOptions,com.bumptech.glide.Priority,int,int,com.bumptech.glide.request.BaseRequestOptions,java.util.concurrent.Executor) -> buildThumbnailRequestRecursive
    52:52:com.bumptech.glide.request.BaseRequestOptions clone() -> clone
    52:52:java.lang.Object clone() -> clone
    675:686:com.bumptech.glide.RequestBuilder clone() -> clone
    931:940:com.bumptech.glide.Priority getThumbnailPriority(com.bumptech.glide.Priority) -> getThumbnailPriority
    118:121:void initRequestListeners(java.util.List) -> initRequestListeners
    698:698:com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target) -> into
    707:707:com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,java.util.concurrent.Executor) -> into
    715:742:com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.BaseRequestOptions,java.util.concurrent.Executor) -> into
    767:803:com.bumptech.glide.request.target.ViewTarget into(android.widget.ImageView) -> into
    752:752:boolean isSkipMemoryCacheWithCompletePreviousRequest(com.bumptech.glide.request.BaseRequestOptions,com.bumptech.glide.request.Request) -> isSkipMemoryCacheWithCompletePreviousRequest
    453:453:com.bumptech.glide.RequestBuilder load(java.lang.Object) -> load
    536:536:com.bumptech.glide.RequestBuilder load(java.lang.String) -> load
    620:620:com.bumptech.glide.RequestBuilder load(java.lang.Integer) -> load
    458:463:com.bumptech.glide.RequestBuilder loadGeneric(java.lang.Object) -> loadGeneric
    1154:1169:com.bumptech.glide.request.Request obtainRequest(java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.BaseRequestOptions,com.bumptech.glide.request.RequestCoordinator,com.bumptech.glide.TransitionOptions,com.bumptech.glide.Priority,int,int,java.util.concurrent.Executor) -> obtainRequest
com.bumptech.glide.RequestBuilder$1 -> com.bumptech.glide.RequestBuilder$1:
    777:931:void <clinit>() -> <clinit>
com.bumptech.glide.RequestManager -> com.bumptech.glide.RequestManager:
    59:62:void <clinit>() -> <clinit>
    103:110:void <init>(com.bumptech.glide.Glide,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.manager.RequestManagerTreeNode,android.content.Context) -> <init>
    77:148:void <init>(com.bumptech.glide.Glide,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.manager.RequestManagerTreeNode,com.bumptech.glide.manager.RequestTracker,com.bumptech.glide.manager.ConnectivityMonitorFactory,android.content.Context) -> <init>
    594:594:com.bumptech.glide.RequestBuilder as(java.lang.Class) -> as
    390:390:com.bumptech.glide.RequestBuilder asBitmap() -> asBitmap
    425:425:com.bumptech.glide.RequestBuilder asDrawable() -> asDrawable
    620:625:void clear(com.bumptech.glide.request.target.Target) -> clear
    675:675:java.util.List getDefaultRequestListeners() -> getDefaultRequestListeners
    679:679:com.bumptech.glide.request.RequestOptions getDefaultRequestOptions() -> getDefaultRequestOptions
    684:684:com.bumptech.glide.TransitionOptions getDefaultTransitionOptions(java.lang.Class) -> getDefaultTransitionOptions
    461:461:com.bumptech.glide.RequestBuilder load(java.lang.String) -> load
    498:498:com.bumptech.glide.RequestBuilder load(java.lang.Integer) -> load
    705:705:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    368:379:void onDestroy() -> onDestroy
    702:702:void onLowMemory() -> onLowMemory
    348:351:void onStart() -> onStart
    358:361:void onStop() -> onStop
    694:697:void onTrimMemory(int) -> onTrimMemory
    274:276:void pauseAllRequests() -> pauseAllRequests
    287:292:void pauseAllRequestsRecursive() -> pauseAllRequestsRecursive
    254:256:void pauseRequests() -> pauseRequests
    323:325:void resumeRequests() -> resumeRequests
    150:152:void setRequestOptions(com.bumptech.glide.request.RequestOptions) -> setRequestOptions
    689:689:java.lang.String toString() -> toString
    669:672:void track(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.Request) -> track
    653:665:boolean untrack(com.bumptech.glide.request.target.Target) -> untrack
    628:651:void untrackOrDelegate(com.bumptech.glide.request.target.Target) -> untrackOrDelegate
com.bumptech.glide.RequestManager$1 -> com.bumptech.glide.RequestManager$1:
    81:81:void <init>(com.bumptech.glide.RequestManager) -> <init>
    84:85:void run() -> run
com.bumptech.glide.RequestManager$RequestManagerConnectivityListener -> com.bumptech.glide.RequestManager$RequestManagerConnectivityListener:
    712:714:void <init>(com.bumptech.glide.RequestManager,com.bumptech.glide.manager.RequestTracker) -> <init>
    718:723:void onConnectivityChanged(boolean) -> onConnectivityChanged
com.bumptech.glide.TransitionOptions -> com.bumptech.glide.TransitionOptions:
    17:20:void <init>() -> <init>
    17:17:java.lang.Object clone() -> clone
    86:88:com.bumptech.glide.TransitionOptions clone() -> clone
    93:93:com.bumptech.glide.request.transition.TransitionFactory getTransitionFactory() -> getTransitionFactory
com.bumptech.glide.disklrucache.DiskLruCache -> com.bumptech.glide.disklrucache.DiskLruCache:
    149:190:void <init>(java.io.File,int,int,long) -> <init>
    90:90:java.io.Writer access$100(com.bumptech.glide.disklrucache.DiskLruCache) -> access$100
    90:90:int access$1900(com.bumptech.glide.disklrucache.DiskLruCache) -> access$1900
    90:90:void access$200(com.bumptech.glide.disklrucache.DiskLruCache) -> access$200
    90:90:java.io.File access$2000(com.bumptech.glide.disklrucache.DiskLruCache) -> access$2000
    90:90:void access$2100(com.bumptech.glide.disklrucache.DiskLruCache,com.bumptech.glide.disklrucache.DiskLruCache$Editor,boolean) -> access$2100
    90:90:boolean access$300(com.bumptech.glide.disklrucache.DiskLruCache) -> access$300
    90:90:void access$400(com.bumptech.glide.disklrucache.DiskLruCache) -> access$400
    90:90:int access$502(com.bumptech.glide.disklrucache.DiskLruCache,int) -> access$502
    623:626:void checkNotClosed() -> checkNotClosed
    636:648:void close() -> close
    679:693:void closeWriter(java.io.Writer) -> closeWriter
    507:568:void completeEdit(com.bumptech.glide.disklrucache.DiskLruCache$Editor,boolean) -> completeEdit
    663:665:void delete() -> delete
    393:396:void deleteIfExists(java.io.File) -> deleteIfExists
    447:447:com.bumptech.glide.disklrucache.DiskLruCache$Editor edit(java.lang.String) -> edit
    450:473:com.bumptech.glide.disklrucache.DiskLruCache$Editor edit(java.lang.String,long) -> edit
    703:717:void flushWriter(java.io.Writer) -> flushWriter
    412:439:com.bumptech.glide.disklrucache.DiskLruCache$Value get(java.lang.String) -> get
    575:577:boolean journalRebuildRequired() -> journalRebuildRequired
    203:244:com.bumptech.glide.disklrucache.DiskLruCache open(java.io.File,int,int,long) -> open
    331:347:void processJournal() -> processJournal
    248:285:void readJournal() -> readJournal
    288:324:void readJournalLine(java.lang.String) -> readJournalLine
    353:390:void rebuildJournal() -> rebuildJournal
    586:614:boolean remove(java.lang.String) -> remove
    399:405:void renameTo(java.io.File,java.io.File,boolean) -> renameTo
    651:655:void trimToSize() -> trimToSize
com.bumptech.glide.disklrucache.DiskLruCache$1 -> com.bumptech.glide.disklrucache.DiskLruCache$1:
    166:166:void <init>(com.bumptech.glide.disklrucache.DiskLruCache) -> <init>
    166:166:java.lang.Object call() -> call
    168:178:java.lang.Void call() -> call
com.bumptech.glide.disklrucache.DiskLruCache$DiskLruCacheThreadFactory -> com.bumptech.glide.disklrucache.DiskLruCache$DiskLruCacheThreadFactory:
    932:932:void <init>() -> <init>
    932:932:void <init>(com.bumptech.glide.disklrucache.DiskLruCache$1) -> <init>
    934:937:java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.bumptech.glide.disklrucache.DiskLruCache$Editor -> com.bumptech.glide.disklrucache.DiskLruCache$Editor:
    759:759:void <init>(com.bumptech.glide.disklrucache.DiskLruCache,com.bumptech.glide.disklrucache.DiskLruCache$Entry,com.bumptech.glide.disklrucache.DiskLruCache$1) -> <init>
    764:767:void <init>(com.bumptech.glide.disklrucache.DiskLruCache,com.bumptech.glide.disklrucache.DiskLruCache$Entry) -> <init>
    842:843:void abort() -> abort
    846:852:void abortUnlessCommitted() -> abortUnlessCommitted
    759:759:com.bumptech.glide.disklrucache.DiskLruCache$Entry access$1500(com.bumptech.glide.disklrucache.DiskLruCache$Editor) -> access$1500
    759:759:boolean[] access$1600(com.bumptech.glide.disklrucache.DiskLruCache$Editor) -> access$1600
    833:835:void commit() -> commit
    799:809:java.io.File getFile(int) -> getFile
com.bumptech.glide.disklrucache.DiskLruCache$Entry -> com.bumptech.glide.disklrucache.DiskLruCache$Entry:
    855:855:void <init>(com.bumptech.glide.disklrucache.DiskLruCache,java.lang.String,com.bumptech.glide.disklrucache.DiskLruCache$1) -> <init>
    874:890:void <init>(com.bumptech.glide.disklrucache.DiskLruCache,java.lang.String) -> <init>
    855:855:long[] access$1100(com.bumptech.glide.disklrucache.DiskLruCache$Entry) -> access$1100
    855:855:java.lang.String access$1200(com.bumptech.glide.disklrucache.DiskLruCache$Entry) -> access$1200
    855:855:long access$1300(com.bumptech.glide.disklrucache.DiskLruCache$Entry) -> access$1300
    855:855:long access$1302(com.bumptech.glide.disklrucache.DiskLruCache$Entry,long) -> access$1302
    855:855:boolean access$700(com.bumptech.glide.disklrucache.DiskLruCache$Entry) -> access$700
    855:855:boolean access$702(com.bumptech.glide.disklrucache.DiskLruCache$Entry,boolean) -> access$702
    855:855:com.bumptech.glide.disklrucache.DiskLruCache$Editor access$800(com.bumptech.glide.disklrucache.DiskLruCache$Entry) -> access$800
    855:855:com.bumptech.glide.disklrucache.DiskLruCache$Editor access$802(com.bumptech.glide.disklrucache.DiskLruCache$Entry,com.bumptech.glide.disklrucache.DiskLruCache$Editor) -> access$802
    855:855:void access$900(com.bumptech.glide.disklrucache.DiskLruCache$Entry,java.lang.String[]) -> access$900
    920:920:java.io.File getCleanFile(int) -> getCleanFile
    924:924:java.io.File getDirtyFile(int) -> getDirtyFile
    893:897:java.lang.String getLengths() -> getLengths
    916:916:java.io.IOException invalidLengths(java.lang.String[]) -> invalidLengths
    902:913:void setLengths(java.lang.String[]) -> setLengths
com.bumptech.glide.disklrucache.DiskLruCache$Value -> com.bumptech.glide.disklrucache.DiskLruCache$Value:
    720:720:void <init>(com.bumptech.glide.disklrucache.DiskLruCache,java.lang.String,long,java.io.File[],long[],com.bumptech.glide.disklrucache.DiskLruCache$1) -> <init>
    726:731:void <init>(com.bumptech.glide.disklrucache.DiskLruCache,java.lang.String,long,java.io.File[],long[]) -> <init>
    743:743:java.io.File getFile(int) -> getFile
com.bumptech.glide.disklrucache.StrictLineReader -> com.bumptech.glide.disklrucache.StrictLineReader:
    72:73:void <init>(java.io.InputStream,java.nio.charset.Charset) -> <init>
    86:100:void <init>(java.io.InputStream,int,java.nio.charset.Charset) -> <init>
    45:45:java.nio.charset.Charset access$000(com.bumptech.glide.disklrucache.StrictLineReader) -> access$000
    109:115:void close() -> close
    188:194:void fillBuf() -> fillBuf
    180:180:boolean hasUnterminatedLine() -> hasUnterminatedLine
    126:176:java.lang.String readLine() -> readLine
com.bumptech.glide.disklrucache.StrictLineReader$1 -> com.bumptech.glide.disklrucache.StrictLineReader$1:
    148:148:void <init>(com.bumptech.glide.disklrucache.StrictLineReader,int) -> <init>
    151:155:java.lang.String toString() -> toString
com.bumptech.glide.disklrucache.Util -> com.bumptech.glide.disklrucache.Util:
    28:29:void <clinit>() -> <clinit>
    68:76:void closeQuietly(java.io.Closeable) -> closeQuietly
    53:65:void deleteContents(java.io.File) -> deleteContents
com.bumptech.glide.gifdecoder.GifFrame -> com.bumptech.glide.gifdecoder.GifFrame:
    13:13:void <init>() -> <init>
com.bumptech.glide.gifdecoder.GifHeader -> com.bumptech.glide.gifdecoder.GifHeader:
    15:51:void <init>() -> <init>
    54:54:int getHeight() -> getHeight
    62:62:int getNumFrames() -> getNumFrames
    70:70:int getStatus() -> getStatus
    58:58:int getWidth() -> getWidth
com.bumptech.glide.gifdecoder.GifHeaderParser -> com.bumptech.glide.gifdecoder.GifHeaderParser:
    21:125:void <init>() -> <init>
    146:148:void clear() -> clear
    513:513:boolean err() -> err
    159:174:com.bumptech.glide.gifdecoder.GifHeader parseHeader() -> parseHeader
    495:501:int read() -> read
    303:344:void readBitmap() -> readBitmap
    470:489:void readBlock() -> readBlock
    416:441:int[] readColorTable(int) -> readColorTable
    193:194:void readContents() -> readContents
    201:257:void readContents(int) -> readContents
    264:296:void readGraphicControlExt() -> readGraphicControlExt
    366:379:void readHeader() -> readHeader
    386:406:void readLSD() -> readLSD
    351:359:void readNetscapeExt() -> readNetscapeExt
    509:509:int readShort() -> readShort
    151:155:void reset() -> reset
    128:132:com.bumptech.glide.gifdecoder.GifHeaderParser setData(java.nio.ByteBuffer) -> setData
    460:464:void skip() -> skip
    449:452:void skipImageData() -> skipImageData
com.bumptech.glide.gifdecoder.StandardGifDecoder -> com.bumptech.glide.gifdecoder.StandardGifDecoder:
    63:63:void <clinit>() -> <clinit>
    132:134:void <init>(com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.gifdecoder.GifHeader,java.nio.ByteBuffer,int) -> <init>
    87:140:void <init>(com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider) -> <init>
    165:166:void advance() -> advance
    647:684:int averageColorsNear(int,int,int) -> averageColorsNear
    328:344:void clear() -> clear
    550:642:void copyCopyIntoScratchRobust(com.bumptech.glide.gifdecoder.GifFrame) -> copyCopyIntoScratchRobust
    503:547:void copyIntoScratchFast(com.bumptech.glide.gifdecoder.GifFrame) -> copyIntoScratchFast
    695:821:void decodeBitmapData(com.bumptech.glide.gifdecoder.GifFrame) -> decodeBitmapData
    228:228:int getByteSize() -> getByteSize
    193:193:int getCurrentFrameIndex() -> getCurrentFrameIndex
    155:155:java.nio.ByteBuffer getData() -> getData
    170:174:int getDelay(int) -> getDelay
    188:188:int getFrameCount() -> getFrameCount
    845:849:android.graphics.Bitmap getNextBitmap() -> getNextBitmap
    179:183:int getNextDelay() -> getNextDelay
    233:291:android.graphics.Bitmap getNextFrame() -> getNextFrame
    836:841:int readBlock() -> readBlock
    827:827:int readByte() -> readByte
    198:199:void resetFrameIndex() -> resetFrameIndex
    358:388:void setData(com.bumptech.glide.gifdecoder.GifHeader,java.nio.ByteBuffer,int) -> setData
    411:417:void setDefaultBitmapConfig(android.graphics.Bitmap$Config) -> setDefaultBitmapConfig
    425:499:android.graphics.Bitmap setPixels(com.bumptech.glide.gifdecoder.GifFrame,com.bumptech.glide.gifdecoder.GifFrame) -> setPixels
com.bumptech.glide.load.DataSource -> com.bumptech.glide.load.DataSource:
    4:17:void <clinit>() -> <clinit>
    4:4:void <init>(java.lang.String,int) -> <init>
    4:4:com.bumptech.glide.load.DataSource valueOf(java.lang.String) -> valueOf
    4:4:com.bumptech.glide.load.DataSource[] values() -> values
com.bumptech.glide.load.DecodeFormat -> com.bumptech.glide.load.DecodeFormat:
    12:43:void <clinit>() -> <clinit>
    12:12:void <init>(java.lang.String,int) -> <init>
    12:12:com.bumptech.glide.load.DecodeFormat valueOf(java.lang.String) -> valueOf
    12:12:com.bumptech.glide.load.DecodeFormat[] values() -> values
com.bumptech.glide.load.EncodeStrategy -> com.bumptech.glide.load.EncodeStrategy:
    6:17:void <clinit>() -> <clinit>
    6:6:void <init>(java.lang.String,int) -> <init>
    6:6:com.bumptech.glide.load.EncodeStrategy valueOf(java.lang.String) -> valueOf
    6:6:com.bumptech.glide.load.EncodeStrategy[] values() -> values
com.bumptech.glide.load.HttpException -> com.bumptech.glide.load.HttpException:
    22:23:void <init>(int) -> <init>
    35:36:void <init>(java.lang.String,int) -> <init>
    39:41:void <init>(java.lang.String,int,java.lang.Throwable) -> <init>
com.bumptech.glide.load.ImageHeaderParser$ImageType -> com.bumptech.glide.load.ImageHeaderParser$ImageType:
    21:34:void <clinit>() -> <clinit>
    38:40:void <init>(java.lang.String,int,boolean) -> <init>
    43:43:boolean hasAlpha() -> hasAlpha
    21:21:com.bumptech.glide.load.ImageHeaderParser$ImageType valueOf(java.lang.String) -> valueOf
    21:21:com.bumptech.glide.load.ImageHeaderParser$ImageType[] values() -> values
com.bumptech.glide.load.ImageHeaderParserUtils -> com.bumptech.glide.load.ImageHeaderParserUtils:
    132:142:int getOrientation(java.util.List,java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> getOrientation
    162:162:int getOrientation(java.util.List,com.bumptech.glide.load.data.ParcelFileDescriptorRewinder,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> getOrientation
    194:202:int getOrientationInternal(java.util.List,com.bumptech.glide.load.ImageHeaderParserUtils$OrientationReader) -> getOrientationInternal
    32:42:com.bumptech.glide.load.ImageHeaderParser$ImageType getType(java.util.List,java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> getType
    61:65:com.bumptech.glide.load.ImageHeaderParser$ImageType getType(java.util.List,java.nio.ByteBuffer) -> getType
    82:82:com.bumptech.glide.load.ImageHeaderParser$ImageType getType(java.util.List,com.bumptech.glide.load.data.ParcelFileDescriptorRewinder,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> getType
    115:123:com.bumptech.glide.load.ImageHeaderParser$ImageType getTypeInternal(java.util.List,com.bumptech.glide.load.ImageHeaderParserUtils$TypeReader) -> getTypeInternal
com.bumptech.glide.load.ImageHeaderParserUtils$1 -> com.bumptech.glide.load.ImageHeaderParserUtils$1:
    44:44:void <init>(java.io.InputStream) -> <init>
    48:50:com.bumptech.glide.load.ImageHeaderParser$ImageType getType(com.bumptech.glide.load.ImageHeaderParser) -> getType
com.bumptech.glide.load.ImageHeaderParserUtils$2 -> com.bumptech.glide.load.ImageHeaderParserUtils$2:
    67:67:void <init>(java.nio.ByteBuffer) -> <init>
    70:70:com.bumptech.glide.load.ImageHeaderParser$ImageType getType(com.bumptech.glide.load.ImageHeaderParser) -> getType
com.bumptech.glide.load.ImageHeaderParserUtils$3 -> com.bumptech.glide.load.ImageHeaderParserUtils$3:
    84:84:void <init>(com.bumptech.glide.load.data.ParcelFileDescriptorRewinder,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    89:105:com.bumptech.glide.load.ImageHeaderParser$ImageType getType(com.bumptech.glide.load.ImageHeaderParser) -> getType
com.bumptech.glide.load.ImageHeaderParserUtils$4 -> com.bumptech.glide.load.ImageHeaderParserUtils$4:
    144:144:void <init>(java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    148:150:int getOrientation(com.bumptech.glide.load.ImageHeaderParser) -> getOrientation
com.bumptech.glide.load.ImageHeaderParserUtils$5 -> com.bumptech.glide.load.ImageHeaderParserUtils$5:
    164:164:void <init>(com.bumptech.glide.load.data.ParcelFileDescriptorRewinder,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    169:185:int getOrientation(com.bumptech.glide.load.ImageHeaderParser) -> getOrientation
com.bumptech.glide.load.Key -> com.bumptech.glide.load.Key:
    17:17:void <clinit>() -> <clinit>
com.bumptech.glide.load.Option -> com.bumptech.glide.load.Option:
    24:24:void <clinit>() -> <clinit>
    90:94:void <init>(java.lang.String,java.lang.Object,com.bumptech.glide.load.Option$CacheKeyUpdater) -> <init>
    86:86:com.bumptech.glide.load.Option disk(java.lang.String,java.lang.Object,com.bumptech.glide.load.Option$CacheKeyUpdater) -> disk
    138:138:com.bumptech.glide.load.Option$CacheKeyUpdater emptyUpdater() -> emptyUpdater
    123:127:boolean equals(java.lang.Object) -> equals
    101:101:java.lang.Object getDefaultValue() -> getDefaultValue
    115:118:byte[] getKeyBytes() -> getKeyBytes
    132:132:int hashCode() -> hashCode
    47:47:com.bumptech.glide.load.Option memory(java.lang.String) -> memory
    59:59:com.bumptech.glide.load.Option memory(java.lang.String,java.lang.Object) -> memory
    143:143:java.lang.String toString() -> toString
    110:111:void update(java.lang.Object,java.security.MessageDigest) -> update
com.bumptech.glide.load.Option$1 -> com.bumptech.glide.load.Option$1:
    25:25:void <init>() -> <init>
    30:30:void update(byte[],java.lang.Object,java.security.MessageDigest) -> update
com.bumptech.glide.load.Options -> com.bumptech.glide.load.Options:
    11:12:void <init>() -> <init>
    32:36:boolean equals(java.lang.Object) -> equals
    27:27:java.lang.Object get(com.bumptech.glide.load.Option) -> get
    41:41:int hashCode() -> hashCode
    15:16:void putAll(com.bumptech.glide.load.Options) -> putAll
    20:21:com.bumptech.glide.load.Options set(com.bumptech.glide.load.Option,java.lang.Object) -> set
    55:55:java.lang.String toString() -> toString
    46:51:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
    61:62:void updateDiskCacheKey(com.bumptech.glide.load.Option,java.lang.Object,java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.PreferredColorSpace -> com.bumptech.glide.load.PreferredColorSpace:
    31:35:void <clinit>() -> <clinit>
    31:31:void <init>(java.lang.String,int) -> <init>
    31:31:com.bumptech.glide.load.PreferredColorSpace valueOf(java.lang.String) -> valueOf
    31:31:com.bumptech.glide.load.PreferredColorSpace[] values() -> values
com.bumptech.glide.load.data.AssetFileDescriptorLocalUriFetcher -> com.bumptech.glide.load.data.AssetFileDescriptorLocalUriFetcher:
    14:15:void <init>(android.content.ContentResolver,android.net.Uri) -> <init>
    11:11:void close(java.lang.Object) -> close
    29:30:void close(android.content.res.AssetFileDescriptor) -> close
    35:35:java.lang.Class getDataClass() -> getDataClass
    11:11:java.lang.Object loadResource(android.net.Uri,android.content.ContentResolver) -> loadResource
    20:24:android.content.res.AssetFileDescriptor loadResource(android.net.Uri,android.content.ContentResolver) -> loadResource
com.bumptech.glide.load.data.AssetPathFetcher -> com.bumptech.glide.load.data.AssetPathFetcher:
    24:27:void <init>(android.content.res.AssetManager,java.lang.String) -> <init>
    57:57:void cancel() -> cancel
    44:52:void cleanup() -> cleanup
    62:62:com.bumptech.glide.load.DataSource getDataSource() -> getDataSource
    32:40:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback) -> loadData
com.bumptech.glide.load.data.BufferedOutputStream -> com.bumptech.glide.load.data.BufferedOutputStream:
    20:21:void <init>(java.io.OutputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    24:28:void <init>(java.io.OutputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,int) -> <init>
    88:93:void close() -> close
    68:70:void flush() -> flush
    73:77:void flushBuffer() -> flushBuffer
    80:83:void maybeFlushBuffer() -> maybeFlushBuffer
    96:100:void release() -> release
    32:34:void write(int) -> write
    38:39:void write(byte[]) -> write
    43:64:void write(byte[],int,int) -> write
com.bumptech.glide.load.data.DataRewinderRegistry -> com.bumptech.glide.load.data.DataRewinderRegistry:
    14:14:void <clinit>() -> <clinit>
    12:13:void <init>() -> <init>
    35:50:com.bumptech.glide.load.data.DataRewinder build(java.lang.Object) -> build
    29:31:void register(com.bumptech.glide.load.data.DataRewinder$Factory) -> register
com.bumptech.glide.load.data.DataRewinderRegistry$1 -> com.bumptech.glide.load.data.DataRewinderRegistry$1:
    15:15:void <init>() -> <init>
    19:19:com.bumptech.glide.load.data.DataRewinder build(java.lang.Object) -> build
    25:25:java.lang.Class getDataClass() -> getDataClass
com.bumptech.glide.load.data.DataRewinderRegistry$DefaultRewinder -> com.bumptech.glide.load.data.DataRewinderRegistry$DefaultRewinder:
    56:58:void <init>(java.lang.Object) -> <init>
    69:69:void cleanup() -> cleanup
    63:63:java.lang.Object rewindAndGet() -> rewindAndGet
com.bumptech.glide.load.data.ExifOrientationStream -> com.bumptech.glide.load.data.ExifOrientationStream:
    19:64:void <clinit>() -> <clinit>
    69:74:void <init>(java.io.InputStream,int) -> <init>
    85:85:void mark(int) -> mark
    78:78:boolean markSupported() -> markSupported
    91:101:int read() -> read
    107:121:int read(byte[],int,int) -> read
    138:138:void reset() -> reset
    126:131:long skip(long) -> skip
com.bumptech.glide.load.data.FileDescriptorAssetPathFetcher -> com.bumptech.glide.load.data.FileDescriptorAssetPathFetcher:
    11:12:void <init>(android.content.res.AssetManager,java.lang.String) -> <init>
    9:9:void close(java.lang.Object) -> close
    22:23:void close(android.os.ParcelFileDescriptor) -> close
    28:28:java.lang.Class getDataClass() -> getDataClass
    9:9:java.lang.Object loadResource(android.content.res.AssetManager,java.lang.String) -> loadResource
    17:17:android.os.ParcelFileDescriptor loadResource(android.content.res.AssetManager,java.lang.String) -> loadResource
com.bumptech.glide.load.data.FileDescriptorLocalUriFetcher -> com.bumptech.glide.load.data.FileDescriptorLocalUriFetcher:
    14:15:void <init>(android.content.ContentResolver,android.net.Uri) -> <init>
    12:12:void close(java.lang.Object) -> close
    29:30:void close(android.os.ParcelFileDescriptor) -> close
    35:35:java.lang.Class getDataClass() -> getDataClass
    12:12:java.lang.Object loadResource(android.net.Uri,android.content.ContentResolver) -> loadResource
    20:24:android.os.ParcelFileDescriptor loadResource(android.net.Uri,android.content.ContentResolver) -> loadResource
com.bumptech.glide.load.data.HttpUrlFetcher -> com.bumptech.glide.load.data.HttpUrlFetcher:
    29:29:void <clinit>() -> <clinit>
    43:44:void <init>(com.bumptech.glide.load.model.GlideUrl,int) -> <init>
    47:51:void <init>(com.bumptech.glide.load.model.GlideUrl,int,com.bumptech.glide.load.data.HttpUrlFetcher$HttpUrlConnectionFactory) -> <init>
    149:163:java.net.HttpURLConnection buildAndConfigureConnection(java.net.URL,java.util.Map) -> buildAndConfigureConnection
    214:215:void cancel() -> cancel
    197:208:void cleanup() -> cleanup
    220:220:java.lang.Class getDataClass() -> getDataClass
    226:226:com.bumptech.glide.load.DataSource getDataSource() -> getDataSource
    136:142:int getHttpStatusCodeOrInvalid(java.net.HttpURLConnection) -> getHttpStatusCodeOrInvalid
    179:192:java.io.InputStream getStreamForSuccessfulRequest(java.net.HttpURLConnection) -> getStreamForSuccessfulRequest
    168:168:boolean isHttpOk(int) -> isHttpOk
    173:173:boolean isHttpRedirect(int) -> isHttpRedirect
    56:70:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback) -> loadData
    74:129:java.io.InputStream loadDataWithRedirects(java.net.URL,int,java.net.URL,java.util.Map) -> loadDataWithRedirects
com.bumptech.glide.load.data.HttpUrlFetcher$DefaultHttpUrlConnectionFactory -> com.bumptech.glide.load.data.HttpUrlFetcher$DefaultHttpUrlConnectionFactory:
    236:236:void <init>() -> <init>
    240:240:java.net.HttpURLConnection build(java.net.URL) -> build
com.bumptech.glide.load.data.InputStreamRewinder -> com.bumptech.glide.load.data.InputStreamRewinder:
    21:26:void <init>(java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    37:38:void cleanup() -> cleanup
    41:42:void fixMarkLimits() -> fixMarkLimits
    14:14:java.lang.Object rewindAndGet() -> rewindAndGet
    31:32:java.io.InputStream rewindAndGet() -> rewindAndGet
com.bumptech.glide.load.data.InputStreamRewinder$Factory -> com.bumptech.glide.load.data.InputStreamRewinder$Factory:
    51:53:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    48:48:com.bumptech.glide.load.data.DataRewinder build(java.lang.Object) -> build
    58:58:com.bumptech.glide.load.data.DataRewinder build(java.io.InputStream) -> build
    64:64:java.lang.Class getDataClass() -> getDataClass
com.bumptech.glide.load.data.LocalUriFetcher -> com.bumptech.glide.load.data.LocalUriFetcher:
    35:38:void <init>(android.content.ContentResolver,android.net.Uri) -> <init>
    68:68:void cancel() -> cancel
    56:63:void cleanup() -> cleanup
    73:73:com.bumptech.glide.load.DataSource getDataSource() -> getDataSource
    44:52:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback) -> loadData
com.bumptech.glide.load.data.ParcelFileDescriptorRewinder -> com.bumptech.glide.load.data.ParcelFileDescriptorRewinder:
    26:28:void <init>(android.os.ParcelFileDescriptor) -> <init>
    40:40:void cleanup() -> cleanup
    22:22:boolean isSupported() -> isSupported
    16:16:java.lang.Object rewindAndGet() -> rewindAndGet
    34:34:android.os.ParcelFileDescriptor rewindAndGet() -> rewindAndGet
com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$Factory -> com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$Factory:
    46:46:void <init>() -> <init>
    45:45:com.bumptech.glide.load.data.DataRewinder build(java.lang.Object) -> build
    52:52:com.bumptech.glide.load.data.DataRewinder build(android.os.ParcelFileDescriptor) -> build
    58:58:java.lang.Class getDataClass() -> getDataClass
com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$InternalRewinder -> com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$InternalRewinder:
    71:73:void <init>(android.os.ParcelFileDescriptor) -> <init>
    77:81:android.os.ParcelFileDescriptor rewind() -> rewind
com.bumptech.glide.load.data.StreamAssetPathFetcher -> com.bumptech.glide.load.data.StreamAssetPathFetcher:
    11:12:void <init>(android.content.res.AssetManager,java.lang.String) -> <init>
    9:9:void close(java.lang.Object) -> close
    21:22:void close(java.io.InputStream) -> close
    27:27:java.lang.Class getDataClass() -> getDataClass
    9:9:java.lang.Object loadResource(android.content.res.AssetManager,java.lang.String) -> loadResource
    16:16:java.io.InputStream loadResource(android.content.res.AssetManager,java.lang.String) -> loadResource
com.bumptech.glide.load.data.StreamLocalUriFetcher -> com.bumptech.glide.load.data.StreamLocalUriFetcher:
    34:41:void <clinit>() -> <clinit>
    44:45:void <init>(android.content.ContentResolver,android.net.Uri) -> <init>
    13:13:void close(java.lang.Object) -> close
    85:86:void close(java.io.InputStream) -> close
    91:91:java.lang.Class getDataClass() -> getDataClass
    13:13:java.lang.Object loadResource(android.net.Uri,android.content.ContentResolver) -> loadResource
    50:54:java.io.InputStream loadResource(android.net.Uri,android.content.ContentResolver) -> loadResource
    59:74:java.io.InputStream loadResourceFromUri(android.net.Uri,android.content.ContentResolver) -> loadResourceFromUri
    79:79:java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri) -> openContactPhotoInputStream
com.bumptech.glide.load.data.mediastore.FileService -> com.bumptech.glide.load.data.mediastore.FileService:
    5:5:void <init>() -> <init>
    7:7:boolean exists(java.io.File) -> exists
    15:15:java.io.File get(java.lang.String) -> get
    11:11:long length(java.io.File) -> length
com.bumptech.glide.load.data.mediastore.MediaStoreUtil -> com.bumptech.glide.load.data.mediastore.MediaStoreUtil:
    32:32:boolean isMediaStoreImageUri(android.net.Uri) -> isMediaStoreImageUri
    18:20:boolean isMediaStoreUri(android.net.Uri) -> isMediaStoreUri
    28:28:boolean isMediaStoreVideoUri(android.net.Uri) -> isMediaStoreVideoUri
    36:36:boolean isThumbnailSize(int,int) -> isThumbnailSize
    24:24:boolean isVideoUri(android.net.Uri) -> isVideoUri
com.bumptech.glide.load.data.mediastore.ThumbFetcher -> com.bumptech.glide.load.data.mediastore.ThumbFetcher:
    52:55:void <init>(android.net.Uri,com.bumptech.glide.load.data.mediastore.ThumbnailStreamOpener) -> <init>
    41:48:com.bumptech.glide.load.data.mediastore.ThumbFetcher build(android.content.Context,android.net.Uri,com.bumptech.glide.load.data.mediastore.ThumbnailQuery) -> build
    33:33:com.bumptech.glide.load.data.mediastore.ThumbFetcher buildImageFetcher(android.content.Context,android.net.Uri) -> buildImageFetcher
    37:37:com.bumptech.glide.load.data.mediastore.ThumbFetcher buildVideoFetcher(android.content.Context,android.net.Uri) -> buildVideoFetcher
    99:99:void cancel() -> cancel
    87:94:void cleanup() -> cleanup
    104:104:java.lang.Class getDataClass() -> getDataClass
    110:110:com.bumptech.glide.load.DataSource getDataSource() -> getDataSource
    61:69:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback) -> loadData
    72:82:java.io.InputStream openThumbInputStream() -> openThumbInputStream
com.bumptech.glide.load.data.mediastore.ThumbFetcher$ImageThumbnailQuery -> com.bumptech.glide.load.data.mediastore.ThumbFetcher$ImageThumbnailQuery:
    150:150:void <clinit>() -> <clinit>
    146:148:void <init>(android.content.ContentResolver) -> <init>
    163:164:android.database.Cursor query(android.net.Uri) -> query
com.bumptech.glide.load.data.mediastore.ThumbFetcher$VideoThumbnailQuery -> com.bumptech.glide.load.data.mediastore.ThumbFetcher$VideoThumbnailQuery:
    121:121:void <clinit>() -> <clinit>
    117:119:void <init>(android.content.ContentResolver) -> <init>
    132:133:android.database.Cursor query(android.net.Uri) -> query
com.bumptech.glide.load.data.mediastore.ThumbnailStreamOpener -> com.bumptech.glide.load.data.mediastore.ThumbnailStreamOpener:
    21:21:void <clinit>() -> <clinit>
    34:35:void <init>(java.util.List,com.bumptech.glide.load.data.mediastore.ThumbnailQuery,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,android.content.ContentResolver) -> <init>
    42:48:void <init>(java.util.List,com.bumptech.glide.load.data.mediastore.FileService,com.bumptech.glide.load.data.mediastore.ThumbnailQuery,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,android.content.ContentResolver) -> <init>
    51:69:int getOrientation(android.net.Uri) -> getOrientation
    97:112:java.lang.String getPath(android.net.Uri) -> getPath
    118:118:boolean isValid(java.io.File) -> isValid
    73:91:java.io.InputStream open(android.net.Uri) -> open
com.bumptech.glide.load.engine.ActiveResources -> com.bumptech.glide.load.engine.ActiveResources:
    32:49:void <init>(boolean) -> <init>
    23:64:void <init>(boolean,java.util.concurrent.Executor) -> <init>
    74:83:void activate(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource) -> activate
    126:141:void cleanReferenceQueue() -> cleanReferenceQueue
    109:121:void cleanupActiveReference(com.bumptech.glide.load.engine.ActiveResources$ResourceWeakReference) -> cleanupActiveReference
    85:90:void deactivate(com.bumptech.glide.load.Key) -> deactivate
    93:103:com.bumptech.glide.load.engine.EngineResource get(com.bumptech.glide.load.Key) -> get
    67:72:void setListener(com.bumptech.glide.load.engine.EngineResource$ResourceListener) -> setListener
com.bumptech.glide.load.engine.ActiveResources$1 -> com.bumptech.glide.load.engine.ActiveResources$1:
    35:35:void <init>() -> <init>
    38:38:java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.bumptech.glide.load.engine.ActiveResources$1$1 -> com.bumptech.glide.load.engine.ActiveResources$1$1:
    39:39:void <init>(com.bumptech.glide.load.engine.ActiveResources$1,java.lang.Runnable) -> <init>
    42:44:void run() -> run
com.bumptech.glide.load.engine.ActiveResources$2 -> com.bumptech.glide.load.engine.ActiveResources$2:
    58:58:void <init>(com.bumptech.glide.load.engine.ActiveResources) -> <init>
    61:62:void run() -> run
com.bumptech.glide.load.engine.ActiveResources$ResourceWeakReference -> com.bumptech.glide.load.engine.ActiveResources$ResourceWeakReference:
    184:191:void <init>(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource,java.lang.ref.ReferenceQueue,boolean) -> <init>
    194:196:void reset() -> reset
com.bumptech.glide.load.engine.CallbackException -> com.bumptech.glide.load.engine.CallbackException:
    13:14:void <init>(java.lang.Throwable) -> <init>
com.bumptech.glide.load.engine.DataCacheGenerator -> com.bumptech.glide.load.engine.DataCacheGenerator:
    33:34:void <init>(com.bumptech.glide.load.engine.DecodeHelper,com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback) -> <init>
    22:42:void <init>(java.util.List,com.bumptech.glide.load.engine.DecodeHelper,com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback) -> <init>
    86:90:void cancel() -> cancel
    81:81:boolean hasNextModelLoader() -> hasNextModelLoader
    94:95:void onDataReady(java.lang.Object) -> onDataReady
    99:100:void onLoadFailed(java.lang.Exception) -> onLoadFailed
    46:77:boolean startNext() -> startNext
com.bumptech.glide.load.engine.DataCacheKey -> com.bumptech.glide.load.engine.DataCacheKey:
    13:16:void <init>(com.bumptech.glide.load.Key,com.bumptech.glide.load.Key) -> <init>
    24:28:boolean equals(java.lang.Object) -> equals
    33:35:int hashCode() -> hashCode
    40:40:java.lang.String toString() -> toString
    45:47:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.engine.DataCacheWriter -> com.bumptech.glide.load.engine.DataCacheWriter:
    22:26:void <init>(com.bumptech.glide.load.Encoder,java.lang.Object,com.bumptech.glide.load.Options) -> <init>
    30:30:boolean write(java.io.File) -> write
com.bumptech.glide.load.engine.DecodeHelper -> com.bumptech.glide.load.engine.DecodeHelper:
    23:26:void <init>() -> <init>
    78:92:void clear() -> clear
    123:123:com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool getArrayPool() -> getArrayPool
    221:238:java.util.List getCacheKeys() -> getCacheKeys
    95:95:com.bumptech.glide.load.engine.cache.DiskCache getDiskCache() -> getDiskCache
    99:99:com.bumptech.glide.load.engine.DiskCacheStrategy getDiskCacheStrategy() -> getDiskCacheStrategy
    119:119:int getHeight() -> getHeight
    204:217:java.util.List getLoadData() -> getLoadData
    145:145:com.bumptech.glide.load.engine.LoadPath getLoadPath(java.lang.Class) -> getLoadPath
    131:131:java.lang.Class getModelClass() -> getModelClass
    188:188:java.util.List getModelLoaders(java.io.File) -> getModelLoaders
    107:107:com.bumptech.glide.load.Options getOptions() -> getOptions
    103:103:com.bumptech.glide.Priority getPriority() -> getPriority
    135:137:java.util.List getRegisteredResourceClasses() -> getRegisteredResourceClasses
    183:183:com.bumptech.glide.load.ResourceEncoder getResultEncoder(com.bumptech.glide.load.engine.Resource) -> getResultEncoder
    111:111:com.bumptech.glide.load.Key getSignature() -> getSignature
    242:242:com.bumptech.glide.load.Encoder getSourceEncoder(java.lang.Object) -> getSourceEncoder
    127:127:java.lang.Class getTranscodeClass() -> getTranscodeClass
    154:175:com.bumptech.glide.load.Transformation getTransformation(java.lang.Class) -> getTransformation
    115:115:int getWidth() -> getWidth
    141:141:boolean hasLoadPath(java.lang.Class) -> hasLoadPath
    61:75:void init(com.bumptech.glide.GlideContext,java.lang.Object,com.bumptech.glide.load.Key,int,int,com.bumptech.glide.load.engine.DiskCacheStrategy,java.lang.Class,java.lang.Class,com.bumptech.glide.Priority,com.bumptech.glide.load.Options,java.util.Map,boolean,boolean,com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider) -> init
    179:179:boolean isResourceEncoderAvailable(com.bumptech.glide.load.engine.Resource) -> isResourceEncoderAvailable
    149:149:boolean isScaleOnlyOrNoTransform() -> isScaleOnlyOrNoTransform
    192:200:boolean isSourceKey(com.bumptech.glide.load.Key) -> isSourceKey
com.bumptech.glide.load.engine.DecodeJob -> com.bumptech.glide.load.engine.DecodeJob:
    45:84:void <init>(com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider,androidx.core.util.Pools$Pool) -> <init>
    212:217:void cancel() -> cancel
    38:38:int compareTo(java.lang.Object) -> compareTo
    200:204:int compareTo(com.bumptech.glide.load.engine.DecodeJob) -> compareTo
    475:485:com.bumptech.glide.load.engine.Resource decodeFromData(com.bumptech.glide.load.data.DataFetcher,java.lang.Object,com.bumptech.glide.load.DataSource) -> decodeFromData
    492:493:com.bumptech.glide.load.engine.Resource decodeFromFetcher(java.lang.Object,com.bumptech.glide.load.DataSource) -> decodeFromFetcher
    417:440:void decodeFromRetrievedData() -> decodeFromRetrievedData
    291:301:com.bumptech.glide.load.engine.DataFetcherGenerator getNextGenerator() -> getNextGenerator
    352:368:com.bumptech.glide.load.engine.DecodeJob$Stage getNextStage(com.bumptech.glide.load.engine.DecodeJob$Stage) -> getNextStage
    498:519:com.bumptech.glide.load.Options getOptionsWithHardwareConfig(com.bumptech.glide.load.DataSource) -> getOptionsWithHardwareConfig
    208:208:int getPriority() -> getPriority
    556:556:com.bumptech.glide.util.pool.StateVerifier getVerifier() -> getVerifier
    104:132:com.bumptech.glide.load.engine.DecodeJob init(com.bumptech.glide.GlideContext,java.lang.Object,com.bumptech.glide.load.engine.EngineKey,com.bumptech.glide.load.Key,int,int,java.lang.Class,java.lang.Class,com.bumptech.glide.Priority,com.bumptech.glide.load.engine.DiskCacheStrategy,java.util.Map,boolean,boolean,boolean,com.bumptech.glide.load.Options,com.bumptech.glide.load.engine.DecodeJob$Callback,int) -> init
    537:538:void logWithTimeAndKey(java.lang.String,long) -> logWithTimeAndKey
    541:551:void logWithTimeAndKey(java.lang.String,long,java.lang.String) -> logWithTimeAndKey
    338:340:void notifyComplete(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.DataSource,boolean) -> notifyComplete
    444:470:void notifyEncodeAndRelease(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.DataSource,boolean) -> notifyEncodeAndRelease
    330:334:void notifyFailed() -> notifyFailed
    404:414:void onDataFetcherFailed(com.bumptech.glide.load.Key,java.lang.Exception,com.bumptech.glide.load.data.DataFetcher,com.bumptech.glide.load.DataSource) -> onDataFetcherFailed
    381:399:void onDataFetcherReady(com.bumptech.glide.load.Key,java.lang.Object,com.bumptech.glide.load.data.DataFetcher,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.Key) -> onDataFetcherReady
    161:164:void onEncodeComplete() -> onEncodeComplete
    168:171:void onLoadFailed() -> onLoadFailed
    563:617:com.bumptech.glide.load.engine.Resource onResourceDecoded(com.bumptech.glide.load.DataSource,com.bumptech.glide.load.engine.Resource) -> onResourceDecoded
    151:154:void release(boolean) -> release
    174:196:void releaseInternal() -> releaseInternal
    374:376:void reschedule() -> reschedule
    226:270:void run() -> run
    306:327:void runGenerators() -> runGenerators
    525:532:com.bumptech.glide.load.engine.Resource runLoadPath(java.lang.Object,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.engine.LoadPath) -> runLoadPath
    273:288:void runWrapped() -> runWrapped
    343:349:void setNotifiedOrThrow() -> setNotifiedOrThrow
    140:141:boolean willDecodeFromCache() -> willDecodeFromCache
com.bumptech.glide.load.engine.DecodeJob$1 -> com.bumptech.glide.load.engine.DecodeJob$1:
    273:593:void <clinit>() -> <clinit>
com.bumptech.glide.load.engine.DecodeJob$DecodeCallback -> com.bumptech.glide.load.engine.DecodeJob$DecodeCallback:
    625:627:void <init>(com.bumptech.glide.load.engine.DecodeJob,com.bumptech.glide.load.DataSource) -> <init>
    632:632:com.bumptech.glide.load.engine.Resource onResourceDecoded(com.bumptech.glide.load.engine.Resource) -> onResourceDecoded
com.bumptech.glide.load.engine.DecodeJob$DeferredEncodeManager -> com.bumptech.glide.load.engine.DecodeJob$DeferredEncodeManager:
    683:683:void <init>() -> <init>
    710:713:void clear() -> clear
    694:703:void encode(com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider,com.bumptech.glide.load.Options) -> encode
    706:706:boolean hasResourceToEncode() -> hasResourceToEncode
    688:691:void init(com.bumptech.glide.load.Key,com.bumptech.glide.load.ResourceEncoder,com.bumptech.glide.load.engine.LockedResource) -> init
com.bumptech.glide.load.engine.DecodeJob$ReleaseManager -> com.bumptech.glide.load.engine.DecodeJob$ReleaseManager:
    645:645:void <init>() -> <init>
    669:669:boolean isComplete(boolean) -> isComplete
    652:654:boolean onEncodeComplete() -> onEncodeComplete
    657:659:boolean onFailed() -> onFailed
    647:649:boolean release(boolean) -> release
    662:666:void reset() -> reset
com.bumptech.glide.load.engine.DecodeJob$RunReason -> com.bumptech.glide.load.engine.DecodeJob$RunReason:
    731:740:void <clinit>() -> <clinit>
    731:731:void <init>(java.lang.String,int) -> <init>
    731:731:com.bumptech.glide.load.engine.DecodeJob$RunReason valueOf(java.lang.String) -> valueOf
    731:731:com.bumptech.glide.load.engine.DecodeJob$RunReason[] values() -> values
com.bumptech.glide.load.engine.DecodeJob$Stage -> com.bumptech.glide.load.engine.DecodeJob$Stage:
    744:756:void <clinit>() -> <clinit>
    744:744:void <init>(java.lang.String,int) -> <init>
    744:744:com.bumptech.glide.load.engine.DecodeJob$Stage valueOf(java.lang.String) -> valueOf
    744:744:com.bumptech.glide.load.engine.DecodeJob$Stage[] values() -> values
com.bumptech.glide.load.engine.DecodePath -> com.bumptech.glide.load.engine.DecodePath:
    37:50:void <init>(java.lang.Class,java.lang.Class,java.lang.Class,java.util.List,com.bumptech.glide.load.resource.transcode.ResourceTranscoder,androidx.core.util.Pools$Pool) -> <init>
    59:61:com.bumptech.glide.load.engine.Resource decode(com.bumptech.glide.load.data.DataRewinder,int,int,com.bumptech.glide.load.Options,com.bumptech.glide.load.engine.DecodePath$DecodeCallback) -> decode
    68:72:com.bumptech.glide.load.engine.Resource decodeResource(com.bumptech.glide.load.data.DataRewinder,int,int,com.bumptech.glide.load.Options) -> decodeResource
    84:111:com.bumptech.glide.load.engine.Resource decodeResourceWithList(com.bumptech.glide.load.data.DataRewinder,int,int,com.bumptech.glide.load.Options,java.util.List) -> decodeResourceWithList
    116:116:java.lang.String toString() -> toString
com.bumptech.glide.load.engine.DiskCacheStrategy -> com.bumptech.glide.load.engine.DiskCacheStrategy:
    13:120:void <clinit>() -> <clinit>
    7:7:void <init>() -> <init>
com.bumptech.glide.load.engine.DiskCacheStrategy$1 -> com.bumptech.glide.load.engine.DiskCacheStrategy$1:
    14:14:void <init>() -> <init>
    34:34:boolean decodeCachedData() -> decodeCachedData
    29:29:boolean decodeCachedResource() -> decodeCachedResource
    17:17:boolean isDataCacheable(com.bumptech.glide.load.DataSource) -> isDataCacheable
    23:23:boolean isResourceCacheable(boolean,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.EncodeStrategy) -> isResourceCacheable
com.bumptech.glide.load.engine.DiskCacheStrategy$2 -> com.bumptech.glide.load.engine.DiskCacheStrategy$2:
    40:40:void <init>() -> <init>
    59:59:boolean decodeCachedData() -> decodeCachedData
    54:54:boolean decodeCachedResource() -> decodeCachedResource
    43:43:boolean isDataCacheable(com.bumptech.glide.load.DataSource) -> isDataCacheable
    49:49:boolean isResourceCacheable(boolean,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.EncodeStrategy) -> isResourceCacheable
com.bumptech.glide.load.engine.DiskCacheStrategy$3 -> com.bumptech.glide.load.engine.DiskCacheStrategy$3:
    65:65:void <init>() -> <init>
    84:84:boolean decodeCachedData() -> decodeCachedData
    79:79:boolean decodeCachedResource() -> decodeCachedResource
    68:68:boolean isDataCacheable(com.bumptech.glide.load.DataSource) -> isDataCacheable
    74:74:boolean isResourceCacheable(boolean,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.EncodeStrategy) -> isResourceCacheable
com.bumptech.glide.load.engine.DiskCacheStrategy$4 -> com.bumptech.glide.load.engine.DiskCacheStrategy$4:
    90:90:void <init>() -> <init>
    110:110:boolean decodeCachedData() -> decodeCachedData
    105:105:boolean decodeCachedResource() -> decodeCachedResource
    93:93:boolean isDataCacheable(com.bumptech.glide.load.DataSource) -> isDataCacheable
    99:99:boolean isResourceCacheable(boolean,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.EncodeStrategy) -> isResourceCacheable
com.bumptech.glide.load.engine.DiskCacheStrategy$5 -> com.bumptech.glide.load.engine.DiskCacheStrategy$5:
    121:121:void <init>() -> <init>
    142:142:boolean decodeCachedData() -> decodeCachedData
    137:137:boolean decodeCachedResource() -> decodeCachedResource
    124:124:boolean isDataCacheable(com.bumptech.glide.load.DataSource) -> isDataCacheable
    130:130:boolean isResourceCacheable(boolean,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.EncodeStrategy) -> isResourceCacheable
com.bumptech.glide.load.engine.Engine -> com.bumptech.glide.load.engine.Engine:
    35:35:void <clinit>() -> <clinit>
    53:67:void <init>(com.bumptech.glide.load.engine.cache.MemoryCache,com.bumptech.glide.load.engine.cache.DiskCache$Factory,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,boolean) -> <init>
    83:126:void <init>(com.bumptech.glide.load.engine.cache.MemoryCache,com.bumptech.glide.load.engine.cache.DiskCache$Factory,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.Jobs,com.bumptech.glide.load.engine.EngineKeyFactory,com.bumptech.glide.load.engine.ActiveResources,com.bumptech.glide.load.engine.Engine$EngineJobFactory,com.bumptech.glide.load.engine.Engine$DecodeJobFactory,com.bumptech.glide.load.engine.ResourceRecycler,boolean) -> <init>
    345:358:com.bumptech.glide.load.engine.EngineResource getEngineResourceFromCache(com.bumptech.glide.load.Key) -> getEngineResourceFromCache
    175:222:com.bumptech.glide.load.engine.Engine$LoadStatus load(com.bumptech.glide.GlideContext,java.lang.Object,com.bumptech.glide.load.Key,int,int,java.lang.Class,java.lang.Class,com.bumptech.glide.Priority,com.bumptech.glide.load.engine.DiskCacheStrategy,java.util.Map,boolean,boolean,com.bumptech.glide.load.Options,boolean,boolean,boolean,boolean,com.bumptech.glide.request.ResourceCallback,java.util.concurrent.Executor) -> load
    327:332:com.bumptech.glide.load.engine.EngineResource loadFromActiveResources(com.bumptech.glide.load.Key) -> loadFromActiveResources
    336:341:com.bumptech.glide.load.engine.EngineResource loadFromCache(com.bumptech.glide.load.Key) -> loadFromCache
    298:318:com.bumptech.glide.load.engine.EngineResource loadFromMemory(com.bumptech.glide.load.engine.EngineKey,boolean,long) -> loadFromMemory
    322:323:void logWithTimeAndKey(java.lang.String,long,com.bumptech.glide.load.Key) -> logWithTimeAndKey
    382:384:void onEngineJobCancelled(com.bumptech.glide.load.engine.EngineJob,com.bumptech.glide.load.Key) -> onEngineJobCancelled
    373:379:void onEngineJobComplete(com.bumptech.glide.load.engine.EngineJob,com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource) -> onEngineJobComplete
    395:401:void onResourceReleased(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource) -> onResourceReleased
    390:391:void onResourceRemoved(com.bumptech.glide.load.engine.Resource) -> onResourceRemoved
    362:367:void release(com.bumptech.glide.load.engine.Resource) -> release
    248:292:com.bumptech.glide.load.engine.Engine$LoadStatus waitForExistingOrStartNewJob(com.bumptech.glide.GlideContext,java.lang.Object,com.bumptech.glide.load.Key,int,int,java.lang.Class,java.lang.Class,com.bumptech.glide.Priority,com.bumptech.glide.load.engine.DiskCacheStrategy,java.util.Map,boolean,boolean,com.bumptech.glide.load.Options,boolean,boolean,boolean,boolean,com.bumptech.glide.request.ResourceCallback,java.util.concurrent.Executor,com.bumptech.glide.load.engine.EngineKey,long) -> waitForExistingOrStartNewJob
com.bumptech.glide.load.engine.Engine$DecodeJobFactory -> com.bumptech.glide.load.engine.Engine$DecodeJobFactory:
    476:491:void <init>(com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider) -> <init>
    511:512:com.bumptech.glide.load.engine.DecodeJob build(com.bumptech.glide.GlideContext,java.lang.Object,com.bumptech.glide.load.engine.EngineKey,com.bumptech.glide.load.Key,int,int,java.lang.Class,java.lang.Class,com.bumptech.glide.Priority,com.bumptech.glide.load.engine.DiskCacheStrategy,java.util.Map,boolean,boolean,boolean,com.bumptech.glide.load.Options,com.bumptech.glide.load.engine.DecodeJob$Callback) -> build
com.bumptech.glide.load.engine.Engine$DecodeJobFactory$1 -> com.bumptech.glide.load.engine.Engine$DecodeJobFactory$1:
    480:480:void <init>(com.bumptech.glide.load.engine.Engine$DecodeJobFactory) -> <init>
    480:480:java.lang.Object create() -> create
    483:483:com.bumptech.glide.load.engine.DecodeJob create() -> create
com.bumptech.glide.load.engine.Engine$EngineJobFactory -> com.bumptech.glide.load.engine.Engine$EngineJobFactory:
    542:573:void <init>(com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.EngineJobListener,com.bumptech.glide.load.engine.EngineResource$ResourceListener) -> <init>
    590:591:com.bumptech.glide.load.engine.EngineJob build(com.bumptech.glide.load.Key,boolean,boolean,boolean,boolean) -> build
com.bumptech.glide.load.engine.Engine$EngineJobFactory$1 -> com.bumptech.glide.load.engine.Engine$EngineJobFactory$1:
    546:546:void <init>(com.bumptech.glide.load.engine.Engine$EngineJobFactory) -> <init>
    546:546:java.lang.Object create() -> create
    549:549:com.bumptech.glide.load.engine.EngineJob create() -> create
com.bumptech.glide.load.engine.Engine$LazyDiskCacheProvider -> com.bumptech.glide.load.engine.Engine$LazyDiskCacheProvider:
    444:446:void <init>(com.bumptech.glide.load.engine.cache.DiskCache$Factory) -> <init>
    458:468:com.bumptech.glide.load.engine.cache.DiskCache getDiskCache() -> getDiskCache
com.bumptech.glide.load.engine.Engine$LoadStatus -> com.bumptech.glide.load.engine.Engine$LoadStatus:
    423:426:void <init>(com.bumptech.glide.load.engine.Engine,com.bumptech.glide.request.ResourceCallback,com.bumptech.glide.load.engine.EngineJob) -> <init>
    433:436:void cancel() -> cancel
com.bumptech.glide.load.engine.EngineJob -> com.bumptech.glide.load.engine.EngineJob:
    28:28:void <clinit>() -> <clinit>
    82:91:void <init>(com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.EngineJobListener,com.bumptech.glide.load.engine.EngineResource$ResourceListener,androidx.core.util.Pools$Pool) -> <init>
    30:111:void <init>(com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.EngineJobListener,com.bumptech.glide.load.engine.EngineResource$ResourceListener,androidx.core.util.Pools$Pool,com.bumptech.glide.load.engine.EngineJob$EngineResourceFactory) -> <init>
    135:149:void addCallback(com.bumptech.glide.request.ResourceCallback,java.util.concurrent.Executor) -> addCallback
    173:177:void callCallbackOnLoadFailed(com.bumptech.glide.request.ResourceCallback) -> callCallbackOnLoadFailed
    159:163:void callCallbackOnResourceReady(com.bumptech.glide.request.ResourceCallback) -> callCallbackOnResourceReady
    203:210:void cancel() -> cancel
    279:295:void decrementPendingCallbacks() -> decrementPendingCallbacks
    196:198:com.bumptech.glide.load.engine.executor.GlideExecutor getActiveSourceExecutor() -> getActiveSourceExecutor
    384:384:com.bumptech.glide.util.pool.StateVerifier getVerifier() -> getVerifier
    269:274:void incrementPendingCallbacks(int) -> incrementPendingCallbacks
    119:125:com.bumptech.glide.load.engine.EngineJob init(com.bumptech.glide.load.Key,boolean,boolean,boolean,boolean) -> init
    218:218:boolean isDone() -> isDone
    353:379:void notifyCallbacksOfException() -> notifyCallbacksOfException
    233:265:void notifyCallbacksOfResult() -> notifyCallbacksOfResult
    329:333:void onLoadFailed(com.bumptech.glide.load.engine.GlideException) -> onLoadFailed
    319:325:void onResourceReady(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.DataSource,boolean) -> onResourceReady
    192:192:boolean onlyRetrieveFromCache() -> onlyRetrieveFromCache
    297:314:void release() -> release
    179:189:void removeCallback(com.bumptech.glide.request.ResourceCallback) -> removeCallback
    339:340:void reschedule(com.bumptech.glide.load.engine.DecodeJob) -> reschedule
    128:133:void start(com.bumptech.glide.load.engine.DecodeJob) -> start
com.bumptech.glide.load.engine.EngineJob$CallLoadFailed -> com.bumptech.glide.load.engine.EngineJob$CallLoadFailed:
    391:393:void <init>(com.bumptech.glide.load.engine.EngineJob,com.bumptech.glide.request.ResourceCallback) -> <init>
    399:408:void run() -> run
com.bumptech.glide.load.engine.EngineJob$CallResourceReady -> com.bumptech.glide.load.engine.EngineJob$CallResourceReady:
    415:417:void <init>(com.bumptech.glide.load.engine.EngineJob,com.bumptech.glide.request.ResourceCallback) -> <init>
    423:434:void run() -> run
com.bumptech.glide.load.engine.EngineJob$EngineResourceFactory -> com.bumptech.glide.load.engine.EngineJob$EngineResourceFactory:
    513:513:void <init>() -> <init>
    516:516:com.bumptech.glide.load.engine.EngineResource build(com.bumptech.glide.load.engine.Resource,boolean,com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource$ResourceListener) -> build
com.bumptech.glide.load.engine.EngineJob$ResourceCallbackAndExecutor -> com.bumptech.glide.load.engine.EngineJob$ResourceCallbackAndExecutor:
    492:495:void <init>(com.bumptech.glide.request.ResourceCallback,java.util.concurrent.Executor) -> <init>
    499:503:boolean equals(java.lang.Object) -> equals
    508:508:int hashCode() -> hashCode
com.bumptech.glide.load.engine.EngineJob$ResourceCallbacksAndExecutors -> com.bumptech.glide.load.engine.EngineJob$ResourceCallbacksAndExecutors:
    442:443:void <init>() -> <init>
    445:447:void <init>(java.util.List) -> <init>
    450:451:void add(com.bumptech.glide.request.ResourceCallback,java.util.concurrent.Executor) -> add
    470:471:void clear() -> clear
    458:458:boolean contains(com.bumptech.glide.request.ResourceCallback) -> contains
    474:474:com.bumptech.glide.load.engine.EngineJob$ResourceCallbacksAndExecutors copy() -> copy
    478:478:com.bumptech.glide.load.engine.EngineJob$ResourceCallbackAndExecutor defaultCallbackAndExecutor(com.bumptech.glide.request.ResourceCallback) -> defaultCallbackAndExecutor
    462:462:boolean isEmpty() -> isEmpty
    484:484:java.util.Iterator iterator() -> iterator
    454:455:void remove(com.bumptech.glide.request.ResourceCallback) -> remove
    466:466:int size() -> size
com.bumptech.glide.load.engine.EngineKey -> com.bumptech.glide.load.engine.EngineKey:
    31:42:void <init>(java.lang.Object,com.bumptech.glide.load.Key,int,int,java.util.Map,java.lang.Class,java.lang.Class,com.bumptech.glide.load.Options) -> <init>
    46:57:boolean equals(java.lang.Object) -> equals
    62:72:int hashCode() -> hashCode
    77:77:java.lang.String toString() -> toString
    101:101:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.engine.EngineKeyFactory -> com.bumptech.glide.load.engine.EngineKeyFactory:
    8:8:void <init>() -> <init>
    20:20:com.bumptech.glide.load.engine.EngineKey buildKey(java.lang.Object,com.bumptech.glide.load.Key,int,int,java.util.Map,java.lang.Class,java.lang.Class,com.bumptech.glide.load.Options) -> buildKey
com.bumptech.glide.load.engine.EngineResource -> com.bumptech.glide.load.engine.EngineResource:
    32:38:void <init>(com.bumptech.glide.load.engine.Resource,boolean,boolean,com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource$ResourceListener) -> <init>
    88:93:void acquire() -> acquire
    57:57:java.lang.Object get() -> get
    41:41:com.bumptech.glide.load.engine.Resource getResource() -> getResource
    51:51:java.lang.Class getResourceClass() -> getResourceClass
    62:62:int getSize() -> getSize
    45:45:boolean isMemoryCacheable() -> isMemoryCacheable
    66:77:void recycle() -> recycle
    106:118:void release() -> release
    122:122:java.lang.String toString() -> toString
com.bumptech.glide.load.engine.GlideException -> com.bumptech.glide.load.engine.GlideException:
    21:21:void <clinit>() -> <clinit>
    31:32:void <init>(java.lang.String) -> <init>
    35:36:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    38:42:void <init>(java.lang.String,java.util.List) -> <init>
    124:132:void addRootCauses(java.lang.Throwable,java.util.List) -> addRootCauses
    201:205:void appendCauses(java.util.List,java.lang.Appendable) -> appendCauses
    210:227:void appendCausesWrapped(java.util.List,java.lang.Appendable) -> appendCausesWrapped
    190:194:void appendExceptionMessage(java.lang.Throwable,java.lang.Appendable) -> appendExceptionMessage
    80:80:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
    92:92:java.util.List getCauses() -> getCauses
    158:182:java.lang.String getMessage() -> getMessage
    104:106:java.util.List getRootCauses() -> getRootCauses
    117:121:void logRootCauses(java.lang.String) -> logRootCauses
    136:137:void printStackTrace() -> printStackTrace
    141:142:void printStackTrace(java.io.PrintStream) -> printStackTrace
    146:147:void printStackTrace(java.io.PrintWriter) -> printStackTrace
    150:152:void printStackTrace(java.lang.Appendable) -> printStackTrace
    45:46:void setLoggingDetails(com.bumptech.glide.load.Key,com.bumptech.glide.load.DataSource) -> setLoggingDetails
    49:52:void setLoggingDetails(com.bumptech.glide.load.Key,com.bumptech.glide.load.DataSource,java.lang.Class) -> setLoggingDetails
    60:61:void setOrigin(java.lang.Exception) -> setOrigin
com.bumptech.glide.load.engine.GlideException$IndentedAppendable -> com.bumptech.glide.load.engine.GlideException$IndentedAppendable:
    233:237:void <init>(java.lang.Appendable) -> <init>
    241:247:java.lang.Appendable append(char) -> append
    252:253:java.lang.Appendable append(java.lang.CharSequence) -> append
    259:266:java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    271:274:java.lang.CharSequence safeSequence(java.lang.CharSequence) -> safeSequence
com.bumptech.glide.load.engine.Jobs -> com.bumptech.glide.load.engine.Jobs:
    9:11:void <init>() -> <init>
    19:19:com.bumptech.glide.load.engine.EngineJob get(com.bumptech.glide.load.Key,boolean) -> get
    34:34:java.util.Map getJobMap(boolean) -> getJobMap
    23:24:void put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineJob) -> put
    27:31:void removeIfCurrent(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineJob) -> removeIfCurrent
com.bumptech.glide.load.engine.LoadPath -> com.bumptech.glide.load.engine.LoadPath:
    34:46:void <init>(java.lang.Class,java.lang.Class,java.lang.Class,java.util.List,androidx.core.util.Pools$Pool) -> <init>
    55:59:com.bumptech.glide.load.engine.Resource load(com.bumptech.glide.load.data.DataRewinder,com.bumptech.glide.load.Options,int,int,com.bumptech.glide.load.engine.DecodePath$DecodeCallback) -> load
    71:89:com.bumptech.glide.load.engine.Resource loadWithExceptionList(com.bumptech.glide.load.data.DataRewinder,com.bumptech.glide.load.Options,int,int,com.bumptech.glide.load.engine.DecodePath$DecodeCallback,java.util.List) -> loadWithExceptionList
    98:98:java.lang.String toString() -> toString
com.bumptech.glide.load.engine.LockedResource -> com.bumptech.glide.load.engine.LockedResource:
    18:19:void <clinit>() -> <clinit>
    27:42:void <init>() -> <init>
    76:76:java.lang.Object get() -> get
    70:70:java.lang.Class getResourceClass() -> getResourceClass
    81:81:int getSize() -> getSize
    98:98:com.bumptech.glide.util.pool.StateVerifier getVerifier() -> getVerifier
    45:48:void init(com.bumptech.glide.load.engine.Resource) -> init
    35:37:com.bumptech.glide.load.engine.LockedResource obtain(com.bumptech.glide.load.engine.Resource) -> obtain
    85:93:void recycle() -> recycle
    51:53:void release() -> release
    55:65:void unlock() -> unlock
com.bumptech.glide.load.engine.LockedResource$1 -> com.bumptech.glide.load.engine.LockedResource$1:
    21:21:void <init>() -> <init>
    21:21:java.lang.Object create() -> create
    24:24:com.bumptech.glide.load.engine.LockedResource create() -> create
com.bumptech.glide.load.engine.ResourceCacheGenerator -> com.bumptech.glide.load.engine.ResourceCacheGenerator:
    23:38:void <init>(com.bumptech.glide.load.engine.DecodeHelper,com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback) -> <init>
    115:119:void cancel() -> cancel
    110:110:boolean hasNextModelLoader() -> hasNextModelLoader
    123:125:void onDataReady(java.lang.Object) -> onDataReady
    129:130:void onLoadFailed(java.lang.Exception) -> onLoadFailed
    44:106:boolean startNext() -> startNext
com.bumptech.glide.load.engine.ResourceCacheKey -> com.bumptech.glide.load.engine.ResourceCacheKey:
    15:15:void <clinit>() -> <clinit>
    33:42:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,com.bumptech.glide.load.Key,com.bumptech.glide.load.Key,int,int,com.bumptech.glide.load.Transformation,java.lang.Class,com.bumptech.glide.load.Options) -> <init>
    46:56:boolean equals(java.lang.Object) -> equals
    90:95:byte[] getResourceClassBytes() -> getResourceClassBytes
    61:70:int hashCode() -> hashCode
    100:100:java.lang.String toString() -> toString
    76:87:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.engine.ResourceRecycler -> com.bumptech.glide.load.engine.ResourceRecycler:
    9:12:void <init>() -> <init>
    14:25:void recycle(com.bumptech.glide.load.engine.Resource,boolean) -> recycle
com.bumptech.glide.load.engine.ResourceRecycler$ResourceRecyclerCallback -> com.bumptech.glide.load.engine.ResourceRecycler$ResourceRecyclerCallback:
    31:31:void <init>() -> <init>
    35:40:boolean handleMessage(android.os.Message) -> handleMessage
com.bumptech.glide.load.engine.SourceGenerator -> com.bumptech.glide.load.engine.SourceGenerator:
    37:40:void <init>(com.bumptech.glide.load.engine.DecodeHelper,com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback) -> <init>
    102:128:void cacheData(java.lang.Object) -> cacheData
    132:136:void cancel() -> cancel
    98:98:boolean hasNextModelLoader() -> hasNextModelLoader
    93:94:boolean isCurrentRequest(com.bumptech.glide.load.model.ModelLoader$LoadData) -> isCurrentRequest
    182:183:void onDataFetcherFailed(com.bumptech.glide.load.Key,java.lang.Exception,com.bumptech.glide.load.data.DataFetcher,com.bumptech.glide.load.DataSource) -> onDataFetcherFailed
    176:177:void onDataFetcherReady(com.bumptech.glide.load.Key,java.lang.Object,com.bumptech.glide.load.data.DataFetcher,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.Key) -> onDataFetcherReady
    141:155:void onDataReadyInternal(com.bumptech.glide.load.model.ModelLoader$LoadData,java.lang.Object) -> onDataReadyInternal
    160:161:void onLoadFailedInternal(com.bumptech.glide.load.model.ModelLoader$LoadData,java.lang.Exception) -> onLoadFailedInternal
    167:167:void reschedule() -> reschedule
    44:66:boolean startNext() -> startNext
    70:87:void startNextLoad(com.bumptech.glide.load.model.ModelLoader$LoadData) -> startNextLoad
com.bumptech.glide.load.engine.SourceGenerator$1 -> com.bumptech.glide.load.engine.SourceGenerator$1:
    72:72:void <init>(com.bumptech.glide.load.engine.SourceGenerator,com.bumptech.glide.load.model.ModelLoader$LoadData) -> <init>
    75:78:void onDataReady(java.lang.Object) -> onDataReady
    82:85:void onLoadFailed(java.lang.Exception) -> onLoadFailed
com.bumptech.glide.load.engine.bitmap_recycle.BaseKeyPool -> com.bumptech.glide.load.engine.bitmap_recycle.BaseKeyPool:
    6:8:void <init>() -> <init>
    11:15:com.bumptech.glide.load.engine.bitmap_recycle.Poolable get() -> get
    19:22:void offer(com.bumptech.glide.load.engine.bitmap_recycle.Poolable) -> offer
com.bumptech.glide.load.engine.bitmap_recycle.BitmapPoolAdapter -> com.bumptech.glide.load.engine.bitmap_recycle.BitmapPoolAdapter:
    11:11:void <init>() -> <init>
    42:42:void clearMemory() -> clearMemory
    30:30:android.graphics.Bitmap get(int,int,android.graphics.Bitmap$Config) -> get
    36:36:android.graphics.Bitmap getDirty(int,int,android.graphics.Bitmap$Config) -> getDirty
    24:25:void put(android.graphics.Bitmap) -> put
    47:47:void trimMemory(int) -> trimMemory
com.bumptech.glide.load.engine.bitmap_recycle.ByteArrayAdapter -> com.bumptech.glide.load.engine.bitmap_recycle.ByteArrayAdapter:
    5:5:void <init>() -> <init>
    4:4:int getArrayLength(java.lang.Object) -> getArrayLength
    15:15:int getArrayLength(byte[]) -> getArrayLength
    25:25:int getElementSizeInBytes() -> getElementSizeInBytes
    10:10:java.lang.String getTag() -> getTag
    4:4:java.lang.Object newArray(int) -> newArray
    20:20:byte[] newArray(int) -> newArray
com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap -> com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap:
    20:22:void <init>() -> <init>
    40:50:java.lang.Object get(com.bumptech.glide.load.engine.bitmap_recycle.Poolable) -> get
    98:102:void makeHead(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry) -> makeHead
    106:110:void makeTail(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry) -> makeTail
    25:36:void put(com.bumptech.glide.load.engine.bitmap_recycle.Poolable,java.lang.Object) -> put
    118:120:void removeEntry(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry) -> removeEntry
    55:77:java.lang.Object removeLast() -> removeLast
    82:93:java.lang.String toString() -> toString
    113:115:void updateEntry(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry) -> updateEntry
com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry -> com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry:
    131:132:void <init>() -> <init>
    134:137:void <init>(java.lang.Object) -> <init>
    150:154:void add(java.lang.Object) -> add
    141:142:java.lang.Object removeLast() -> removeLast
    146:146:int size() -> size
com.bumptech.glide.load.engine.bitmap_recycle.IntegerArrayAdapter -> com.bumptech.glide.load.engine.bitmap_recycle.IntegerArrayAdapter:
    5:5:void <init>() -> <init>
    4:4:int getArrayLength(java.lang.Object) -> getArrayLength
    15:15:int getArrayLength(int[]) -> getArrayLength
    25:25:int getElementSizeInBytes() -> getElementSizeInBytes
    10:10:java.lang.String getTag() -> getTag
    4:4:java.lang.Object newArray(int) -> newArray
    20:20:int[] newArray(int) -> newArray
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool -> com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool:
    29:48:void <init>(int) -> <init>
    133:135:void clearMemory() -> clearMemory
    165:176:void decrementArrayOfSize(int,java.lang.Class) -> decrementArrayOfSize
    148:149:void evict() -> evict
    152:162:void evictToSize(int) -> evictToSize
    84:92:java.lang.Object get(int,java.lang.Class) -> get
    189:189:com.bumptech.glide.load.engine.bitmap_recycle.ArrayAdapterInterface getAdapterFromObject(java.lang.Object) -> getAdapterFromObject
    194:206:com.bumptech.glide.load.engine.bitmap_recycle.ArrayAdapterInterface getAdapterFromType(java.lang.Class) -> getAdapterFromType
    116:116:java.lang.Object getArrayForKey(com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$Key) -> getArrayForKey
    78:80:java.lang.Object getExact(int,java.lang.Class) -> getExact
    96:109:java.lang.Object getForKey(com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$Key,java.lang.Class) -> getForKey
    179:184:java.util.NavigableMap getSizesForAdapter(java.lang.Class) -> getSizesForAdapter
    129:129:boolean isNoMoreThanHalfFull() -> isNoMoreThanHalfFull
    120:120:boolean isSmallEnoughForReuse(int) -> isSmallEnoughForReuse
    124:125:boolean mayFillRequest(int,java.lang.Integer) -> mayFillRequest
    58:75:void put(java.lang.Object) -> put
    138:145:void trimMemory(int) -> trimMemory
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$Key -> com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$Key:
    243:245:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$KeyPool) -> <init>
    254:258:boolean equals(java.lang.Object) -> equals
    273:275:int hashCode() -> hashCode
    248:250:void init(int,java.lang.Class) -> init
    268:269:void offer() -> offer
    263:263:java.lang.String toString() -> toString
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$KeyPool -> com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$KeyPool:
    224:224:void <init>() -> <init>
    221:221:com.bumptech.glide.load.engine.bitmap_recycle.Poolable create() -> create
    234:234:com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$Key create() -> create
    227:229:com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$Key get(int,java.lang.Class) -> get
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool -> com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool:
    26:26:void <clinit>() -> <clinit>
    41:47:void <init>(long,com.bumptech.glide.load.engine.bitmap_recycle.LruPoolStrategy,java.util.Set) -> <init>
    55:56:void <init>(long) -> <init>
    181:192:void assertNotHardwareConfig(android.graphics.Bitmap$Config) -> assertNotHardwareConfig
    236:240:void clearMemory() -> clearMemory
    175:175:android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config) -> createBitmap
    282:285:void dump() -> dump
    288:304:void dumpUnchecked() -> dumpUnchecked
    144:145:void evict() -> evict
    150:160:android.graphics.Bitmap get(int,int,android.graphics.Bitmap$Config) -> get
    318:328:java.util.Set getDefaultAllowedConfigs() -> getDefaultAllowedConfigs
    308:313:com.bumptech.glide.load.engine.bitmap_recycle.LruPoolStrategy getDefaultStrategy() -> getDefaultStrategy
    166:170:android.graphics.Bitmap getDirty(int,int,android.graphics.Bitmap$Config) -> getDirty
    196:217:android.graphics.Bitmap getDirtyOrNull(int,int,android.graphics.Bitmap$Config) -> getDirtyOrNull
    93:93:long getMaxSize() -> getMaxSize
    229:232:void maybeSetPreMultiplied(android.graphics.Bitmap) -> maybeSetPreMultiplied
    223:225:void normalize(android.graphics.Bitmap) -> normalize
    103:141:void put(android.graphics.Bitmap) -> put
    245:256:void trimMemory(int) -> trimMemory
    258:279:void trimToSize(long) -> trimToSize
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool$NullBitmapTracker -> com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool$NullBitmapTracker:
    369:369:void <init>() -> <init>
    374:374:void add(android.graphics.Bitmap) -> add
    379:379:void remove(android.graphics.Bitmap) -> remove
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy -> com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy:
    34:55:void <clinit>() -> <clinit>
    28:60:void <init>() -> <init>
    118:137:void decrementBitmapOfSize(java.lang.Integer,android.graphics.Bitmap) -> decrementBitmapOfSize
    90:103:com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key findBestKey(int,android.graphics.Bitmap$Config) -> findBestKey
    77:86:android.graphics.Bitmap get(int,int,android.graphics.Bitmap$Config) -> get
    247:247:java.lang.String getBitmapString(int,android.graphics.Bitmap$Config) -> getBitmapString
    251:267:android.graphics.Bitmap$Config[] getInConfigs(android.graphics.Bitmap$Config) -> getInConfigs
    162:162:int getSize(android.graphics.Bitmap) -> getSize
    140:145:java.util.NavigableMap getSizesForConfig(android.graphics.Bitmap$Config) -> getSizesForConfig
    150:151:java.lang.String logBitmap(android.graphics.Bitmap) -> logBitmap
    156:157:java.lang.String logBitmap(int,int,android.graphics.Bitmap$Config) -> logBitmap
    64:72:void put(android.graphics.Bitmap) -> put
    109:114:android.graphics.Bitmap removeLast() -> removeLast
    167:178:java.lang.String toString() -> toString
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$1 -> com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$1:
    257:257:void <clinit>() -> <clinit>
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key -> com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key:
    203:205:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool) -> <init>
    230:234:boolean equals(java.lang.Object) -> equals
    239:241:int hashCode() -> hashCode
    214:216:void init(int,android.graphics.Bitmap$Config) -> init
    220:221:void offer() -> offer
    225:225:java.lang.String toString() -> toString
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool -> com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool:
    182:182:void <init>() -> <init>
    181:181:com.bumptech.glide.load.engine.bitmap_recycle.Poolable create() -> create
    192:192:com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key create() -> create
    185:187:com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key get(int,android.graphics.Bitmap$Config) -> get
com.bumptech.glide.load.engine.cache.DiskCacheAdapter -> com.bumptech.glide.load.engine.cache.DiskCacheAdapter:
    7:7:void <init>() -> <init>
    11:11:java.io.File get(com.bumptech.glide.load.Key) -> get
    17:17:void put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.cache.DiskCache$Writer) -> put
com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker -> com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker:
    20:22:void <init>() -> <init>
    26:36:void acquire(java.lang.String) -> acquire
    40:69:void release(java.lang.String) -> release
com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock -> com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock:
    72:76:void <init>() -> <init>
com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLockPool -> com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLockPool:
    81:84:void <init>() -> <init>
    88:94:com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock obtain() -> obtain
    98:103:void offer(com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock) -> offer
com.bumptech.glide.load.engine.cache.DiskLruCacheFactory -> com.bumptech.glide.load.engine.cache.DiskLruCacheFactory:
    55:58:void <init>(com.bumptech.glide.load.engine.cache.DiskLruCacheFactory$CacheDirectoryGetter,long) -> <init>
    62:72:com.bumptech.glide.load.engine.cache.DiskCache build() -> build
com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper -> com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper:
    30:74:void <init>(java.io.File,long) -> <init>
    63:63:com.bumptech.glide.load.engine.cache.DiskCache create(java.io.File,long) -> create
    85:103:java.io.File get(com.bumptech.glide.load.Key) -> get
    76:80:com.bumptech.glide.disklrucache.DiskLruCache getDiskCache() -> getDiskCache
    110:145:void put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.cache.DiskCache$Writer) -> put
com.bumptech.glide.load.engine.cache.InternalCacheDiskCacheFactory -> com.bumptech.glide.load.engine.cache.InternalCacheDiskCacheFactory:
    15:19:void <init>(android.content.Context) -> <init>
    27:42:void <init>(android.content.Context,java.lang.String,long) -> <init>
com.bumptech.glide.load.engine.cache.InternalCacheDiskCacheFactory$1 -> com.bumptech.glide.load.engine.cache.InternalCacheDiskCacheFactory$1:
    28:28:void <init>(android.content.Context,java.lang.String) -> <init>
    31:38:java.io.File getCacheDirectory() -> getCacheDirectory
com.bumptech.glide.load.engine.cache.LruResourceCache -> com.bumptech.glide.load.engine.cache.LruResourceCache:
    20:21:void <init>(long) -> <init>
    11:11:int getSize(java.lang.Object) -> getSize
    37:40:int getSize(com.bumptech.glide.load.engine.Resource) -> getSize
    11:11:void onItemEvicted(java.lang.Object,java.lang.Object) -> onItemEvicted
    30:33:void onItemEvicted(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.Resource) -> onItemEvicted
    11:11:com.bumptech.glide.load.engine.Resource put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.Resource) -> put
    11:11:com.bumptech.glide.load.engine.Resource remove(com.bumptech.glide.load.Key) -> remove
    25:26:void setResourceRemovedListener(com.bumptech.glide.load.engine.cache.MemoryCache$ResourceRemovedListener) -> setResourceRemovedListener
    47:58:void trimMemory(int) -> trimMemory
com.bumptech.glide.load.engine.cache.MemorySizeCalculator -> com.bumptech.glide.load.engine.cache.MemorySizeCalculator:
    35:83:void <init>(com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder) -> <init>
    97:97:int getArrayPoolSizeInBytes() -> getArrayPoolSizeInBytes
    92:92:int getBitmapPoolSize() -> getBitmapPoolSize
    102:105:int getMaxSize(android.app.ActivityManager,float,float) -> getMaxSize
    87:87:int getMemoryCacheSize() -> getMemoryCacheSize
    118:119:boolean isLowMemoryDevice(android.app.ActivityManager) -> isLowMemoryDevice
    109:109:java.lang.String toMb(int) -> toMb
com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder -> com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder:
    139:140:void <clinit>() -> <clinit>
    153:172:void <init>(android.content.Context) -> <init>
    253:253:com.bumptech.glide.load.engine.cache.MemorySizeCalculator build() -> build
com.bumptech.glide.load.engine.cache.MemorySizeCalculator$DisplayMetricsScreenDimensions -> com.bumptech.glide.load.engine.cache.MemorySizeCalculator$DisplayMetricsScreenDimensions:
    260:262:void <init>(android.util.DisplayMetrics) -> <init>
    271:271:int getHeightPixels() -> getHeightPixels
    266:266:int getWidthPixels() -> getWidthPixels
com.bumptech.glide.load.engine.cache.SafeKeyGenerator -> com.bumptech.glide.load.engine.cache.SafeKeyGenerator:
    21:24:void <init>() -> <init>
    52:58:java.lang.String calculateHexStringDigest(com.bumptech.glide.load.Key) -> calculateHexStringDigest
    39:48:java.lang.String getSafeKey(com.bumptech.glide.load.Key) -> getSafeKey
com.bumptech.glide.load.engine.cache.SafeKeyGenerator$1 -> com.bumptech.glide.load.engine.cache.SafeKeyGenerator$1:
    26:26:void <init>(com.bumptech.glide.load.engine.cache.SafeKeyGenerator) -> <init>
    26:26:java.lang.Object create() -> create
    30:32:com.bumptech.glide.load.engine.cache.SafeKeyGenerator$PoolableDigestContainer create() -> create
com.bumptech.glide.load.engine.cache.SafeKeyGenerator$PoolableDigestContainer -> com.bumptech.glide.load.engine.cache.SafeKeyGenerator$PoolableDigestContainer:
    65:69:void <init>(java.security.MessageDigest) -> <init>
    74:74:com.bumptech.glide.util.pool.StateVerifier getVerifier() -> getVerifier
com.bumptech.glide.load.engine.executor.GlideExecutor -> com.bumptech.glide.load.engine.executor.GlideExecutor:
    55:55:void <clinit>() -> <clinit>
    214:216:void <init>(java.util.concurrent.ExecutorService) -> <init>
    293:293:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    305:309:int calculateBestThreadCount() -> calculateBestThreadCount
    220:221:void execute(java.lang.Runnable) -> execute
    233:233:java.util.List invokeAll(java.util.Collection) -> invokeAll
    241:241:java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit) -> invokeAll
    248:248:java.lang.Object invokeAny(java.util.Collection) -> invokeAny
    255:255:java.lang.Object invokeAny(java.util.Collection,long,java.util.concurrent.TimeUnit) -> invokeAny
    282:282:boolean isShutdown() -> isShutdown
    287:287:boolean isTerminated() -> isTerminated
    183:193:com.bumptech.glide.load.engine.executor.GlideExecutor$Builder newAnimationBuilder() -> newAnimationBuilder
    198:198:com.bumptech.glide.load.engine.executor.GlideExecutor newAnimationExecutor() -> newAnimationExecutor
    74:76:com.bumptech.glide.load.engine.executor.GlideExecutor$Builder newDiskCacheBuilder() -> newDiskCacheBuilder
    81:81:com.bumptech.glide.load.engine.executor.GlideExecutor newDiskCacheExecutor() -> newDiskCacheExecutor
    119:121:com.bumptech.glide.load.engine.executor.GlideExecutor$Builder newSourceBuilder() -> newSourceBuilder
    126:126:com.bumptech.glide.load.engine.executor.GlideExecutor newSourceExecutor() -> newSourceExecutor
    165:165:com.bumptech.glide.load.engine.executor.GlideExecutor newUnlimitedSourceExecutor() -> newUnlimitedSourceExecutor
    271:272:void shutdown() -> shutdown
    277:277:java.util.List shutdownNow() -> shutdownNow
    226:226:java.util.concurrent.Future submit(java.lang.Runnable) -> submit
    261:261:java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
    266:266:java.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
    298:298:java.lang.String toString() -> toString
com.bumptech.glide.load.engine.executor.GlideExecutor$Builder -> com.bumptech.glide.load.engine.executor.GlideExecutor$Builder:
    417:426:void <init>(boolean) -> <init>
    466:483:com.bumptech.glide.load.engine.executor.GlideExecutor build() -> build
    460:461:com.bumptech.glide.load.engine.executor.GlideExecutor$Builder setName(java.lang.String) -> setName
    441:443:com.bumptech.glide.load.engine.executor.GlideExecutor$Builder setThreadCount(int) -> setThreadCount
com.bumptech.glide.load.engine.executor.GlideExecutor$DefaultThreadFactory -> com.bumptech.glide.load.engine.executor.GlideExecutor$DefaultThreadFactory:
    373:377:void <init>(java.lang.String,com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy,boolean) -> <init>
    380:400:java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.bumptech.glide.load.engine.executor.GlideExecutor$DefaultThreadFactory$1 -> com.bumptech.glide.load.engine.executor.GlideExecutor$DefaultThreadFactory$1:
    382:382:void <init>(com.bumptech.glide.load.engine.executor.GlideExecutor$DefaultThreadFactory,java.lang.Runnable,java.lang.String) -> <init>
    386:397:void run() -> run
com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy -> com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy:
    320:351:void <clinit>() -> <clinit>
com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy$1 -> com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy$1:
    321:321:void <init>() -> <init>
    325:325:void handle(java.lang.Throwable) -> handle
com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy$2 -> com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy$2:
    329:329:void <init>() -> <init>
    332:335:void handle(java.lang.Throwable) -> handle
com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy$3 -> com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy$3:
    341:341:void <init>() -> <init>
    344:347:void handle(java.lang.Throwable) -> handle
com.bumptech.glide.load.engine.executor.RuntimeCompat -> com.bumptech.glide.load.engine.executor.RuntimeCompat:
    23:27:int availableProcessors() -> availableProcessors
com.bumptech.glide.load.model.AssetUriLoader -> com.bumptech.glide.load.model.AssetUriLoader:
    24:24:void <clinit>() -> <clinit>
    31:34:void <init>(android.content.res.AssetManager,com.bumptech.glide.load.model.AssetUriLoader$AssetFetcherFactory) -> <init>
    20:20:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    39:40:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    20:20:boolean handles(java.lang.Object) -> handles
    45:47:boolean handles(android.net.Uri) -> handles
com.bumptech.glide.load.model.AssetUriLoader$FileDescriptorFactory -> com.bumptech.glide.load.model.AssetUriLoader$FileDescriptorFactory:
    93:95:void <init>(android.content.res.AssetManager) -> <init>
    100:100:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
    111:111:com.bumptech.glide.load.data.DataFetcher buildFetcher(android.content.res.AssetManager,java.lang.String) -> buildFetcher
com.bumptech.glide.load.model.AssetUriLoader$StreamFactory -> com.bumptech.glide.load.model.AssetUriLoader$StreamFactory:
    65:67:void <init>(android.content.res.AssetManager) -> <init>
    72:72:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
    82:82:com.bumptech.glide.load.data.DataFetcher buildFetcher(android.content.res.AssetManager,java.lang.String) -> buildFetcher
com.bumptech.glide.load.model.ByteArrayLoader -> com.bumptech.glide.load.model.ByteArrayLoader:
    24:26:void <init>(com.bumptech.glide.load.model.ByteArrayLoader$Converter) -> <init>
    20:20:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    31:31:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(byte[],int,int,com.bumptech.glide.load.Options) -> buildLoadData
    20:20:boolean handles(java.lang.Object) -> handles
    36:36:boolean handles(byte[]) -> handles
com.bumptech.glide.load.model.ByteArrayLoader$ByteBufferFactory -> com.bumptech.glide.load.model.ByteArrayLoader$ByteBufferFactory:
    98:98:void <init>() -> <init>
    103:103:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.ByteArrayLoader$ByteBufferFactory$1 -> com.bumptech.glide.load.model.ByteArrayLoader$ByteBufferFactory$1:
    104:104:void <init>(com.bumptech.glide.load.model.ByteArrayLoader$ByteBufferFactory) -> <init>
    104:104:java.lang.Object convert(byte[]) -> convert
    107:107:java.nio.ByteBuffer convert(byte[]) -> convert
    112:112:java.lang.Class getDataClass() -> getDataClass
com.bumptech.glide.load.model.ByteArrayLoader$Fetcher -> com.bumptech.glide.load.model.ByteArrayLoader$Fetcher:
    60:63:void <init>(byte[],com.bumptech.glide.load.model.ByteArrayLoader$Converter) -> <init>
    79:79:void cancel() -> cancel
    74:74:void cleanup() -> cleanup
    84:84:java.lang.Class getDataClass() -> getDataClass
    90:90:com.bumptech.glide.load.DataSource getDataSource() -> getDataSource
    67:69:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback) -> loadData
com.bumptech.glide.load.model.ByteArrayLoader$StreamFactory -> com.bumptech.glide.load.model.ByteArrayLoader$StreamFactory:
    124:124:void <init>() -> <init>
    129:129:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.ByteArrayLoader$StreamFactory$1 -> com.bumptech.glide.load.model.ByteArrayLoader$StreamFactory$1:
    130:130:void <init>(com.bumptech.glide.load.model.ByteArrayLoader$StreamFactory) -> <init>
    130:130:java.lang.Object convert(byte[]) -> convert
    133:133:java.io.InputStream convert(byte[]) -> convert
    138:138:java.lang.Class getDataClass() -> getDataClass
com.bumptech.glide.load.model.ByteBufferEncoder -> com.bumptech.glide.load.model.ByteBufferEncoder:
    13:13:void <init>() -> <init>
    13:13:boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options) -> encode
    18:27:boolean encode(java.nio.ByteBuffer,java.io.File,com.bumptech.glide.load.Options) -> encode
com.bumptech.glide.load.model.ByteBufferFileLoader -> com.bumptech.glide.load.model.ByteBufferFileLoader:
    17:17:void <init>() -> <init>
    17:17:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    23:23:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.io.File,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    17:17:boolean handles(java.lang.Object) -> handles
    28:28:boolean handles(java.io.File) -> handles
com.bumptech.glide.load.model.ByteBufferFileLoader$ByteBufferFetcher -> com.bumptech.glide.load.model.ByteBufferFileLoader$ByteBufferFetcher:
    52:54:void <init>(java.io.File) -> <init>
    79:79:void cancel() -> cancel
    74:74:void cleanup() -> cleanup
    84:84:java.lang.Class getDataClass() -> getDataClass
    90:90:com.bumptech.glide.load.DataSource getDataSource() -> getDataSource
    61:69:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback) -> loadData
com.bumptech.glide.load.model.ByteBufferFileLoader$Factory -> com.bumptech.glide.load.model.ByteBufferFileLoader$Factory:
    32:32:void <init>() -> <init>
    37:37:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.DataUrlLoader -> com.bumptech.glide.load.model.DataUrlLoader:
    36:38:void <init>(com.bumptech.glide.load.model.DataUrlLoader$DataDecoder) -> <init>
    43:44:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    51:51:boolean handles(java.lang.Object) -> handles
com.bumptech.glide.load.model.DataUrlLoader$DataUriFetcher -> com.bumptech.glide.load.model.DataUrlLoader$DataUriFetcher:
    74:77:void <init>(java.lang.String,com.bumptech.glide.load.model.DataUrlLoader$DataDecoder) -> <init>
    101:101:void cancel() -> cancel
    92:96:void cleanup() -> cleanup
    106:106:java.lang.Class getDataClass() -> getDataClass
    112:112:com.bumptech.glide.load.DataSource getDataSource() -> getDataSource
    82:87:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback) -> loadData
com.bumptech.glide.load.model.DataUrlLoader$StreamFactory -> com.bumptech.glide.load.model.DataUrlLoader$StreamFactory:
    125:160:void <init>() -> <init>
    165:165:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.DataUrlLoader$StreamFactory$1 -> com.bumptech.glide.load.model.DataUrlLoader$StreamFactory$1:
    127:127:void <init>(com.bumptech.glide.load.model.DataUrlLoader$StreamFactory) -> <init>
    127:127:void close(java.lang.Object) -> close
    152:153:void close(java.io.InputStream) -> close
    127:127:java.lang.Object decode(java.lang.String) -> decode
    130:147:java.io.InputStream decode(java.lang.String) -> decode
    157:157:java.lang.Class getDataClass() -> getDataClass
com.bumptech.glide.load.model.FileLoader -> com.bumptech.glide.load.model.FileLoader:
    30:32:void <init>(com.bumptech.glide.load.model.FileLoader$FileOpener) -> <init>
    23:23:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    37:37:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.io.File,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    23:23:boolean handles(java.lang.Object) -> handles
    42:42:boolean handles(java.io.File) -> handles
com.bumptech.glide.load.model.FileLoader$Factory -> com.bumptech.glide.load.model.FileLoader$Factory:
    118:120:void <init>(com.bumptech.glide.load.model.FileLoader$FileOpener) -> <init>
    125:125:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.FileLoader$FileDescriptorFactory -> com.bumptech.glide.load.model.FileLoader$FileDescriptorFactory:
    161:178:void <init>() -> <init>
com.bumptech.glide.load.model.FileLoader$FileDescriptorFactory$1 -> com.bumptech.glide.load.model.FileLoader$FileDescriptorFactory$1:
    162:162:void <init>() -> <init>
    162:162:void close(java.lang.Object) -> close
    170:171:void close(android.os.ParcelFileDescriptor) -> close
    175:175:java.lang.Class getDataClass() -> getDataClass
    162:162:java.lang.Object open(java.io.File) -> open
    165:165:android.os.ParcelFileDescriptor open(java.io.File) -> open
com.bumptech.glide.load.model.FileLoader$FileFetcher -> com.bumptech.glide.load.model.FileLoader$FileFetcher:
    63:66:void <init>(java.io.File,com.bumptech.glide.load.model.FileLoader$FileOpener) -> <init>
    95:95:void cancel() -> cancel
    83:90:void cleanup() -> cleanup
    100:100:java.lang.Class getDataClass() -> getDataClass
    106:106:com.bumptech.glide.load.DataSource getDataSource() -> getDataSource
    71:79:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback) -> loadData
com.bumptech.glide.load.model.FileLoader$StreamFactory -> com.bumptech.glide.load.model.FileLoader$StreamFactory:
    137:154:void <init>() -> <init>
com.bumptech.glide.load.model.FileLoader$StreamFactory$1 -> com.bumptech.glide.load.model.FileLoader$StreamFactory$1:
    138:138:void <init>() -> <init>
    138:138:void close(java.lang.Object) -> close
    146:147:void close(java.io.InputStream) -> close
    151:151:java.lang.Class getDataClass() -> getDataClass
    138:138:java.lang.Object open(java.io.File) -> open
    141:141:java.io.InputStream open(java.io.File) -> open
com.bumptech.glide.load.model.GlideUrl -> com.bumptech.glide.load.model.GlideUrl:
    41:42:void <init>(java.net.URL) -> <init>
    45:46:void <init>(java.lang.String) -> <init>
    48:52:void <init>(java.net.URL,com.bumptech.glide.load.model.Headers) -> <init>
    54:58:void <init>(java.lang.String,com.bumptech.glide.load.model.Headers) -> <init>
    133:137:boolean equals(java.lang.Object) -> equals
    111:111:java.lang.String getCacheKey() -> getCacheKey
    125:128:byte[] getCacheKeyBytes() -> getCacheKeyBytes
    98:98:java.util.Map getHeaders() -> getHeaders
    86:93:java.lang.String getSafeStringUrl() -> getSafeStringUrl
    69:72:java.net.URL getSafeUrl() -> getSafeUrl
    142:146:int hashCode() -> hashCode
    116:116:java.lang.String toString() -> toString
    61:61:java.net.URL toURL() -> toURL
    121:122:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.model.Headers -> com.bumptech.glide.load.model.Headers:
    19:31:void <clinit>() -> <clinit>
com.bumptech.glide.load.model.Headers$1 -> com.bumptech.glide.load.model.Headers$1:
    20:20:void <init>() -> <init>
    23:23:java.util.Map getHeaders() -> getHeaders
com.bumptech.glide.load.model.LazyHeaders -> com.bumptech.glide.load.model.LazyHeaders:
    26:28:void <init>(java.util.Map) -> <init>
    58:70:java.lang.String buildHeaderValue(java.util.List) -> buildHeaderValue
    80:84:boolean equals(java.lang.Object) -> equals
    44:53:java.util.Map generateHeaders() -> generateHeaders
    32:40:java.util.Map getHeaders() -> getHeaders
    89:89:int hashCode() -> hashCode
    75:75:java.lang.String toString() -> toString
com.bumptech.glide.load.model.LazyHeaders$Builder -> com.bumptech.glide.load.model.LazyHeaders$Builder:
    105:120:void <clinit>() -> <clinit>
    103:124:void <init>() -> <init>
    212:213:com.bumptech.glide.load.model.LazyHeaders build() -> build
    233:248:java.lang.String getSanitizedUserAgent() -> getSanitizedUserAgent
com.bumptech.glide.load.model.LazyHeaders$StringHeaderFactory -> com.bumptech.glide.load.model.LazyHeaders$StringHeaderFactory:
    256:258:void <init>(java.lang.String) -> <init>
    262:262:java.lang.String buildHeader() -> buildHeader
    272:276:boolean equals(java.lang.Object) -> equals
    281:281:int hashCode() -> hashCode
    267:267:java.lang.String toString() -> toString
com.bumptech.glide.load.model.MediaStoreFileLoader -> com.bumptech.glide.load.model.MediaStoreFileLoader:
    25:27:void <init>(android.content.Context) -> <init>
    19:19:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    32:32:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    19:19:boolean handles(java.lang.Object) -> handles
    37:37:boolean handles(android.net.Uri) -> handles
com.bumptech.glide.load.model.MediaStoreFileLoader$Factory -> com.bumptech.glide.load.model.MediaStoreFileLoader$Factory:
    108:110:void <init>(android.content.Context) -> <init>
    115:115:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.MediaStoreFileLoader$FilePathFetcher -> com.bumptech.glide.load.model.MediaStoreFileLoader$FilePathFetcher:
    41:41:void <clinit>() -> <clinit>
    49:52:void <init>(android.content.Context,android.net.Uri) -> <init>
    88:88:void cancel() -> cancel
    83:83:void cleanup() -> cleanup
    93:93:java.lang.Class getDataClass() -> getDataClass
    99:99:com.bumptech.glide.load.DataSource getDataSource() -> getDataSource
    56:78:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback) -> loadData
com.bumptech.glide.load.model.ModelCache -> com.bumptech.glide.load.model.ModelCache:
    29:37:void <init>(long) -> <init>
    49:52:java.lang.Object get(java.lang.Object,int,int) -> get
    64:66:void put(java.lang.Object,int,int,java.lang.Object) -> put
com.bumptech.glide.load.model.ModelCache$1 -> com.bumptech.glide.load.model.ModelCache$1:
    31:31:void <init>(com.bumptech.glide.load.model.ModelCache,long) -> <init>
    31:31:void onItemEvicted(java.lang.Object,java.lang.Object) -> onItemEvicted
    34:35:void onItemEvicted(com.bumptech.glide.load.model.ModelCache$ModelKey,java.lang.Object) -> onItemEvicted
com.bumptech.glide.load.model.ModelCache$ModelKey -> com.bumptech.glide.load.model.ModelCache$ModelKey:
    75:75:void <clinit>() -> <clinit>
    95:95:void <init>() -> <init>
    111:116:boolean equals(java.lang.Object) -> equals
    84:92:com.bumptech.glide.load.model.ModelCache$ModelKey get(java.lang.Object,int,int) -> get
    121:124:int hashCode() -> hashCode
    98:101:void init(java.lang.Object,int,int) -> init
    104:107:void release() -> release
com.bumptech.glide.load.model.ModelLoader$LoadData -> com.bumptech.glide.load.model.ModelLoader$LoadData:
    50:51:void <init>(com.bumptech.glide.load.Key,com.bumptech.glide.load.data.DataFetcher) -> <init>
    56:60:void <init>(com.bumptech.glide.load.Key,java.util.List,com.bumptech.glide.load.data.DataFetcher) -> <init>
com.bumptech.glide.load.model.ModelLoaderRegistry -> com.bumptech.glide.load.model.ModelLoaderRegistry:
    26:27:void <init>(androidx.core.util.Pools$Pool) -> <init>
    23:31:void <init>(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> <init>
    36:39:void append(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory) -> append
    123:123:java.lang.Class getClass(java.lang.Object) -> getClass
    106:106:java.util.List getDataClasses(java.lang.Class) -> getDataClasses
    75:96:java.util.List getModelLoaders(java.lang.Object) -> getModelLoaders
    111:117:java.util.List getModelLoadersForClass(java.lang.Class) -> getModelLoadersForClass
com.bumptech.glide.load.model.ModelLoaderRegistry$ModelLoaderCache -> com.bumptech.glide.load.model.ModelLoaderRegistry$ModelLoaderCache:
    127:130:void <init>() -> <init>
    133:134:void clear() -> clear
    146:147:java.util.List get(java.lang.Class) -> get
    137:141:void put(java.lang.Class,java.util.List) -> put
com.bumptech.glide.load.model.ModelLoaderRegistry$ModelLoaderCache$Entry -> com.bumptech.glide.load.model.ModelLoaderRegistry$ModelLoaderCache$Entry:
    153:155:void <init>(java.util.List) -> <init>
com.bumptech.glide.load.model.MultiModelLoader -> com.bumptech.glide.load.model.MultiModelLoader:
    34:37:void <init>(java.util.List,androidx.core.util.Pools$Pool) -> <init>
    42:58:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    63:68:boolean handles(java.lang.Object) -> handles
    73:73:java.lang.String toString() -> toString
com.bumptech.glide.load.model.MultiModelLoader$MultiFetcher -> com.bumptech.glide.load.model.MultiModelLoader$MultiFetcher:
    88:93:void <init>(java.util.List,androidx.core.util.Pools$Pool) -> <init>
    124:128:void cancel() -> cancel
    113:120:void cleanup() -> cleanup
    133:133:java.lang.Class getDataClass() -> getDataClass
    139:139:com.bumptech.glide.load.DataSource getDataSource() -> getDataSource
    97:109:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback) -> loadData
    144:149:void onDataReady(java.lang.Object) -> onDataReady
    153:155:void onLoadFailed(java.lang.Exception) -> onLoadFailed
    158:169:void startNextOrFail() -> startNextOrFail
com.bumptech.glide.load.model.MultiModelLoaderFactory -> com.bumptech.glide.load.model.MultiModelLoaderFactory:
    24:25:void <clinit>() -> <clinit>
    32:33:void <init>(androidx.core.util.Pools$Pool) -> <init>
    26:40:void <init>(androidx.core.util.Pools$Pool,com.bumptech.glide.load.model.MultiModelLoaderFactory$Factory) -> <init>
    61:63:void add(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory,boolean) -> add
    45:47:void append(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory) -> append
    92:112:java.util.List build(java.lang.Class) -> build
    130:165:com.bumptech.glide.load.model.ModelLoader build(java.lang.Class,java.lang.Class) -> build
    178:178:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory$Entry) -> build
    184:184:com.bumptech.glide.load.model.ModelLoader emptyModelLoader() -> emptyModelLoader
    117:124:java.util.List getDataClasses(java.lang.Class) -> getDataClasses
com.bumptech.glide.load.model.MultiModelLoaderFactory$EmptyModelLoader -> com.bumptech.glide.load.model.MultiModelLoaderFactory$EmptyModelLoader:
    221:221:void <init>() -> <init>
    227:227:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    232:232:boolean handles(java.lang.Object) -> handles
com.bumptech.glide.load.model.MultiModelLoaderFactory$Entry -> com.bumptech.glide.load.model.MultiModelLoaderFactory$Entry:
    195:199:void <init>(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory) -> <init>
    202:202:boolean handles(java.lang.Class,java.lang.Class) -> handles
    206:206:boolean handles(java.lang.Class) -> handles
com.bumptech.glide.load.model.MultiModelLoaderFactory$Factory -> com.bumptech.glide.load.model.MultiModelLoaderFactory$Factory:
    210:210:void <init>() -> <init>
    215:215:com.bumptech.glide.load.model.MultiModelLoader build(java.util.List,androidx.core.util.Pools$Pool) -> build
com.bumptech.glide.load.model.ResourceLoader -> com.bumptech.glide.load.model.ResourceLoader:
    27:30:void <init>(android.content.res.Resources,com.bumptech.glide.load.model.ModelLoader) -> <init>
    20:20:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    35:36:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Integer,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    42:54:android.net.Uri getResourceUri(java.lang.Integer) -> getResourceUri
    20:20:boolean handles(java.lang.Object) -> handles
    61:61:boolean handles(java.lang.Integer) -> handles
com.bumptech.glide.load.model.ResourceLoader$AssetFileDescriptorFactory -> com.bumptech.glide.load.model.ResourceLoader$AssetFileDescriptorFactory:
    114:116:void <init>(android.content.res.Resources) -> <init>
    120:121:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.ResourceLoader$FileDescriptorFactory -> com.bumptech.glide.load.model.ResourceLoader$FileDescriptorFactory:
    91:93:void <init>(android.content.res.Resources) -> <init>
    98:99:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.ResourceLoader$StreamFactory -> com.bumptech.glide.load.model.ResourceLoader$StreamFactory:
    69:71:void <init>(android.content.res.Resources) -> <init>
    76:76:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.ResourceLoader$UriFactory -> com.bumptech.glide.load.model.ResourceLoader$UriFactory:
    135:137:void <init>(android.content.res.Resources) -> <init>
    142:142:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.StreamEncoder -> com.bumptech.glide.load.model.StreamEncoder:
    21:23:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    17:17:boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options) -> encode
    27:52:boolean encode(java.io.InputStream,java.io.File,com.bumptech.glide.load.Options) -> encode
com.bumptech.glide.load.model.StringLoader -> com.bumptech.glide.load.model.StringLoader:
    24:26:void <init>(com.bumptech.glide.load.model.ModelLoader) -> <init>
    19:19:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    31:35:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.String,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    19:19:boolean handles(java.lang.Object) -> handles
    42:42:boolean handles(java.lang.String) -> handles
    48:60:android.net.Uri parseUri(java.lang.String) -> parseUri
    64:64:android.net.Uri toFileUri(java.lang.String) -> toFileUri
com.bumptech.glide.load.model.StringLoader$AssetFileDescriptorFactory -> com.bumptech.glide.load.model.StringLoader$AssetFileDescriptorFactory:
    100:100:void <init>() -> <init>
    106:106:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.StringLoader$FileDescriptorFactory -> com.bumptech.glide.load.model.StringLoader$FileDescriptorFactory:
    83:83:void <init>() -> <init>
    90:90:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.StringLoader$StreamFactory -> com.bumptech.glide.load.model.StringLoader$StreamFactory:
    68:68:void <init>() -> <init>
    73:73:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.UnitModelLoader -> com.bumptech.glide.load.model.UnitModelLoader:
    18:18:void <clinit>() -> <clinit>
    29:31:void <init>() -> <init>
    36:36:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    22:22:com.bumptech.glide.load.model.UnitModelLoader getInstance() -> getInstance
    41:41:boolean handles(java.lang.Object) -> handles
com.bumptech.glide.load.model.UnitModelLoader$Factory -> com.bumptech.glide.load.model.UnitModelLoader$Factory:
    91:91:void <clinit>() -> <clinit>
    102:104:void <init>() -> <init>
    109:109:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
    95:95:com.bumptech.glide.load.model.UnitModelLoader$Factory getInstance() -> getInstance
com.bumptech.glide.load.model.UnitModelLoader$UnitFetcher -> com.bumptech.glide.load.model.UnitModelLoader$UnitFetcher:
    48:50:void <init>(java.lang.Object) -> <init>
    66:66:void cancel() -> cancel
    61:61:void cleanup() -> cleanup
    72:72:java.lang.Class getDataClass() -> getDataClass
    78:78:com.bumptech.glide.load.DataSource getDataSource() -> getDataSource
    55:56:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback) -> loadData
com.bumptech.glide.load.model.UriLoader -> com.bumptech.glide.load.model.UriLoader:
    29:32:void <clinit>() -> <clinit>
    41:43:void <init>(com.bumptech.glide.load.model.UriLoader$LocalUriFetcherFactory) -> <init>
    28:28:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    48:48:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    28:28:boolean handles(java.lang.Object) -> handles
    53:53:boolean handles(android.net.Uri) -> handles
com.bumptech.glide.load.model.UriLoader$AssetFileDescriptorFactory -> com.bumptech.glide.load.model.UriLoader$AssetFileDescriptorFactory:
    127:129:void <init>(android.content.ContentResolver) -> <init>
    133:133:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
    143:143:com.bumptech.glide.load.data.DataFetcher build(android.net.Uri) -> build
com.bumptech.glide.load.model.UriLoader$FileDescriptorFactory -> com.bumptech.glide.load.model.UriLoader$FileDescriptorFactory:
    99:101:void <init>(android.content.ContentResolver) -> <init>
    105:105:com.bumptech.glide.load.data.DataFetcher build(android.net.Uri) -> build
    111:111:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.UriLoader$StreamFactory -> com.bumptech.glide.load.model.UriLoader$StreamFactory:
    71:73:void <init>(android.content.ContentResolver) -> <init>
    77:77:com.bumptech.glide.load.data.DataFetcher build(android.net.Uri) -> build
    83:83:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.UrlUriLoader -> com.bumptech.glide.load.model.UrlUriLoader:
    19:20:void <clinit>() -> <clinit>
    25:27:void <init>(com.bumptech.glide.load.model.ModelLoader) -> <init>
    18:18:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    32:33:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    18:18:boolean handles(java.lang.Object) -> handles
    38:38:boolean handles(android.net.Uri) -> handles
com.bumptech.glide.load.model.UrlUriLoader$StreamFactory -> com.bumptech.glide.load.model.UrlUriLoader$StreamFactory:
    45:45:void <init>() -> <init>
    50:50:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.stream.HttpGlideUrlLoader -> com.bumptech.glide.load.model.stream.HttpGlideUrlLoader:
    28:29:void <clinit>() -> <clinit>
    37:39:void <init>(com.bumptech.glide.load.model.ModelCache) -> <init>
    20:20:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    46:55:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(com.bumptech.glide.load.model.GlideUrl,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    20:20:boolean handles(java.lang.Object) -> handles
    60:60:boolean handles(com.bumptech.glide.load.model.GlideUrl) -> handles
com.bumptech.glide.load.model.stream.HttpGlideUrlLoader$Factory -> com.bumptech.glide.load.model.stream.HttpGlideUrlLoader$Factory:
    64:65:void <init>() -> <init>
    70:70:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.stream.MediaStoreImageThumbLoader -> com.bumptech.glide.load.model.stream.MediaStoreImageThumbLoader:
    24:26:void <init>(android.content.Context) -> <init>
    19:19:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    31:34:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    19:19:boolean handles(java.lang.Object) -> handles
    40:40:boolean handles(android.net.Uri) -> handles
com.bumptech.glide.load.model.stream.MediaStoreImageThumbLoader$Factory -> com.bumptech.glide.load.model.stream.MediaStoreImageThumbLoader$Factory:
    48:50:void <init>(android.content.Context) -> <init>
    55:55:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.stream.MediaStoreVideoThumbLoader -> com.bumptech.glide.load.model.stream.MediaStoreVideoThumbLoader:
    31:33:void <init>(android.content.Context) -> <init>
    26:26:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    39:42:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    26:26:boolean handles(java.lang.Object) -> handles
    53:53:boolean handles(android.net.Uri) -> handles
    47:48:boolean isRequestingDefaultFrame(com.bumptech.glide.load.Options) -> isRequestingDefaultFrame
com.bumptech.glide.load.model.stream.MediaStoreVideoThumbLoader$Factory -> com.bumptech.glide.load.model.stream.MediaStoreVideoThumbLoader$Factory:
    64:66:void <init>(android.content.Context) -> <init>
    71:71:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader -> com.bumptech.glide.load.model.stream.QMediaStoreUriLoader:
    72:77:void <init>(android.content.Context,com.bumptech.glide.load.model.ModelLoader,com.bumptech.glide.load.model.ModelLoader,java.lang.Class) -> <init>
    59:59:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    82:82:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    59:59:boolean handles(java.lang.Object) -> handles
    90:90:boolean handles(android.net.Uri) -> handles
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$Factory -> com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$Factory:
    248:251:void <init>(android.content.Context,java.lang.Class) -> <init>
    256:259:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$FileDescriptorFactory -> com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$FileDescriptorFactory:
    239:240:void <init>(android.content.Context) -> <init>
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$InputStreamFactory -> com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$InputStreamFactory:
    231:232:void <init>(android.content.Context) -> <init>
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$QMediaStoreUriFetcher -> com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$QMediaStoreUriFetcher:
    94:94:void <clinit>() -> <clinit>
    116:125:void <init>(android.content.Context,com.bumptech.glide.load.model.ModelLoader,com.bumptech.glide.load.model.ModelLoader,android.net.Uri,int,int,com.bumptech.glide.load.Options,java.lang.Class) -> <init>
    156:160:com.bumptech.glide.load.model.ModelLoader$LoadData buildDelegateData() -> buildDelegateData
    150:151:com.bumptech.glide.load.data.DataFetcher buildDelegateFetcher() -> buildDelegateFetcher
    174:179:void cancel() -> cancel
    166:170:void cleanup() -> cleanup
    184:184:java.lang.Class getDataClass() -> getDataClass
    190:190:com.bumptech.glide.load.DataSource getDataSource() -> getDataSource
    222:222:boolean isAccessMediaLocationGranted() -> isAccessMediaLocationGranted
    131:146:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback) -> loadData
    195:216:java.io.File queryForFilePath(android.net.Uri) -> queryForFilePath
com.bumptech.glide.load.model.stream.UrlLoader -> com.bumptech.glide.load.model.stream.UrlLoader:
    23:25:void <init>(com.bumptech.glide.load.model.ModelLoader) -> <init>
    18:18:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    30:30:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.net.URL,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    18:18:boolean handles(java.lang.Object) -> handles
    35:35:boolean handles(java.net.URL) -> handles
com.bumptech.glide.load.model.stream.UrlLoader$StreamFactory -> com.bumptech.glide.load.model.stream.UrlLoader$StreamFactory:
    39:39:void <init>() -> <init>
    44:44:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.resource.ImageDecoderResourceDecoder -> com.bumptech.glide.load.resource.ImageDecoderResourceDecoder:
    39:44:void <init>() -> <init>
    38:38:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    59:66:com.bumptech.glide.load.engine.Resource decode(android.graphics.ImageDecoder$Source,int,int,com.bumptech.glide.load.Options) -> decode
    38:38:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    48:48:boolean handles(android.graphics.ImageDecoder$Source,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.ImageDecoderResourceDecoder$1 -> com.bumptech.glide.load.resource.ImageDecoderResourceDecoder$1:
    70:70:void <init>(com.bumptech.glide.load.resource.ImageDecoderResourceDecoder,int,int,boolean,com.bumptech.glide.load.DecodeFormat,com.bumptech.glide.load.resource.bitmap.DownsampleStrategy,com.bumptech.glide.load.PreferredColorSpace) -> <init>
    74:144:void onHeaderDecoded(android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source) -> onHeaderDecoded
com.bumptech.glide.load.resource.ImageDecoderResourceDecoder$1$1 -> com.bumptech.glide.load.resource.ImageDecoderResourceDecoder$1$1:
    89:89:void <init>(com.bumptech.glide.load.resource.ImageDecoderResourceDecoder$1) -> <init>
    93:93:boolean onPartialImage(android.graphics.ImageDecoder$DecodeException) -> onPartialImage
com.bumptech.glide.load.resource.SimpleResource -> com.bumptech.glide.load.resource.SimpleResource:
    18:20:void <init>(java.lang.Object) -> <init>
    32:32:java.lang.Object get() -> get
    26:26:java.lang.Class getResourceClass() -> getResourceClass
    37:37:int getSize() -> getSize
    43:43:void recycle() -> recycle
com.bumptech.glide.load.resource.UnitTransformation -> com.bumptech.glide.load.resource.UnitTransformation:
    15:15:void <clinit>() -> <clinit>
    28:30:void <init>() -> <init>
    25:25:com.bumptech.glide.load.resource.UnitTransformation get() -> get
    36:36:com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int) -> transform
    42:42:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.resource.bitmap.BitmapDrawableDecoder -> com.bumptech.glide.load.resource.bitmap.BitmapDrawableDecoder:
    44:47:void <init>(android.content.res.Resources,com.bumptech.glide.load.ResourceDecoder) -> <init>
    58:59:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    51:51:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.bitmap.BitmapDrawableEncoder -> com.bumptech.glide.load.resource.bitmap.BitmapDrawableEncoder:
    19:22:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.ResourceEncoder) -> <init>
    14:14:boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options) -> encode
    27:27:boolean encode(com.bumptech.glide.load.engine.Resource,java.io.File,com.bumptech.glide.load.Options) -> encode
    33:33:com.bumptech.glide.load.EncodeStrategy getEncodeStrategy(com.bumptech.glide.load.Options) -> getEncodeStrategy
com.bumptech.glide.load.resource.bitmap.BitmapEncoder -> com.bumptech.glide.load.resource.bitmap.BitmapEncoder:
    39:50:void <clinit>() -> <clinit>
    55:57:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    33:33:boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options) -> encode
    68:116:boolean encode(com.bumptech.glide.load.engine.Resource,java.io.File,com.bumptech.glide.load.Options) -> encode
    134:134:com.bumptech.glide.load.EncodeStrategy getEncodeStrategy(com.bumptech.glide.load.Options) -> getEncodeStrategy
    121:127:android.graphics.Bitmap$CompressFormat getFormat(android.graphics.Bitmap,com.bumptech.glide.load.Options) -> getFormat
com.bumptech.glide.load.resource.bitmap.BitmapImageDecoderResourceDecoder -> com.bumptech.glide.load.resource.bitmap.BitmapImageDecoderResourceDecoder:
    17:19:void <init>() -> <init>
    28:44:com.bumptech.glide.load.engine.Resource decode(android.graphics.ImageDecoder$Source,int,int,android.graphics.ImageDecoder$OnHeaderDecodedListener) -> decode
com.bumptech.glide.load.resource.bitmap.BitmapResource -> com.bumptech.glide.load.resource.bitmap.BitmapResource:
    33:36:void <init>(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> <init>
    13:13:java.lang.Object get() -> get
    47:47:android.graphics.Bitmap get() -> get
    41:41:java.lang.Class getResourceClass() -> getResourceClass
    52:52:int getSize() -> getSize
    62:63:void initialize() -> initialize
    26:29:com.bumptech.glide.load.resource.bitmap.BitmapResource obtain(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> obtain
    57:58:void recycle() -> recycle
com.bumptech.glide.load.resource.bitmap.BitmapTransformation -> com.bumptech.glide.load.resource.bitmap.BitmapTransformation:
    67:67:void <init>() -> <init>
    73:93:com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int) -> transform
com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapDecoder -> com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapDecoder:
    17:19:void <init>(com.bumptech.glide.load.resource.bitmap.Downsampler) -> <init>
    14:14:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    30:31:com.bumptech.glide.load.engine.Resource decode(java.nio.ByteBuffer,int,int,com.bumptech.glide.load.Options) -> decode
    14:14:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    23:23:boolean handles(java.nio.ByteBuffer,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapImageDecoderResourceDecoder -> com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapImageDecoderResourceDecoder:
    20:22:void <init>() -> <init>
    19:19:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    34:35:com.bumptech.glide.load.engine.Resource decode(java.nio.ByteBuffer,int,int,com.bumptech.glide.load.Options) -> decode
    19:19:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    26:26:boolean handles(java.nio.ByteBuffer,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.bitmap.CenterCrop -> com.bumptech.glide.load.resource.bitmap.CenterCrop:
    17:17:void <clinit>() -> <clinit>
    15:15:void <init>() -> <init>
    27:27:boolean equals(java.lang.Object) -> equals
    32:32:int hashCode() -> hashCode
    22:22:android.graphics.Bitmap transform(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int) -> transform
    37:38:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.resource.bitmap.CenterInside -> com.bumptech.glide.load.resource.bitmap.CenterInside:
    17:17:void <clinit>() -> <clinit>
    15:15:void <init>() -> <init>
    27:27:boolean equals(java.lang.Object) -> equals
    32:32:int hashCode() -> hashCode
    22:22:android.graphics.Bitmap transform(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int) -> transform
    37:38:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser -> com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser:
    34:41:void <clinit>() -> <clinit>
    21:21:void <init>() -> <init>
    383:383:int calcTagOffset(int,int) -> calcTagOffset
    73:75:int getOrientation(java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> getOrientation
    167:195:int getOrientation(com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> getOrientation
    61:61:com.bumptech.glide.load.ImageHeaderParser$ImageType getType(java.io.InputStream) -> getType
    67:67:com.bumptech.glide.load.ImageHeaderParser$ImageType getType(java.nio.ByteBuffer) -> getType
    89:154:com.bumptech.glide.load.ImageHeaderParser$ImageType getType(com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader) -> getType
    387:387:boolean handles(int) -> handles
    227:237:boolean hasJpegExifPreamble(byte[],int) -> hasJpegExifPreamble
    246:286:int moveToExifSegmentAndGetLength(com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader) -> moveToExifSegmentAndGetLength
    201:222:int parseExifSegment(com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader,byte[],int) -> parseExifSegment
    290:379:int parseExifSegment(com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$RandomAccessReader) -> parseExifSegment
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$ByteBufferReader -> com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$ByteBufferReader:
    460:463:void <init>(java.nio.ByteBuffer) -> <init>
    475:475:int getUInt16() -> getUInt16
    467:470:short getUInt8() -> getUInt8
    480:485:int read(byte[],int) -> read
    490:492:long skip(long) -> skip
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$RandomAccessReader -> com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$RandomAccessReader:
    395:397:void <init>(byte[],int) -> <init>
    412:412:short getInt16(int) -> getInt16
    408:408:int getInt32(int) -> getInt32
    416:416:boolean isAvailable(int,int) -> isAvailable
    404:404:int length() -> length
    400:401:void order(java.nio.ByteOrder) -> order
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader$EndOfFileException -> com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader$EndOfFileException:
    451:452:void <init>() -> <init>
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$StreamReader -> com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$StreamReader:
    500:502:void <init>(java.io.InputStream) -> <init>
    516:516:int getUInt16() -> getUInt16
    506:511:short getUInt8() -> getUInt8
    521:532:int read(byte[],int) -> read
    537:559:long skip(long) -> skip
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy -> com.bumptech.glide.load.resource.bitmap.DownsampleStrategy:
    39:101:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$AtLeast -> com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$AtLeast:
    196:196:void <init>() -> <init>
    208:208:com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding getSampleSizeRounding(int,int,int,int) -> getSampleSizeRounding
    201:202:float getScaleFactor(int,int,int,int) -> getScaleFactor
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$AtMost -> com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$AtMost:
    215:215:void <init>() -> <init>
    235:235:com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding getSampleSizeRounding(int,int,int,int) -> getSampleSizeRounding
    220:229:float getScaleFactor(int,int,int,int) -> getScaleFactor
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$CenterInside -> com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$CenterInside:
    260:260:void <init>() -> <init>
    274:276:com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding getSampleSizeRounding(int,int,int,int) -> getSampleSizeRounding
    266:268:float getScaleFactor(int,int,int,int) -> getScaleFactor
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$CenterOutside -> com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$CenterOutside:
    176:176:void <init>() -> <init>
    189:189:com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding getSampleSizeRounding(int,int,int,int) -> getSampleSizeRounding
    181:183:float getScaleFactor(int,int,int,int) -> getScaleFactor
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$FitCenter -> com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$FitCenter:
    140:140:void <init>() -> <init>
    162:168:com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding getSampleSizeRounding(int,int,int,int) -> getSampleSizeRounding
    145:155:float getScaleFactor(int,int,int,int) -> getScaleFactor
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$None -> com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$None:
    242:242:void <init>() -> <init>
    253:253:com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding getSampleSizeRounding(int,int,int,int) -> getSampleSizeRounding
    247:247:float getScaleFactor(int,int,int,int) -> getScaleFactor
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding -> com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding:
    285:295:void <clinit>() -> <clinit>
    285:285:void <init>(java.lang.String,int) -> <init>
    285:285:com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding valueOf(java.lang.String) -> valueOf
    285:285:com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding[] values() -> values
com.bumptech.glide.load.resource.bitmap.Downsampler -> com.bumptech.glide.load.resource.bitmap.Downsampler:
    53:135:void <clinit>() -> <clinit>
    141:152:void <init>(java.util.List,android.util.DisplayMetrics,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    619:623:int adjustTargetDensityForError(double) -> adjustTargetDensityForError
    661:696:void calculateConfig(com.bumptech.glide.load.resource.bitmap.ImageReader,com.bumptech.glide.load.DecodeFormat,boolean,boolean,android.graphics.BitmapFactory$Options,int,int) -> calculateConfig
    434:611:void calculateScaling(com.bumptech.glide.load.ImageHeaderParser$ImageType,com.bumptech.glide.load.resource.bitmap.ImageReader,com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.resource.bitmap.DownsampleStrategy,int,int,int,int,int,android.graphics.BitmapFactory$Options) -> calculateScaling
    177:177:com.bumptech.glide.load.engine.Resource decode(java.io.InputStream,int,int,com.bumptech.glide.load.Options) -> decode
    207:207:com.bumptech.glide.load.engine.Resource decode(java.io.InputStream,int,int,com.bumptech.glide.load.Options,com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks) -> decode
    219:219:com.bumptech.glide.load.engine.Resource decode(android.os.ParcelFileDescriptor,int,int,com.bumptech.glide.load.Options) -> decode
    235:262:com.bumptech.glide.load.engine.Resource decode(com.bumptech.glide.load.resource.bitmap.ImageReader,int,int,com.bumptech.glide.load.Options,com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks) -> decode
    278:417:android.graphics.Bitmap decodeFromWrappedStreams(com.bumptech.glide.load.resource.bitmap.ImageReader,android.graphics.BitmapFactory$Options,com.bumptech.glide.load.resource.bitmap.DownsampleStrategy,com.bumptech.glide.load.DecodeFormat,com.bumptech.glide.load.PreferredColorSpace,boolean,int,int,boolean,com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks) -> decodeFromWrappedStreams
    724:766:android.graphics.Bitmap decodeStream(com.bumptech.glide.load.resource.bitmap.ImageReader,android.graphics.BitmapFactory$Options,com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> decodeStream
    820:833:java.lang.String getBitmapString(android.graphics.Bitmap) -> getBitmapString
    888:897:android.graphics.BitmapFactory$Options getDefaultOptions() -> getDefaultOptions
    627:630:int getDensityMultiplier(double) -> getDensityMultiplier
    712:715:int[] getDimensions(com.bumptech.glide.load.resource.bitmap.ImageReader,android.graphics.BitmapFactory$Options,com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> getDimensions
    814:814:java.lang.String getInBitmapString(android.graphics.BitmapFactory$Options) -> getInBitmapString
    156:156:boolean handles(java.io.InputStream) -> handles
    161:161:boolean handles(java.nio.ByteBuffer) -> handles
    165:165:boolean handles(android.os.ParcelFileDescriptor) -> handles
    937:937:boolean isRotationRequired(int) -> isRotationRequired
    770:770:boolean isScaling(android.graphics.BitmapFactory$Options) -> isScaling
    784:811:void logDecode(int,int,java.lang.String,android.graphics.BitmapFactory$Options,android.graphics.Bitmap,int,int,long) -> logDecode
    847:856:java.io.IOException newIoExceptionForInBitmapAssertion(java.lang.IllegalArgumentException,int,int,java.lang.String,android.graphics.BitmapFactory$Options) -> newIoExceptionForInBitmapAssertion
    901:905:void releaseOptions(android.graphics.BitmapFactory$Options) -> releaseOptions
    909:927:void resetOptions(android.graphics.BitmapFactory$Options) -> resetOptions
    636:636:int round(double) -> round
    864:885:void setInBitmap(android.graphics.BitmapFactory$Options,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int,int) -> setInBitmap
    642:643:boolean shouldUsePool(com.bumptech.glide.load.ImageHeaderParser$ImageType) -> shouldUsePool
com.bumptech.glide.load.resource.bitmap.Downsampler$1 -> com.bumptech.glide.load.resource.bitmap.Downsampler$1:
    118:118:void <init>() -> <init>
    127:127:void onDecodeComplete(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap) -> onDecodeComplete
    122:122:void onObtainBounds() -> onObtainBounds
com.bumptech.glide.load.resource.bitmap.DrawableToBitmapConverter -> com.bumptech.glide.load.resource.bitmap.DrawableToBitmapConverter:
    18:18:void <clinit>() -> <clinit>
    33:45:com.bumptech.glide.load.engine.Resource convert(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.drawable.Drawable,int,int) -> convert
    51:87:android.graphics.Bitmap drawToBitmap(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.drawable.Drawable,int,int) -> drawToBitmap
com.bumptech.glide.load.resource.bitmap.DrawableToBitmapConverter$1 -> com.bumptech.glide.load.resource.bitmap.DrawableToBitmapConverter$1:
    19:19:void <init>() -> <init>
    23:23:void put(android.graphics.Bitmap) -> put
com.bumptech.glide.load.resource.bitmap.DrawableTransformation -> com.bumptech.glide.load.resource.bitmap.DrawableTransformation:
    35:38:void <init>(com.bumptech.glide.load.Transformation,boolean) -> <init>
    42:42:com.bumptech.glide.load.Transformation asBitmapDrawable() -> asBitmapDrawable
    81:85:boolean equals(java.lang.Object) -> equals
    90:90:int hashCode() -> hashCode
    74:76:com.bumptech.glide.load.engine.Resource newDrawableResource(android.content.Context,com.bumptech.glide.load.engine.Resource) -> newDrawableResource
    49:67:com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int) -> transform
    95:96:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.resource.bitmap.ExifInterfaceImageHeaderParser -> com.bumptech.glide.load.resource.bitmap.ExifInterfaceImageHeaderParser:
    23:23:void <init>() -> <init>
    40:47:int getOrientation(java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> getOrientation
    28:28:com.bumptech.glide.load.ImageHeaderParser$ImageType getType(java.io.InputStream) -> getType
    34:34:com.bumptech.glide.load.ImageHeaderParser$ImageType getType(java.nio.ByteBuffer) -> getType
com.bumptech.glide.load.resource.bitmap.FitCenter -> com.bumptech.glide.load.resource.bitmap.FitCenter:
    15:15:void <clinit>() -> <clinit>
    13:13:void <init>() -> <init>
    25:25:boolean equals(java.lang.Object) -> equals
    30:30:int hashCode() -> hashCode
    20:20:android.graphics.Bitmap transform(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int) -> transform
    35:36:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.resource.bitmap.HardwareConfigState -> com.bumptech.glide.load.resource.bitmap.HardwareConfigState:
    28:86:void <clinit>() -> <clinit>
    95:127:void <init>() -> <init>
    203:204:boolean areHardwareBitmapsBlockedByAppState() -> areHardwareBitmapsBlockedByAppState
    107:114:com.bumptech.glide.load.resource.bitmap.HardwareConfigState getInstance() -> getInstance
    294:296:int getMaxFdCount() -> getMaxFdCount
    299:317:boolean isFdSizeBelowHardwareLimit() -> isFdSizeBelowHardwareLimit
    149:199:boolean isHardwareConfigAllowed(int,int,boolean,boolean) -> isHardwareConfigAllowed
    225:225:boolean isHardwareConfigAllowedByDeviceModel() -> isHardwareConfigAllowedByDeviceModel
    259:290:boolean isHardwareConfigDisallowedByB112551574() -> isHardwareConfigDisallowedByB112551574
    229:255:boolean isHardwareConfigDisallowedByB147430447() -> isHardwareConfigDisallowedByB147430447
    214:221:boolean setHardwareConfigIfAllowed(int,int,android.graphics.BitmapFactory$Options,boolean,boolean) -> setHardwareConfigIfAllowed
com.bumptech.glide.load.resource.bitmap.ImageReader$InputStreamImageReader -> com.bumptech.glide.load.resource.bitmap.ImageReader$InputStreamImageReader:
    40:45:void <init>(java.io.InputStream,java.util.List,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    50:50:android.graphics.Bitmap decodeBitmap(android.graphics.BitmapFactory$Options) -> decodeBitmap
    60:61:int getImageOrientation() -> getImageOrientation
    55:55:com.bumptech.glide.load.ImageHeaderParser$ImageType getImageType() -> getImageType
    66:67:void stopGrowingBuffers() -> stopGrowingBuffers
com.bumptech.glide.load.resource.bitmap.ImageReader$ParcelFileDescriptorImageReader -> com.bumptech.glide.load.resource.bitmap.ImageReader$ParcelFileDescriptorImageReader:
    79:84:void <init>(android.os.ParcelFileDescriptor,java.util.List,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    89:90:android.graphics.Bitmap decodeBitmap(android.graphics.BitmapFactory$Options) -> decodeBitmap
    100:100:int getImageOrientation() -> getImageOrientation
    95:95:com.bumptech.glide.load.ImageHeaderParser$ImageType getImageType() -> getImageType
    106:106:void stopGrowingBuffers() -> stopGrowingBuffers
com.bumptech.glide.load.resource.bitmap.InputStreamBitmapImageDecoderResourceDecoder -> com.bumptech.glide.load.resource.bitmap.InputStreamBitmapImageDecoderResourceDecoder:
    19:21:void <init>() -> <init>
    18:18:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    33:35:com.bumptech.glide.load.engine.Resource decode(java.io.InputStream,int,int,com.bumptech.glide.load.Options) -> decode
    18:18:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    25:25:boolean handles(java.io.InputStream,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.bitmap.LazyBitmapDrawableResource -> com.bumptech.glide.load.resource.bitmap.LazyBitmapDrawableResource:
    57:60:void <init>(android.content.res.Resources,com.bumptech.glide.load.engine.Resource) -> <init>
    19:19:java.lang.Object get() -> get
    71:71:android.graphics.drawable.BitmapDrawable get() -> get
    65:65:java.lang.Class getResourceClass() -> getResourceClass
    76:76:int getSize() -> getSize
    86:89:void initialize() -> initialize
    50:53:com.bumptech.glide.load.engine.Resource obtain(android.content.res.Resources,com.bumptech.glide.load.engine.Resource) -> obtain
    81:82:void recycle() -> recycle
com.bumptech.glide.load.resource.bitmap.ParcelFileDescriptorBitmapDecoder -> com.bumptech.glide.load.resource.bitmap.ParcelFileDescriptorBitmapDecoder:
    21:23:void <init>(com.bumptech.glide.load.resource.bitmap.Downsampler) -> <init>
    15:15:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    35:35:com.bumptech.glide.load.engine.Resource decode(android.os.ParcelFileDescriptor,int,int,com.bumptech.glide.load.Options) -> decode
    15:15:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    27:27:boolean handles(android.os.ParcelFileDescriptor,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream -> com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream:
    62:63:void <init>(java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    54:71:void <init>(java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,int) -> <init>
    83:88:int available() -> available
    123:132:void close() -> close
    135:175:int fillbuf(java.io.InputStream,byte[]) -> fillbuf
    104:106:void fixMarkLimit() -> fixMarkLimit
    192:195:void mark(int) -> mark
    207:207:boolean markSupported() -> markSupported
    222:246:int read() -> read
    266:328:int read(byte[],int,int) -> read
    108:113:void release() -> release
    339:348:void reset() -> reset
    360:403:long skip(long) -> skip
    92:92:java.io.IOException streamClosed() -> streamClosed
com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream$InvalidMarkException -> com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream$InvalidMarkException:
    414:415:void <init>(java.lang.String) -> <init>
com.bumptech.glide.load.resource.bitmap.ResourceBitmapDecoder -> com.bumptech.glide.load.resource.bitmap.ResourceBitmapDecoder:
    35:38:void <init>(com.bumptech.glide.load.resource.drawable.ResourceDrawableDecoder,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> <init>
    30:30:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    49:54:com.bumptech.glide.load.engine.Resource decode(android.net.Uri,int,int,com.bumptech.glide.load.Options) -> decode
    30:30:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    42:42:boolean handles(android.net.Uri,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder -> com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder:
    23:26:void <init>(com.bumptech.glide.load.resource.bitmap.Downsampler,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    18:18:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    41:66:com.bumptech.glide.load.engine.Resource decode(java.io.InputStream,int,int,com.bumptech.glide.load.Options) -> decode
    18:18:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    30:30:boolean handles(java.io.InputStream,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder$UntrustedCallbacks -> com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder$UntrustedCallbacks:
    81:84:void <init>(com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream,com.bumptech.glide.util.ExceptionPassthroughInputStream) -> <init>
    100:107:void onDecodeComplete(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap) -> onDecodeComplete
    91:92:void onObtainBounds() -> onObtainBounds
com.bumptech.glide.load.resource.bitmap.TransformationUtils -> com.bumptech.glide.load.resource.bitmap.TransformationUtils:
    38:91:void <clinit>() -> <clinit>
    583:591:void applyMatrix(android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Matrix) -> applyMatrix
    114:140:android.graphics.Bitmap centerCrop(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int) -> centerCrop
    217:226:android.graphics.Bitmap centerInside(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int) -> centerInside
    573:574:void clear(android.graphics.Canvas) -> clear
    156:201:android.graphics.Bitmap fitCenter(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int) -> fitCenter
    98:98:java.util.concurrent.locks.Lock getBitmapDrawableLock() -> getBitmapDrawableLock
    284:301:int getExifOrientationDegrees(int) -> getExifOrientationDegrees
    578:578:android.graphics.Bitmap$Config getNonNullConfig(android.graphics.Bitmap) -> getNonNullConfig
    595:623:void initializeMatrixForRotation(int,android.graphics.Matrix) -> initializeMatrixForRotation
    344:354:boolean isExifOrientationRequired(int) -> isExifOrientationRequired
    314:336:android.graphics.Bitmap rotateImageExif(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int) -> rotateImageExif
    240:241:void setAlpha(android.graphics.Bitmap,android.graphics.Bitmap) -> setAlpha
com.bumptech.glide.load.resource.bitmap.TransformationUtils$NoLock -> com.bumptech.glide.load.resource.bitmap.TransformationUtils$NoLock:
    634:634:void <init>() -> <init>
    639:639:void lock() -> lock
    644:644:void lockInterruptibly() -> lockInterruptibly
    664:664:java.util.concurrent.locks.Condition newCondition() -> newCondition
    648:648:boolean tryLock() -> tryLock
    653:653:boolean tryLock(long,java.util.concurrent.TimeUnit) -> tryLock
    659:659:void unlock() -> unlock
com.bumptech.glide.load.resource.bitmap.UnitBitmapDecoder -> com.bumptech.glide.load.resource.bitmap.UnitBitmapDecoder:
    14:14:void <init>() -> <init>
    14:14:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    24:24:com.bumptech.glide.load.engine.Resource decode(android.graphics.Bitmap,int,int,com.bumptech.glide.load.Options) -> decode
    14:14:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    18:18:boolean handles(android.graphics.Bitmap,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.bitmap.UnitBitmapDecoder$NonOwnedBitmapResource -> com.bumptech.glide.load.resource.bitmap.UnitBitmapDecoder$NonOwnedBitmapResource:
    31:33:void <init>(android.graphics.Bitmap) -> <init>
    27:27:java.lang.Object get() -> get
    44:44:android.graphics.Bitmap get() -> get
    38:38:java.lang.Class getResourceClass() -> getResourceClass
    49:49:int getSize() -> getSize
    55:55:void recycle() -> recycle
com.bumptech.glide.load.resource.bitmap.VideoDecoder -> com.bumptech.glide.load.resource.bitmap.VideoDecoder:
    56:110:void <clinit>() -> <clinit>
    131:132:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.resource.bitmap.VideoDecoder$MediaMetadataRetrieverInitializer) -> <init>
    138:142:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.resource.bitmap.VideoDecoder$MediaMetadataRetrieverInitializer,com.bumptech.glide.load.resource.bitmap.VideoDecoder$MediaMetadataRetrieverFactory) -> <init>
    118:118:com.bumptech.glide.load.ResourceDecoder asset(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> asset
    127:127:com.bumptech.glide.load.ResourceDecoder byteBuffer(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> byteBuffer
    156:186:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    197:225:android.graphics.Bitmap decodeFrame(android.media.MediaMetadataRetriever,long,int,int,int,com.bumptech.glide.load.resource.bitmap.DownsampleStrategy) -> decodeFrame
    284:284:android.graphics.Bitmap decodeOriginalFrame(android.media.MediaMetadataRetriever,long,int) -> decodeOriginalFrame
    238:278:android.graphics.Bitmap decodeScaledFrame(android.media.MediaMetadataRetriever,long,int,int,int,com.bumptech.glide.load.resource.bitmap.DownsampleStrategy) -> decodeScaledFrame
    149:149:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    122:122:com.bumptech.glide.load.ResourceDecoder parcel(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> parcel
com.bumptech.glide.load.resource.bitmap.VideoDecoder$1 -> com.bumptech.glide.load.resource.bitmap.VideoDecoder$1:
    60:61:void <init>() -> <init>
    60:60:void update(byte[],java.lang.Object,java.security.MessageDigest) -> update
    68:73:void update(byte[],java.lang.Long,java.security.MessageDigest) -> update
com.bumptech.glide.load.resource.bitmap.VideoDecoder$2 -> com.bumptech.glide.load.resource.bitmap.VideoDecoder$2:
    90:91:void <init>() -> <init>
    90:90:void update(byte[],java.lang.Object,java.security.MessageDigest) -> update
    99:107:void update(byte[],java.lang.Integer,java.security.MessageDigest) -> update
com.bumptech.glide.load.resource.bitmap.VideoDecoder$AssetFileDescriptorInitializer -> com.bumptech.glide.load.resource.bitmap.VideoDecoder$AssetFileDescriptorInitializer:
    299:299:void <init>() -> <init>
    299:299:void <init>(com.bumptech.glide.load.resource.bitmap.VideoDecoder$1) -> <init>
    299:299:void initialize(android.media.MediaMetadataRetriever,java.lang.Object) -> initialize
    304:305:void initialize(android.media.MediaMetadataRetriever,android.content.res.AssetFileDescriptor) -> initialize
com.bumptech.glide.load.resource.bitmap.VideoDecoder$ByteBufferInitializer -> com.bumptech.glide.load.resource.bitmap.VideoDecoder$ByteBufferInitializer:
    319:319:void <init>() -> <init>
    318:318:void initialize(android.media.MediaMetadataRetriever,java.lang.Object) -> initialize
    324:345:void initialize(android.media.MediaMetadataRetriever,java.nio.ByteBuffer) -> initialize
com.bumptech.glide.load.resource.bitmap.VideoDecoder$ByteBufferInitializer$1 -> com.bumptech.glide.load.resource.bitmap.VideoDecoder$ByteBufferInitializer$1:
    325:325:void <init>(com.bumptech.glide.load.resource.bitmap.VideoDecoder$ByteBufferInitializer,java.nio.ByteBuffer) -> <init>
    343:343:void close() -> close
    339:339:long getSize() -> getSize
    328:334:int readAt(long,byte[],int,int) -> readAt
com.bumptech.glide.load.resource.bitmap.VideoDecoder$MediaMetadataRetrieverFactory -> com.bumptech.glide.load.resource.bitmap.VideoDecoder$MediaMetadataRetrieverFactory:
    288:288:void <init>() -> <init>
    290:290:android.media.MediaMetadataRetriever build() -> build
com.bumptech.glide.load.resource.bitmap.VideoDecoder$ParcelFileDescriptorInitializer -> com.bumptech.glide.load.resource.bitmap.VideoDecoder$ParcelFileDescriptorInitializer:
    309:309:void <init>() -> <init>
    309:309:void initialize(android.media.MediaMetadataRetriever,java.lang.Object) -> initialize
    314:315:void initialize(android.media.MediaMetadataRetriever,android.os.ParcelFileDescriptor) -> initialize
com.bumptech.glide.load.resource.bitmap.VideoDecoder$VideoDecoderException -> com.bumptech.glide.load.resource.bitmap.VideoDecoder$VideoDecoderException:
    353:356:void <init>() -> <init>
com.bumptech.glide.load.resource.bytes.ByteBufferRewinder -> com.bumptech.glide.load.resource.bytes.ByteBufferRewinder:
    13:15:void <init>(java.nio.ByteBuffer) -> <init>
    27:27:void cleanup() -> cleanup
    8:8:java.lang.Object rewindAndGet() -> rewindAndGet
    20:21:java.nio.ByteBuffer rewindAndGet() -> rewindAndGet
com.bumptech.glide.load.resource.bytes.ByteBufferRewinder$Factory -> com.bumptech.glide.load.resource.bytes.ByteBufferRewinder$Factory:
    30:30:void <init>() -> <init>
    30:30:com.bumptech.glide.load.data.DataRewinder build(java.lang.Object) -> build
    35:35:com.bumptech.glide.load.data.DataRewinder build(java.nio.ByteBuffer) -> build
    41:41:java.lang.Class getDataClass() -> getDataClass
com.bumptech.glide.load.resource.bytes.BytesResource -> com.bumptech.glide.load.resource.bytes.BytesResource:
    11:13:void <init>(byte[]) -> <init>
    8:8:java.lang.Object get() -> get
    34:34:byte[] get() -> get
    18:18:java.lang.Class getResourceClass() -> getResourceClass
    39:39:int getSize() -> getSize
    45:45:void recycle() -> recycle
com.bumptech.glide.load.resource.drawable.DrawableDecoderCompat -> com.bumptech.glide.load.resource.drawable.DrawableDecoderCompat:
    19:19:void <clinit>() -> <clinit>
    28:28:android.graphics.drawable.Drawable getDrawable(android.content.Context,android.content.Context,int) -> getDrawable
    40:40:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,android.content.res.Resources$Theme) -> getDrawable
    48:63:android.graphics.drawable.Drawable getDrawable(android.content.Context,android.content.Context,int,android.content.res.Resources$Theme) -> getDrawable
    74:75:android.graphics.drawable.Drawable loadDrawableV4(android.content.Context,int,android.content.res.Resources$Theme) -> loadDrawableV4
    68:69:android.graphics.drawable.Drawable loadDrawableV7(android.content.Context,int,android.content.res.Resources$Theme) -> loadDrawableV7
com.bumptech.glide.load.resource.drawable.DrawableResource -> com.bumptech.glide.load.resource.drawable.DrawableResource:
    26:28:void <init>(android.graphics.drawable.Drawable) -> <init>
    23:23:java.lang.Object get() -> get
    34:42:android.graphics.drawable.Drawable get() -> get
    47:52:void initialize() -> initialize
com.bumptech.glide.load.resource.drawable.NonOwnedDrawableResource -> com.bumptech.glide.load.resource.drawable.NonOwnedDrawableResource:
    21:22:void <init>(android.graphics.drawable.Drawable) -> <init>
    28:28:java.lang.Class getResourceClass() -> getResourceClass
    35:35:int getSize() -> getSize
    17:17:com.bumptech.glide.load.engine.Resource newInstance(android.graphics.drawable.Drawable) -> newInstance
    41:41:void recycle() -> recycle
com.bumptech.glide.load.resource.drawable.ResourceDrawableDecoder -> com.bumptech.glide.load.resource.drawable.ResourceDrawableDecoder:
    48:50:void <init>(android.content.Context) -> <init>
    25:25:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    61:66:com.bumptech.glide.load.engine.Resource decode(android.net.Uri,int,int,com.bumptech.glide.load.Options) -> decode
    72:84:android.content.Context findContextForPackage(android.net.Uri,java.lang.String) -> findContextForPackage
    121:125:int findResourceIdFromResourceIdUri(android.net.Uri) -> findResourceIdFromResourceIdUri
    104:115:int findResourceIdFromTypeAndNameResourceUri(android.content.Context,android.net.Uri) -> findResourceIdFromTypeAndNameResourceUri
    91:97:int findResourceIdFromUri(android.content.Context,android.net.Uri) -> findResourceIdFromUri
    25:25:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    54:54:boolean handles(android.net.Uri,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.drawable.UnitDrawableDecoder -> com.bumptech.glide.load.resource.drawable.UnitDrawableDecoder:
    11:11:void <init>() -> <init>
    11:11:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    21:21:com.bumptech.glide.load.engine.Resource decode(android.graphics.drawable.Drawable,int,int,com.bumptech.glide.load.Options) -> decode
    11:11:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    14:14:boolean handles(android.graphics.drawable.Drawable,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.file.FileDecoder -> com.bumptech.glide.load.resource.file.FileDecoder:
    13:13:void <init>() -> <init>
    13:13:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    23:23:com.bumptech.glide.load.engine.Resource decode(java.io.File,int,int,com.bumptech.glide.load.Options) -> decode
    13:13:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    17:17:boolean handles(java.io.File,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.file.FileResource -> com.bumptech.glide.load.resource.file.FileResource:
    11:12:void <init>(java.io.File) -> <init>
com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder -> com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder:
    37:38:void <clinit>() -> <clinit>
    61:62:void <init>(android.content.Context,java.util.List,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    71:77:void <init>(android.content.Context,java.util.List,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$GifHeaderParserPool,com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$GifDecoderFactory) -> <init>
    35:35:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    88:92:com.bumptech.glide.load.resource.gif.GifDrawableResource decode(java.nio.ByteBuffer,int,int,com.bumptech.glide.load.Options) -> decode
    99:129:com.bumptech.glide.load.resource.gif.GifDrawableResource decode(java.nio.ByteBuffer,int,int,com.bumptech.glide.gifdecoder.GifHeaderParser,com.bumptech.glide.load.Options) -> decode
    135:158:int getSampleSize(com.bumptech.glide.gifdecoder.GifHeader,int,int) -> getSampleSize
    35:35:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    81:82:boolean handles(java.nio.ByteBuffer,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$GifDecoderFactory -> com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$GifDecoderFactory:
    162:162:void <init>() -> <init>
    165:165:com.bumptech.glide.gifdecoder.GifDecoder build(com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.gifdecoder.GifHeader,java.nio.ByteBuffer,int) -> build
com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$GifHeaderParserPool -> com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$GifHeaderParserPool:
    170:171:void <init>() -> <init>
    173:178:com.bumptech.glide.gifdecoder.GifHeaderParser obtain(java.nio.ByteBuffer) -> obtain
    181:184:void release(com.bumptech.glide.gifdecoder.GifHeaderParser) -> release
com.bumptech.glide.load.resource.gif.GifBitmapProvider -> com.bumptech.glide.load.resource.gif.GifBitmapProvider:
    29:32:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    37:37:android.graphics.Bitmap obtain(int,int,android.graphics.Bitmap$Config) -> obtain
    48:51:byte[] obtainByteArray(int) -> obtainByteArray
    65:68:int[] obtainIntArray(int) -> obtainIntArray
    42:43:void release(android.graphics.Bitmap) -> release
    56:60:void release(byte[]) -> release
    74:78:void release(int[]) -> release
com.bumptech.glide.load.resource.gif.GifDrawable -> com.bumptech.glide.load.resource.gif.GifDrawable:
    128:138:void <init>(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,com.bumptech.glide.load.Transformation,int,int,android.graphics.Bitmap) -> <init>
    61:142:void <init>(com.bumptech.glide.load.resource.gif.GifDrawable$GifState) -> <init>
    281:292:void draw(android.graphics.Canvas) -> draw
    326:330:android.graphics.drawable.Drawable$Callback findCallback() -> findCallback
    170:170:java.nio.ByteBuffer getBuffer() -> getBuffer
    363:363:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    305:308:android.graphics.Rect getDestRect() -> getDestRect
    155:155:android.graphics.Bitmap getFirstFrame() -> getFirstFrame
    174:174:int getFrameCount() -> getFrameCount
    184:184:int getFrameIndex() -> getFrameIndex
    260:260:int getIntrinsicHeight() -> getIntrinsicHeight
    255:255:int getIntrinsicWidth() -> getIntrinsicWidth
    321:321:int getOpacity() -> getOpacity
    312:315:android.graphics.Paint getPaint() -> getPaint
    151:151:int getSize() -> getSize
    265:265:boolean isRunning() -> isRunning
    354:359:void notifyAnimationEndToListeners() -> notifyAnimationEndToListeners
    275:277:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    335:351:void onFrameReady() -> onFrameReady
    368:370:void recycle() -> recycle
    188:189:void resetLoopCount() -> resetLoopCount
    296:297:void setAlpha(int) -> setAlpha
    301:302:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    162:163:void setFrameTransformation(com.bumptech.glide.load.Transformation,android.graphics.Bitmap) -> setFrameTransformation
    239:250:boolean setVisible(boolean,boolean) -> setVisible
    204:209:void start() -> start
    218:230:void startRunning() -> startRunning
    213:215:void stop() -> stop
    233:235:void stopRunning() -> stopRunning
com.bumptech.glide.load.resource.gif.GifDrawable$GifState -> com.bumptech.glide.load.resource.gif.GifDrawable$GifState:
    434:436:void <init>(com.bumptech.glide.load.resource.gif.GifFrameLoader) -> <init>
    452:452:int getChangingConfigurations() -> getChangingConfigurations
    441:441:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    447:447:android.graphics.drawable.Drawable newDrawable() -> newDrawable
com.bumptech.glide.load.resource.gif.GifDrawableEncoder -> com.bumptech.glide.load.resource.gif.GifDrawableEncoder:
    17:17:void <init>() -> <init>
    17:17:boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options) -> encode
    29:39:boolean encode(com.bumptech.glide.load.engine.Resource,java.io.File,com.bumptech.glide.load.Options) -> encode
    23:23:com.bumptech.glide.load.EncodeStrategy getEncodeStrategy(com.bumptech.glide.load.Options) -> getEncodeStrategy
com.bumptech.glide.load.resource.gif.GifDrawableResource -> com.bumptech.glide.load.resource.gif.GifDrawableResource:
    12:13:void <init>(com.bumptech.glide.load.resource.gif.GifDrawable) -> <init>
    18:18:java.lang.Class getResourceClass() -> getResourceClass
    23:23:int getSize() -> getSize
    34:35:void initialize() -> initialize
    28:30:void recycle() -> recycle
com.bumptech.glide.load.resource.gif.GifDrawableTransformation -> com.bumptech.glide.load.resource.gif.GifDrawableTransformation:
    22:24:void <init>(com.bumptech.glide.load.Transformation) -> <init>
    55:59:boolean equals(java.lang.Object) -> equals
    64:64:int hashCode() -> hashCode
    33:50:com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int) -> transform
    69:70:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.resource.gif.GifFrameLoader -> com.bumptech.glide.load.resource.gif.GifFrameLoader:
    71:79:void <init>(com.bumptech.glide.Glide,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.Transformation,android.graphics.Bitmap) -> <init>
    37:101:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.RequestManager,com.bumptech.glide.gifdecoder.GifDecoder,android.os.Handler,com.bumptech.glide.RequestBuilder,com.bumptech.glide.load.Transformation,android.graphics.Bitmap) -> <init>
    185:202:void clear() -> clear
    159:159:java.nio.ByteBuffer getBuffer() -> getBuffer
    205:205:android.graphics.Bitmap getCurrentFrame() -> getCurrentFrame
    155:155:int getCurrentIndex() -> getCurrentIndex
    118:118:android.graphics.Bitmap getFirstFrame() -> getFirstFrame
    163:163:int getFrameCount() -> getFrameCount
    363:363:com.bumptech.glide.load.Key getFrameSignature() -> getFrameSignature
    147:147:int getHeight() -> getHeight
    351:357:com.bumptech.glide.RequestBuilder getRequestBuilder(com.bumptech.glide.RequestManager,int,int) -> getRequestBuilder
    151:151:int getSize() -> getSize
    143:143:int getWidth() -> getWidth
    209:233:void loadNextFrame() -> loadNextFrame
    258:295:void onFrameReady(com.bumptech.glide.load.resource.gif.GifFrameLoader$DelayTarget) -> onFrameReady
    236:240:void recycleFirstFrame() -> recycleFirstFrame
    104:111:void setFrameTransformation(com.bumptech.glide.load.Transformation,android.graphics.Bitmap) -> setFrameTransformation
    171:178:void start() -> start
    181:182:void stop() -> stop
    122:133:void subscribe(com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback) -> subscribe
    136:140:void unsubscribe(com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback) -> unsubscribe
com.bumptech.glide.load.resource.gif.GifFrameLoader$DelayTarget -> com.bumptech.glide.load.resource.gif.GifFrameLoader$DelayTarget:
    325:329:void <init>(android.os.Handler,int,long) -> <init>
    332:332:android.graphics.Bitmap getResource() -> getResource
    345:346:void onLoadCleared(android.graphics.drawable.Drawable) -> onLoadCleared
    318:318:void onResourceReady(java.lang.Object,com.bumptech.glide.request.transition.Transition) -> onResourceReady
    338:341:void onResourceReady(android.graphics.Bitmap,com.bumptech.glide.request.transition.Transition) -> onResourceReady
com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameLoaderCallback -> com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameLoaderCallback:
    302:302:void <init>(com.bumptech.glide.load.resource.gif.GifFrameLoader) -> <init>
    306:314:boolean handleMessage(android.os.Message) -> handleMessage
com.bumptech.glide.load.resource.gif.GifFrameResourceDecoder -> com.bumptech.glide.load.resource.gif.GifFrameResourceDecoder:
    19:21:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> <init>
    16:16:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    31:32:com.bumptech.glide.load.engine.Resource decode(com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.Options) -> decode
    16:16:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    25:25:boolean handles(com.bumptech.glide.gifdecoder.GifDecoder,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.gif.GifOptions -> com.bumptech.glide.load.resource.gif.GifOptions:
    16:26:void <clinit>() -> <clinit>
com.bumptech.glide.load.resource.gif.StreamGifDecoder -> com.bumptech.glide.load.resource.gif.StreamGifDecoder:
    33:37:void <init>(java.util.List,com.bumptech.glide.load.ResourceDecoder,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    23:23:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    49:54:com.bumptech.glide.load.engine.Resource decode(java.io.InputStream,int,int,com.bumptech.glide.load.Options) -> decode
    23:23:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    41:42:boolean handles(java.io.InputStream,com.bumptech.glide.load.Options) -> handles
    58:73:byte[] inputStreamToBytes(java.io.InputStream) -> inputStreamToBytes
com.bumptech.glide.load.resource.transcode.BitmapBytesTranscoder -> com.bumptech.glide.load.resource.transcode.BitmapBytesTranscoder:
    21:22:void <init>() -> <init>
    26:29:void <init>(android.graphics.Bitmap$CompressFormat,int) -> <init>
    35:38:com.bumptech.glide.load.engine.Resource transcode(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.Options) -> transcode
com.bumptech.glide.load.resource.transcode.BitmapDrawableTranscoder -> com.bumptech.glide.load.resource.transcode.BitmapDrawableTranscoder:
    35:37:void <init>(android.content.res.Resources) -> <init>
    43:43:com.bumptech.glide.load.engine.Resource transcode(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.Options) -> transcode
com.bumptech.glide.load.resource.transcode.DrawableBytesTranscoder -> com.bumptech.glide.load.resource.transcode.DrawableBytesTranscoder:
    26:30:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.resource.transcode.ResourceTranscoder,com.bumptech.glide.load.resource.transcode.ResourceTranscoder) -> <init>
    49:49:com.bumptech.glide.load.engine.Resource toGifDrawableResource(com.bumptech.glide.load.engine.Resource) -> toGifDrawableResource
    36:43:com.bumptech.glide.load.engine.Resource transcode(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.Options) -> transcode
com.bumptech.glide.load.resource.transcode.GifDrawableBytesTranscoder -> com.bumptech.glide.load.resource.transcode.GifDrawableBytesTranscoder:
    17:17:void <init>() -> <init>
    22:24:com.bumptech.glide.load.engine.Resource transcode(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.Options) -> transcode
com.bumptech.glide.load.resource.transcode.TranscoderRegistry -> com.bumptech.glide.load.resource.transcode.TranscoderRegistry:
    12:13:void <init>() -> <init>
    48:58:com.bumptech.glide.load.resource.transcode.ResourceTranscoder get(java.lang.Class,java.lang.Class) -> get
    64:78:java.util.List getTranscodeClasses(java.lang.Class,java.lang.Class) -> getTranscodeClasses
    28:30:void register(java.lang.Class,java.lang.Class,com.bumptech.glide.load.resource.transcode.ResourceTranscoder) -> register
com.bumptech.glide.load.resource.transcode.TranscoderRegistry$Entry -> com.bumptech.glide.load.resource.transcode.TranscoderRegistry$Entry:
    89:93:void <init>(java.lang.Class,java.lang.Class,com.bumptech.glide.load.resource.transcode.ResourceTranscoder) -> <init>
    102:102:boolean handles(java.lang.Class,java.lang.Class) -> handles
com.bumptech.glide.load.resource.transcode.UnitTranscoder -> com.bumptech.glide.load.resource.transcode.UnitTranscoder:
    14:14:void <clinit>() -> <clinit>
    13:13:void <init>() -> <init>
    18:18:com.bumptech.glide.load.resource.transcode.ResourceTranscoder get() -> get
    24:24:com.bumptech.glide.load.engine.Resource transcode(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.Options) -> transcode
com.bumptech.glide.manager.ActivityFragmentLifecycle -> com.bumptech.glide.manager.ActivityFragmentLifecycle:
    13:15:void <init>() -> <init>
    32:41:void addListener(com.bumptech.glide.manager.LifecycleListener) -> addListener
    63:67:void onDestroy() -> onDestroy
    49:53:void onStart() -> onStart
    56:60:void onStop() -> onStop
    45:46:void removeListener(com.bumptech.glide.manager.LifecycleListener) -> removeListener
com.bumptech.glide.manager.ApplicationLifecycle -> com.bumptech.glide.manager.ApplicationLifecycle:
    12:12:void <init>() -> <init>
    15:16:void addListener(com.bumptech.glide.manager.LifecycleListener) -> addListener
    21:21:void removeListener(com.bumptech.glide.manager.LifecycleListener) -> removeListener
com.bumptech.glide.manager.DefaultConnectivityMonitor -> com.bumptech.glide.manager.DefaultConnectivityMonitor:
    30:49:void <init>(android.content.Context,com.bumptech.glide.manager.ConnectivityMonitor$ConnectivityListener) -> <init>
    85:101:boolean isConnected(android.content.Context) -> isConnected
    117:117:void onDestroy() -> onDestroy
    106:107:void onStart() -> onStart
    111:112:void onStop() -> onStop
    52:69:void register() -> register
    72:78:void unregister() -> unregister
com.bumptech.glide.manager.DefaultConnectivityMonitor$1 -> com.bumptech.glide.manager.DefaultConnectivityMonitor$1:
    31:31:void <init>(com.bumptech.glide.manager.DefaultConnectivityMonitor) -> <init>
    34:43:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.bumptech.glide.manager.DefaultConnectivityMonitorFactory -> com.bumptech.glide.manager.DefaultConnectivityMonitorFactory:
    15:15:void <init>() -> <init>
    23:34:com.bumptech.glide.manager.ConnectivityMonitor build(android.content.Context,com.bumptech.glide.manager.ConnectivityMonitor$ConnectivityListener) -> build
com.bumptech.glide.manager.DoNothingFirstFrameWaiter -> com.bumptech.glide.manager.DoNothingFirstFrameWaiter:
    5:5:void <init>() -> <init>
    10:10:void registerSelf(android.app.Activity) -> registerSelf
com.bumptech.glide.manager.EmptyRequestManagerTreeNode -> com.bumptech.glide.manager.EmptyRequestManagerTreeNode:
    9:9:void <init>() -> <init>
    13:13:java.util.Set getDescendants() -> getDescendants
com.bumptech.glide.manager.FirstFrameAndAfterTrimMemoryWaiter -> com.bumptech.glide.manager.FirstFrameAndAfterTrimMemoryWaiter:
    11:11:void <init>() -> <init>
    20:20:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    24:25:void onLowMemory() -> onLowMemory
    17:17:void onTrimMemory(int) -> onTrimMemory
    14:14:void registerSelf(android.app.Activity) -> registerSelf
com.bumptech.glide.manager.FirstFrameWaiter -> com.bumptech.glide.manager.FirstFrameWaiter:
    8:8:void <init>() -> <init>
    11:11:void registerSelf(android.app.Activity) -> registerSelf
com.bumptech.glide.manager.NullConnectivityMonitor -> com.bumptech.glide.manager.NullConnectivityMonitor:
    4:4:void <init>() -> <init>
    19:19:void onDestroy() -> onDestroy
    9:9:void onStart() -> onStart
    14:14:void onStop() -> onStop
com.bumptech.glide.manager.RequestManagerFragment -> com.bumptech.glide.manager.RequestManagerFragment:
    48:49:void <init>() -> <init>
    33:55:void <init>(com.bumptech.glide.manager.ActivityFragmentLifecycle) -> <init>
    85:86:void addChildRequestManagerFragment(com.bumptech.glide.manager.RequestManagerFragment) -> addChildRequestManagerFragment
    102:117:java.util.Set getDescendantRequestManagerFragments() -> getDescendantRequestManagerFragments
    68:68:com.bumptech.glide.manager.ActivityFragmentLifecycle getGlideLifecycle() -> getGlideLifecycle
    136:141:android.app.Fragment getParentFragmentUsingHint() -> getParentFragmentUsingHint
    74:74:com.bumptech.glide.RequestManager getRequestManager() -> getRequestManager
    80:80:com.bumptech.glide.manager.RequestManagerTreeNode getRequestManagerTreeNode() -> getRequestManagerTreeNode
    147:155:boolean isDescendant(android.app.Fragment) -> isDescendant
    178:187:void onAttach(android.app.Activity) -> onAttach
    209:212:void onDestroy() -> onDestroy
    191:193:void onDetach() -> onDetach
    197:199:void onStart() -> onStart
    203:205:void onStop() -> onStop
    160:166:void registerFragmentWithRoot(android.app.Activity) -> registerFragmentWithRoot
    90:91:void removeChildRequestManagerFragment(com.bumptech.glide.manager.RequestManagerFragment) -> removeChildRequestManagerFragment
    126:130:void setParentFragmentHint(android.app.Fragment) -> setParentFragmentHint
    63:64:void setRequestManager(com.bumptech.glide.RequestManager) -> setRequestManager
    216:216:java.lang.String toString() -> toString
    169:173:void unregisterFragmentWithRoot() -> unregisterFragmentWithRoot
com.bumptech.glide.manager.RequestManagerFragment$FragmentRequestManagerTreeNode -> com.bumptech.glide.manager.RequestManagerFragment$FragmentRequestManagerTreeNode:
    222:222:void <init>(com.bumptech.glide.manager.RequestManagerFragment) -> <init>
    228:235:java.util.Set getDescendants() -> getDescendants
    241:241:java.lang.String toString() -> toString
com.bumptech.glide.manager.RequestManagerRetriever -> com.bumptech.glide.manager.RequestManagerRetriever:
    519:519:void <clinit>() -> <clinit>
    54:84:void <init>(com.bumptech.glide.manager.RequestManagerRetriever$RequestManagerFactory,com.bumptech.glide.GlideExperiments) -> <init>
    347:350:void assertNotDestroyed(android.app.Activity) -> assertNotDestroyed
    87:93:com.bumptech.glide.manager.FrameWaiter buildFrameWaiter(com.bumptech.glide.GlideExperiments) -> buildFrameWaiter
    336:341:android.app.Activity findActivity(android.content.Context) -> findActivity
    296:306:void findAllFragmentsWithViews(android.app.FragmentManager,androidx.collection.ArrayMap) -> findAllFragmentsWithViews
    313:332:void findAllFragmentsWithViewsPreO(android.app.FragmentManager,androidx.collection.ArrayMap) -> findAllFragmentsWithViewsPreO
    225:236:void findAllSupportFragmentsWithViews(java.util.Collection,java.util.Map) -> findAllSupportFragmentsWithViews
    266:285:android.app.Fragment findFragment(android.view.View,android.app.Activity) -> findFragment
    240:259:androidx.fragment.app.Fragment findSupportFragment(android.view.View,androidx.fragment.app.FragmentActivity) -> findSupportFragment
    409:425:com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean) -> fragmentGet
    124:140:com.bumptech.glide.RequestManager get(android.content.Context) -> get
    145:151:com.bumptech.glide.RequestManager get(androidx.fragment.app.FragmentActivity) -> get
    157:171:com.bumptech.glide.RequestManager get(androidx.fragment.app.Fragment) -> get
    178:186:com.bumptech.glide.RequestManager get(android.app.Activity) -> get
    193:220:com.bumptech.glide.RequestManager get(android.view.View) -> get
    357:372:com.bumptech.glide.RequestManager get(android.app.Fragment) -> get
    99:119:com.bumptech.glide.RequestManager getApplicationManager(android.content.Context) -> getApplicationManager
    380:380:com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.Activity) -> getRequestManagerFragment
    387:398:com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager,android.app.Fragment) -> getRequestManagerFragment
    430:430:com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(androidx.fragment.app.FragmentManager) -> getSupportRequestManagerFragment
    443:455:com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> getSupportRequestManagerFragment
    485:506:boolean handleMessage(android.os.Message) -> handleMessage
    436:437:boolean isActivityVisible(android.content.Context) -> isActivityVisible
    464:480:com.bumptech.glide.RequestManager supportFragmentGet(android.content.Context,androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,boolean) -> supportFragmentGet
com.bumptech.glide.manager.RequestManagerRetriever$1 -> com.bumptech.glide.manager.RequestManagerRetriever$1:
    520:520:void <init>() -> <init>
    528:528:com.bumptech.glide.RequestManager build(com.bumptech.glide.Glide,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.manager.RequestManagerTreeNode,android.content.Context) -> build
com.bumptech.glide.manager.RequestTracker -> com.bumptech.glide.manager.RequestTracker:
    20:34:void <init>() -> <init>
    63:74:boolean clearAndRemove(com.bumptech.glide.request.Request) -> clearAndRemove
    127:133:void clearRequests() -> clearRequests
    98:105:void pauseAllRequests() -> pauseAllRequests
    84:94:void pauseRequests() -> pauseRequests
    137:148:void restartRequests() -> restartRequests
    109:119:void resumeRequests() -> resumeRequests
    41:51:void runRequest(com.bumptech.glide.request.Request) -> runRequest
    152:152:java.lang.String toString() -> toString
com.bumptech.glide.manager.SupportRequestManagerFragment -> com.bumptech.glide.manager.SupportRequestManagerFragment:
    39:40:void <init>() -> <init>
    30:46:void <init>(com.bumptech.glide.manager.ActivityFragmentLifecycle) -> <init>
    78:79:void addChildRequestManagerFragment(com.bumptech.glide.manager.SupportRequestManagerFragment) -> addChildRequestManagerFragment
    92:104:java.util.Set getDescendantRequestManagerFragments() -> getDescendantRequestManagerFragments
    59:59:com.bumptech.glide.manager.ActivityFragmentLifecycle getGlideLifecycle() -> getGlideLifecycle
    134:135:androidx.fragment.app.Fragment getParentFragmentUsingHint() -> getParentFragmentUsingHint
    65:65:com.bumptech.glide.RequestManager getRequestManager() -> getRequestManager
    74:74:com.bumptech.glide.manager.RequestManagerTreeNode getRequestManagerTreeNode() -> getRequestManagerTreeNode
    126:129:androidx.fragment.app.FragmentManager getRootFragmentManager(androidx.fragment.app.Fragment) -> getRootFragmentManager
    140:148:boolean isDescendant(androidx.fragment.app.Fragment) -> isDescendant
    172:191:void onAttach(android.content.Context) -> onAttach
    214:217:void onDestroy() -> onDestroy
    195:198:void onDetach() -> onDetach
    202:204:void onStart() -> onStart
    208:210:void onStop() -> onStop
    153:161:void registerFragmentWithRoot(android.content.Context,androidx.fragment.app.FragmentManager) -> registerFragmentWithRoot
    82:83:void removeChildRequestManagerFragment(com.bumptech.glide.manager.SupportRequestManagerFragment) -> removeChildRequestManagerFragment
    113:122:void setParentFragmentHint(androidx.fragment.app.Fragment) -> setParentFragmentHint
    54:55:void setRequestManager(com.bumptech.glide.RequestManager) -> setRequestManager
    221:221:java.lang.String toString() -> toString
    164:168:void unregisterFragmentWithRoot() -> unregisterFragmentWithRoot
com.bumptech.glide.manager.SupportRequestManagerFragment$SupportFragmentRequestManagerTreeNode -> com.bumptech.glide.manager.SupportRequestManagerFragment$SupportFragmentRequestManagerTreeNode:
    227:227:void <init>(com.bumptech.glide.manager.SupportRequestManagerFragment) -> <init>
    232:240:java.util.Set getDescendants() -> getDescendants
    245:245:java.lang.String toString() -> toString
com.bumptech.glide.manager.TargetTracker -> com.bumptech.glide.manager.TargetTracker:
    15:17:void <init>() -> <init>
    54:55:void clear() -> clear
    50:50:java.util.List getAll() -> getAll
    43:46:void onDestroy() -> onDestroy
    29:32:void onStart() -> onStart
    36:39:void onStop() -> onStop
    20:21:void track(com.bumptech.glide.request.target.Target) -> track
    24:25:void untrack(com.bumptech.glide.request.target.Target) -> untrack
com.bumptech.glide.module.AppGlideModule -> com.bumptech.glide.module.AppGlideModule:
    26:26:void <init>() -> <init>
    42:42:void applyOptions(android.content.Context,com.bumptech.glide.GlideBuilder) -> applyOptions
    36:36:boolean isManifestParsingEnabled() -> isManifestParsingEnabled
com.bumptech.glide.module.LibraryGlideModule -> com.bumptech.glide.module.LibraryGlideModule:
    20:20:void <init>() -> <init>
    25:25:void registerComponents(android.content.Context,com.bumptech.glide.Glide,com.bumptech.glide.Registry) -> registerComponents
com.bumptech.glide.module.ManifestParser -> com.bumptech.glide.module.ManifestParser:
    23:25:void <init>(android.content.Context) -> <init>
    29:62:java.util.List parse() -> parse
    69:91:com.bumptech.glide.module.GlideModule parseModule(java.lang.String) -> parseModule
    95:95:void throwInstantiateGlideModuleException(java.lang.Class,java.lang.Exception) -> throwInstantiateGlideModuleException
com.bumptech.glide.provider.EncoderRegistry -> com.bumptech.glide.provider.EncoderRegistry:
    11:13:void <init>() -> <init>
    26:28:void append(java.lang.Class,com.bumptech.glide.load.Encoder) -> append
    17:23:com.bumptech.glide.load.Encoder getEncoder(java.lang.Class) -> getEncoder
com.bumptech.glide.provider.EncoderRegistry$Entry -> com.bumptech.glide.provider.EncoderRegistry$Entry:
    41:44:void <init>(java.lang.Class,com.bumptech.glide.load.Encoder) -> <init>
    47:47:boolean handles(java.lang.Class) -> handles
com.bumptech.glide.provider.ImageHeaderParserRegistry -> com.bumptech.glide.provider.ImageHeaderParserRegistry:
    9:10:void <init>() -> <init>
    17:19:void add(com.bumptech.glide.load.ImageHeaderParser) -> add
    14:14:java.util.List getParsers() -> getParsers
com.bumptech.glide.provider.LoadPathCache -> com.bumptech.glide.provider.LoadPathCache:
    18:28:void <clinit>() -> <clinit>
    17:34:void <init>() -> <init>
    54:61:com.bumptech.glide.load.engine.LoadPath get(java.lang.Class,java.lang.Class,java.lang.Class) -> get
    78:83:com.bumptech.glide.util.MultiClassKey getKey(java.lang.Class,java.lang.Class,java.lang.Class) -> getKey
    42:42:boolean isEmptyLoadPath(com.bumptech.glide.load.engine.LoadPath) -> isEmptyLoadPath
    69:74:void put(java.lang.Class,java.lang.Class,java.lang.Class,com.bumptech.glide.load.engine.LoadPath) -> put
com.bumptech.glide.provider.ModelToResourceClassCache -> com.bumptech.glide.provider.ModelToResourceClassCache:
    14:16:void <init>() -> <init>
    24:35:java.util.List get(java.lang.Class,java.lang.Class,java.lang.Class) -> get
    43:47:void put(java.lang.Class,java.lang.Class,java.lang.Class,java.util.List) -> put
com.bumptech.glide.provider.ResourceDecoderRegistry -> com.bumptech.glide.provider.ResourceDecoderRegistry:
    16:18:void <init>() -> <init>
    82:84:void append(java.lang.String,com.bumptech.glide.load.ResourceDecoder,java.lang.Class,java.lang.Class) -> append
    40:55:java.util.List getDecoders(java.lang.Class,java.lang.Class) -> getDecoders
    95:105:java.util.List getOrAddEntryList(java.lang.String) -> getOrAddEntryList
    61:75:java.util.List getResourceClasses(java.lang.Class,java.lang.Class) -> getResourceClasses
    20:35:void setBucketPriorityList(java.util.List) -> setBucketPriorityList
com.bumptech.glide.provider.ResourceDecoderRegistry$Entry -> com.bumptech.glide.provider.ResourceDecoderRegistry$Entry:
    116:120:void <init>(java.lang.Class,java.lang.Class,com.bumptech.glide.load.ResourceDecoder) -> <init>
    123:124:boolean handles(java.lang.Class,java.lang.Class) -> handles
com.bumptech.glide.provider.ResourceEncoderRegistry -> com.bumptech.glide.provider.ResourceEncoderRegistry:
    14:16:void <init>() -> <init>
    19:21:void append(java.lang.Class,com.bumptech.glide.load.ResourceEncoder) -> append
    31:39:com.bumptech.glide.load.ResourceEncoder get(java.lang.Class) -> get
com.bumptech.glide.provider.ResourceEncoderRegistry$Entry -> com.bumptech.glide.provider.ResourceEncoderRegistry$Entry:
    46:49:void <init>(java.lang.Class,com.bumptech.glide.load.ResourceEncoder) -> <init>
    53:53:boolean handles(java.lang.Class) -> handles
com.bumptech.glide.request.BaseRequestOptions -> com.bumptech.glide.request.BaseRequestOptions:
    49:99:void <init>() -> <init>
    1103:1195:com.bumptech.glide.request.BaseRequestOptions apply(com.bumptech.glide.request.BaseRequestOptions) -> apply
    1276:1281:com.bumptech.glide.request.BaseRequestOptions autoClone() -> autoClone
    722:722:com.bumptech.glide.request.BaseRequestOptions centerCrop() -> centerCrop
    48:48:java.lang.Object clone() -> clone
    532:541:com.bumptech.glide.request.BaseRequestOptions clone() -> clone
    561:567:com.bumptech.glide.request.BaseRequestOptions decode(java.lang.Class) -> decode
    213:219:com.bumptech.glide.request.BaseRequestOptions diskCacheStrategy(com.bumptech.glide.load.engine.DiskCacheStrategy) -> diskCacheStrategy
    676:676:com.bumptech.glide.request.BaseRequestOptions downsample(com.bumptech.glide.load.resource.bitmap.DownsampleStrategy) -> downsample
    1200:1224:boolean equals(java.lang.Object) -> equals
    754:754:com.bumptech.glide.request.BaseRequestOptions fitCenter() -> fitCenter
    1327:1327:com.bumptech.glide.load.engine.DiskCacheStrategy getDiskCacheStrategy() -> getDiskCacheStrategy
    1338:1338:int getErrorId() -> getErrorId
    1333:1333:android.graphics.drawable.Drawable getErrorPlaceholder() -> getErrorPlaceholder
    1360:1360:android.graphics.drawable.Drawable getFallbackDrawable() -> getFallbackDrawable
    1354:1354:int getFallbackId() -> getFallbackId
    1426:1426:boolean getOnlyRetrieveFromCache() -> getOnlyRetrieveFromCache
    1317:1317:com.bumptech.glide.load.Options getOptions() -> getOptions
    1396:1396:int getOverrideHeight() -> getOverrideHeight
    1388:1388:int getOverrideWidth() -> getOverrideWidth
    1349:1349:android.graphics.drawable.Drawable getPlaceholderDrawable() -> getPlaceholderDrawable
    1343:1343:int getPlaceholderId() -> getPlaceholderId
    1384:1384:com.bumptech.glide.Priority getPriority() -> getPriority
    1322:1322:java.lang.Class getResourceClass() -> getResourceClass
    1375:1375:com.bumptech.glide.load.Key getSignature() -> getSignature
    1400:1400:float getSizeMultiplier() -> getSizeMultiplier
    1365:1365:android.content.res.Resources$Theme getTheme() -> getTheme
    1307:1307:java.util.Map getTransformations() -> getTransformations
    1420:1420:boolean getUseAnimationPool() -> getUseAnimationPool
    1414:1414:boolean getUseUnlimitedSourceGeneratorsPool() -> getUseUnlimitedSourceGeneratorsPool
    1229:1250:int hashCode() -> hashCode
    1294:1294:boolean isAutoCloneEnabled() -> isAutoCloneEnabled
    1370:1370:boolean isMemoryCacheable() -> isMemoryCacheable
    1379:1379:boolean isPrioritySet() -> isPrioritySet
    1404:1404:boolean isScaleOnlyOrNoTransform() -> isScaleOnlyOrNoTransform
    103:103:boolean isSet(int,int) -> isSet
    1408:1408:boolean isSet(int) -> isSet
    571:571:boolean isTransformationAllowed() -> isTransformationAllowed
    1312:1312:boolean isTransformationRequired() -> isTransformationRequired
    575:575:boolean isTransformationSet() -> isTransformationSet
    1392:1392:boolean isValidOverride() -> isValidOverride
    1261:1263:com.bumptech.glide.request.BaseRequestOptions lock() -> lock
    707:707:com.bumptech.glide.request.BaseRequestOptions optionalCenterCrop() -> optionalCenterCrop
    770:770:com.bumptech.glide.request.BaseRequestOptions optionalCenterInside() -> optionalCenterInside
    738:738:com.bumptech.glide.request.BaseRequestOptions optionalFitCenter() -> optionalFitCenter
    858:858:com.bumptech.glide.request.BaseRequestOptions optionalScaleOnlyTransform(com.bumptech.glide.load.resource.bitmap.DownsampleStrategy,com.bumptech.glide.load.Transformation) -> optionalScaleOnlyTransform
    825:830:com.bumptech.glide.request.BaseRequestOptions optionalTransform(com.bumptech.glide.load.resource.bitmap.DownsampleStrategy,com.bumptech.glide.load.Transformation) -> optionalTransform
    462:470:com.bumptech.glide.request.BaseRequestOptions override(int,int) -> override
    277:287:com.bumptech.glide.request.BaseRequestOptions placeholder(int) -> placeholder
    231:238:com.bumptech.glide.request.BaseRequestOptions priority(com.bumptech.glide.Priority) -> priority
    852:852:com.bumptech.glide.request.BaseRequestOptions scaleOnlyTransform(com.bumptech.glide.load.resource.bitmap.DownsampleStrategy,com.bumptech.glide.load.Transformation) -> scaleOnlyTransform
    869:873:com.bumptech.glide.request.BaseRequestOptions scaleOnlyTransform(com.bumptech.glide.load.resource.bitmap.DownsampleStrategy,com.bumptech.glide.load.Transformation,boolean) -> scaleOnlyTransform
    1431:1431:com.bumptech.glide.request.BaseRequestOptions self() -> self
    1287:1290:com.bumptech.glide.request.BaseRequestOptions selfOrThrowIfLocked() -> selfOrThrowIfLocked
    548:555:com.bumptech.glide.request.BaseRequestOptions set(com.bumptech.glide.load.Option,java.lang.Object) -> set
    501:507:com.bumptech.glide.request.BaseRequestOptions signature(com.bumptech.glide.load.Key) -> signature
    118:128:com.bumptech.glide.request.BaseRequestOptions sizeMultiplier(float) -> sizeMultiplier
    440:447:com.bumptech.glide.request.BaseRequestOptions skipMemoryCache(boolean) -> skipMemoryCache
    841:846:com.bumptech.glide.request.BaseRequestOptions transform(com.bumptech.glide.load.resource.bitmap.DownsampleStrategy,com.bumptech.glide.load.Transformation) -> transform
    893:893:com.bumptech.glide.request.BaseRequestOptions transform(com.bumptech.glide.load.Transformation) -> transform
    965:979:com.bumptech.glide.request.BaseRequestOptions transform(com.bumptech.glide.load.Transformation,boolean) -> transform
    1011:1028:com.bumptech.glide.request.BaseRequestOptions transform(java.lang.Class,com.bumptech.glide.load.Transformation,boolean) -> transform
    171:178:com.bumptech.glide.request.BaseRequestOptions useAnimationPool(boolean) -> useAnimationPool
com.bumptech.glide.request.ErrorRequestCoordinator -> com.bumptech.glide.request.ErrorRequestCoordinator:
    18:27:void <init>(java.lang.Object,com.bumptech.glide.request.RequestCoordinator) -> <init>
    36:42:void begin() -> begin
    123:125:boolean canNotifyCleared(com.bumptech.glide.request.Request) -> canNotifyCleared
    116:118:boolean canNotifyStatusChanged(com.bumptech.glide.request.Request) -> canNotifyStatusChanged
    104:106:boolean canSetImage(com.bumptech.glide.request.Request) -> canSetImage
    46:56:void clear() -> clear
    187:189:com.bumptech.glide.request.RequestCoordinator getRoot() -> getRoot
    146:148:boolean isAnyResourceSet() -> isAnyResourceSet
    88:90:boolean isCleared() -> isCleared
    81:83:boolean isComplete() -> isComplete
    95:99:boolean isEquivalentTo(com.bumptech.glide.request.Request) -> isEquivalentTo
    74:76:boolean isRunning() -> isRunning
    140:141:boolean isValidRequest(com.bumptech.glide.request.Request) -> isValidRequest
    167:183:void onRequestFailed(com.bumptech.glide.request.Request) -> onRequestFailed
    153:163:void onRequestSuccess(com.bumptech.glide.request.Request) -> onRequestSuccess
    130:130:boolean parentCanNotifyCleared() -> parentCanNotifyCleared
    135:135:boolean parentCanNotifyStatusChanged() -> parentCanNotifyStatusChanged
    111:111:boolean parentCanSetImage() -> parentCanSetImage
    60:70:void pause() -> pause
    30:32:void setRequests(com.bumptech.glide.request.Request,com.bumptech.glide.request.Request) -> setRequests
com.bumptech.glide.request.RequestCoordinator$RequestState -> com.bumptech.glide.request.RequestCoordinator$RequestState:
    51:56:void <clinit>() -> <clinit>
    60:63:void <init>(java.lang.String,int,boolean) -> <init>
    66:66:boolean isComplete() -> isComplete
    51:51:com.bumptech.glide.request.RequestCoordinator$RequestState valueOf(java.lang.String) -> valueOf
    51:51:com.bumptech.glide.request.RequestCoordinator$RequestState[] values() -> values
com.bumptech.glide.request.RequestOptions -> com.bumptech.glide.request.RequestOptions:
    26:26:void <init>() -> <init>
    213:213:com.bumptech.glide.request.RequestOptions decodeTypeOf(java.lang.Class) -> decodeTypeOf
    52:52:com.bumptech.glide.request.RequestOptions diskCacheStrategyOf(com.bumptech.glide.load.engine.DiskCacheStrategy) -> diskCacheStrategyOf
    134:134:com.bumptech.glide.request.RequestOptions signatureOf(com.bumptech.glide.load.Key) -> signatureOf
com.bumptech.glide.request.SingleRequest -> com.bumptech.glide.request.SingleRequest:
    41:41:void <clinit>() -> <clinit>
    58:210:void <init>(android.content.Context,com.bumptech.glide.GlideContext,java.lang.Object,java.lang.Object,java.lang.Class,com.bumptech.glide.request.BaseRequestOptions,int,int,com.bumptech.glide.Priority,com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,java.util.List,com.bumptech.glide.request.RequestCoordinator,com.bumptech.glide.load.engine.Engine,com.bumptech.glide.request.transition.TransitionFactory,java.util.concurrent.Executor) -> <init>
    288:295:void assertNotCallingCallbacks() -> assertNotCallingCallbacks
    214:264:void begin() -> begin
    495:495:boolean canNotifyCleared() -> canNotifyCleared
    500:500:boolean canNotifyStatusChanged() -> canNotifyStatusChanged
    490:490:boolean canSetResource() -> canSetResource
    276:283:void cancel() -> cancel
    307:330:void clear() -> clear
    371:377:android.graphics.drawable.Drawable getErrorDrawable() -> getErrorDrawable
    393:399:android.graphics.drawable.Drawable getFallbackDrawable() -> getFallbackDrawable
    656:657:java.lang.Object getLock() -> getLock
    382:388:android.graphics.drawable.Drawable getPlaceholderDrawable() -> getPlaceholderDrawable
    364:366:boolean isAnyResourceSet() -> isAnyResourceSet
    357:359:boolean isCleared() -> isCleared
    350:352:boolean isComplete() -> isComplete
    703:749:boolean isEquivalentTo(com.bumptech.glide.request.Request) -> isEquivalentTo
    505:505:boolean isFirstReadyResource() -> isFirstReadyResource
    343:345:boolean isRunning() -> isRunning
    405:406:android.graphics.drawable.Drawable loadDrawable(int) -> loadDrawable
    758:759:void logV(java.lang.String) -> logV
    485:485:int maybeApplySizeMultiplier(int,float) -> maybeApplySizeMultiplier
    517:520:void notifyLoadFailed() -> notifyLoadFailed
    510:513:void notifyLoadSuccess() -> notifyLoadSuccess
    151:151:com.bumptech.glide.request.SingleRequest obtain(android.content.Context,com.bumptech.glide.GlideContext,java.lang.Object,java.lang.Object,java.lang.Class,com.bumptech.glide.request.BaseRequestOptions,int,int,com.bumptech.glide.Priority,com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,java.util.List,com.bumptech.glide.request.RequestCoordinator,com.bumptech.glide.load.engine.Engine,com.bumptech.glide.request.transition.TransitionFactory,java.util.concurrent.Executor) -> obtain
    651:652:void onLoadFailed(com.bumptech.glide.load.engine.GlideException) -> onLoadFailed
    661:699:void onLoadFailed(com.bumptech.glide.load.engine.GlideException,int) -> onLoadFailed
    527:586:void onResourceReady(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.DataSource,boolean) -> onResourceReady
    602:646:void onResourceReady(com.bumptech.glide.load.engine.Resource,java.lang.Object,com.bumptech.glide.load.DataSource,boolean) -> onResourceReady
    433:482:void onSizeReady(int,int) -> onSizeReady
    334:339:void pause() -> pause
    411:428:void setErrorPlaceholder() -> setErrorPlaceholder
com.bumptech.glide.request.SingleRequest$Status -> com.bumptech.glide.request.SingleRequest$Status:
    43:55:void <clinit>() -> <clinit>
    43:43:void <init>(java.lang.String,int) -> <init>
    43:43:com.bumptech.glide.request.SingleRequest$Status valueOf(java.lang.String) -> valueOf
    43:43:com.bumptech.glide.request.SingleRequest$Status[] values() -> values
com.bumptech.glide.request.ThumbnailRequestCoordinator -> com.bumptech.glide.request.ThumbnailRequestCoordinator:
    17:29:void <init>(java.lang.Object,com.bumptech.glide.request.RequestCoordinator) -> <init>
    136:153:void begin() -> begin
    69:71:boolean canNotifyCleared(com.bumptech.glide.request.Request) -> canNotifyCleared
    62:64:boolean canNotifyStatusChanged(com.bumptech.glide.request.Request) -> canNotifyStatusChanged
    44:46:boolean canSetImage(com.bumptech.glide.request.Request) -> canSetImage
    157:164:void clear() -> clear
    128:130:com.bumptech.glide.request.RequestCoordinator getRoot() -> getRoot
    86:88:boolean isAnyResourceSet() -> isAnyResourceSet
    196:198:boolean isCleared() -> isCleared
    189:191:boolean isComplete() -> isComplete
    203:208:boolean isEquivalentTo(com.bumptech.glide.request.Request) -> isEquivalentTo
    182:184:boolean isRunning() -> isRunning
    113:124:void onRequestFailed(com.bumptech.glide.request.Request) -> onRequestFailed
    93:109:void onRequestSuccess(com.bumptech.glide.request.Request) -> onRequestSuccess
    76:76:boolean parentCanNotifyCleared() -> parentCanNotifyCleared
    81:81:boolean parentCanNotifyStatusChanged() -> parentCanNotifyStatusChanged
    51:51:boolean parentCanSetImage() -> parentCanSetImage
    168:178:void pause() -> pause
    32:34:void setRequests(com.bumptech.glide.request.Request,com.bumptech.glide.request.Request) -> setRequests
com.bumptech.glide.request.target.BaseTarget -> com.bumptech.glide.request.target.BaseTarget:
    28:28:void <init>() -> <init>
    71:71:void onDestroy() -> onDestroy
    46:46:void onLoadCleared(android.graphics.drawable.Drawable) -> onLoadCleared
    56:56:void onLoadFailed(android.graphics.drawable.Drawable) -> onLoadFailed
    51:51:void onLoadStarted(android.graphics.drawable.Drawable) -> onLoadStarted
    61:61:void onStart() -> onStart
    66:66:void onStop() -> onStop
com.bumptech.glide.request.target.BitmapImageViewTarget -> com.bumptech.glide.request.target.BitmapImageViewTarget:
    14:15:void <init>(android.widget.ImageView) -> <init>
    10:10:void setResource(java.lang.Object) -> setResource
    33:34:void setResource(android.graphics.Bitmap) -> setResource
com.bumptech.glide.request.target.CustomTarget -> com.bumptech.glide.request.target.CustomTarget:
    54:55:void <init>() -> <init>
    66:78:void <init>(int,int) -> <init>
    123:123:com.bumptech.glide.request.Request getRequest() -> getRequest
    107:108:void getSize(com.bumptech.glide.request.target.SizeReadyCallback) -> getSize
    93:93:void onDestroy() -> onDestroy
    103:103:void onLoadFailed(android.graphics.drawable.Drawable) -> onLoadFailed
    98:98:void onLoadStarted(android.graphics.drawable.Drawable) -> onLoadStarted
    83:83:void onStart() -> onStart
    88:88:void onStop() -> onStop
    113:113:void removeCallback(com.bumptech.glide.request.target.SizeReadyCallback) -> removeCallback
    117:118:void setRequest(com.bumptech.glide.request.Request) -> setRequest
com.bumptech.glide.request.target.DrawableImageViewTarget -> com.bumptech.glide.request.target.DrawableImageViewTarget:
    11:12:void <init>(android.widget.ImageView) -> <init>
    8:8:void setResource(java.lang.Object) -> setResource
    24:25:void setResource(android.graphics.drawable.Drawable) -> setResource
com.bumptech.glide.request.target.ImageViewTarget -> com.bumptech.glide.request.target.ImageViewTarget:
    25:26:void <init>(android.widget.ImageView) -> <init>
    129:135:void maybeUpdateAnimatable(java.lang.Object) -> maybeUpdateAnimatable
    90:96:void onLoadCleared(android.graphics.drawable.Drawable) -> onLoadCleared
    77:80:void onLoadFailed(android.graphics.drawable.Drawable) -> onLoadFailed
    64:67:void onLoadStarted(android.graphics.drawable.Drawable) -> onLoadStarted
    100:105:void onResourceReady(java.lang.Object,com.bumptech.glide.request.transition.Transition) -> onResourceReady
    109:112:void onStart() -> onStart
    116:119:void onStop() -> onStop
    53:54:void setDrawable(android.graphics.drawable.Drawable) -> setDrawable
    124:126:void setResourceInternal(java.lang.Object) -> setResourceInternal
com.bumptech.glide.request.target.ImageViewTargetFactory -> com.bumptech.glide.request.target.ImageViewTargetFactory:
    12:12:void <init>() -> <init>
    17:22:com.bumptech.glide.request.target.ViewTarget buildTarget(android.widget.ImageView,java.lang.Class) -> buildTarget
com.bumptech.glide.request.target.ViewTarget -> com.bumptech.glide.request.target.ViewTarget:
    52:52:void <clinit>() -> <clinit>
    61:64:void <init>(android.view.View) -> <init>
    262:272:com.bumptech.glide.request.Request getRequest() -> getRequest
    218:219:void getSize(com.bumptech.glide.request.target.SizeReadyCallback) -> getSize
    287:287:java.lang.Object getTag() -> getTag
    183:189:void maybeAddAttachStateListener() -> maybeAddAttachStateListener
    192:198:void maybeRemoveAttachStateListener() -> maybeRemoveAttachStateListener
    230:236:void onLoadCleared(android.graphics.drawable.Drawable) -> onLoadCleared
    178:180:void onLoadStarted(android.graphics.drawable.Drawable) -> onLoadStarted
    224:225:void removeCallback(com.bumptech.glide.request.target.SizeReadyCallback) -> removeCallback
    245:246:void setRequest(com.bumptech.glide.request.Request) -> setRequest
    281:283:void setTag(java.lang.Object) -> setTag
    277:277:java.lang.String toString() -> toString
com.bumptech.glide.request.target.ViewTarget$SizeDeterminer -> com.bumptech.glide.request.target.ViewTarget$SizeDeterminer:
    324:331:void <init>(android.view.View) -> <init>
    358:370:void checkCurrentDimens() -> checkCurrentDimens
    409:415:void clearCallbacksAndListener() -> clearCallbacksAndListener
    335:343:int getMaxDisplayLength(android.content.Context) -> getMaxDisplayLength
    373:390:void getSize(com.bumptech.glide.request.target.SizeReadyCallback) -> getSize
    439:491:int getTargetDimen(int,int,int) -> getTargetDimen
    422:425:int getTargetHeight() -> getTargetHeight
    429:432:int getTargetWidth() -> getTargetWidth
    495:495:boolean isDimensionValid(int) -> isDimensionValid
    418:418:boolean isViewStateAndSizeValid(int,int) -> isViewStateAndSizeValid
    351:354:void notifyCbs(int,int) -> notifyCbs
    399:400:void removeCallback(com.bumptech.glide.request.target.SizeReadyCallback) -> removeCallback
com.bumptech.glide.request.target.ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener -> com.bumptech.glide.request.target.ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener:
    502:504:void <init>(com.bumptech.glide.request.target.ViewTarget$SizeDeterminer) -> <init>
    508:515:boolean onPreDraw() -> onPreDraw
com.bumptech.glide.request.transition.NoTransition -> com.bumptech.glide.request.transition.NoTransition:
    13:16:void <clinit>() -> <clinit>
    12:12:void <init>() -> <init>
    35:35:com.bumptech.glide.request.transition.TransitionFactory getFactory() -> getFactory
    47:47:boolean transition(java.lang.Object,com.bumptech.glide.request.transition.Transition$ViewAdapter) -> transition
com.bumptech.glide.request.transition.NoTransition$NoAnimationFactory -> com.bumptech.glide.request.transition.NoTransition$NoAnimationFactory:
    24:24:void <init>() -> <init>
    28:28:com.bumptech.glide.request.transition.Transition build(com.bumptech.glide.load.DataSource,boolean) -> build
com.bumptech.glide.signature.AndroidResourceSignature -> com.bumptech.glide.signature.AndroidResourceSignature:
    25:28:void <init>(int,com.bumptech.glide.load.Key) -> <init>
    32:36:boolean equals(java.lang.Object) -> equals
    41:41:int hashCode() -> hashCode
    19:22:com.bumptech.glide.load.Key obtain(android.content.Context) -> obtain
    46:49:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.signature.ApplicationVersionSignature -> com.bumptech.glide.signature.ApplicationVersionSignature:
    21:21:void <clinit>() -> <clinit>
    69:72:android.content.pm.PackageInfo getPackageInfo(android.content.Context) -> getPackageInfo
    58:63:java.lang.String getVersionCode(android.content.pm.PackageInfo) -> getVersionCode
    29:40:com.bumptech.glide.load.Key obtain(android.content.Context) -> obtain
    50:52:com.bumptech.glide.load.Key obtainVersionSignature(android.content.Context) -> obtainVersionSignature
com.bumptech.glide.signature.EmptySignature -> com.bumptech.glide.signature.EmptySignature:
    9:9:void <clinit>() -> <clinit>
    16:18:void <init>() -> <init>
    13:13:com.bumptech.glide.signature.EmptySignature obtain() -> obtain
    22:22:java.lang.String toString() -> toString
    28:28:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.signature.ObjectKey -> com.bumptech.glide.signature.ObjectKey:
    20:22:void <init>(java.lang.Object) -> <init>
    31:35:boolean equals(java.lang.Object) -> equals
    40:40:int hashCode() -> hashCode
    26:26:java.lang.String toString() -> toString
    45:46:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.util.ByteBufferUtil -> com.bumptech.glide.util.ByteBufferUtil:
    20:20:void <clinit>() -> <clinit>
    28:57:java.nio.ByteBuffer fromFile(java.io.File) -> fromFile
    136:153:java.nio.ByteBuffer fromStream(java.io.InputStream) -> fromStream
    158:161:com.bumptech.glide.util.ByteBufferUtil$SafeArray getSafeArray(java.nio.ByteBuffer) -> getSafeArray
    117:126:byte[] toBytes(java.nio.ByteBuffer) -> toBytes
    63:89:void toFile(java.nio.ByteBuffer,java.io.File) -> toFile
    131:131:java.io.InputStream toStream(java.nio.ByteBuffer) -> toStream
com.bumptech.glide.util.ByteBufferUtil$ByteBufferStream -> com.bumptech.glide.util.ByteBufferUtil$ByteBufferStream:
    181:185:void <init>(java.nio.ByteBuffer) -> <init>
    189:189:int available() -> available
    201:203:void mark(int) -> mark
    207:207:boolean markSupported() -> markSupported
    194:197:int read() -> read
    212:217:int read(byte[],int,int) -> read
    221:227:void reset() -> reset
    231:237:long skip(long) -> skip
com.bumptech.glide.util.ByteBufferUtil$SafeArray -> com.bumptech.glide.util.ByteBufferUtil$SafeArray:
    171:175:void <init>(byte[],int,int) -> <init>
com.bumptech.glide.util.CachedHashCodeArrayMap -> com.bumptech.glide.util.CachedHashCodeArrayMap:
    15:15:void <init>() -> <init>
    21:23:void clear() -> clear
    51:54:int hashCode() -> hashCode
    33:34:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    39:41:void putAll(androidx.collection.SimpleArrayMap) -> putAll
    45:46:java.lang.Object removeAt(int) -> removeAt
    27:28:java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
com.bumptech.glide.util.ContentLengthInputStream -> com.bumptech.glide.util.ContentLengthInputStream:
    48:50:void <init>(java.io.InputStream,long) -> <init>
    54:54:int available() -> available
    75:85:int checkReadSoFarOrThrow(int) -> checkReadSoFarOrThrow
    30:30:java.io.InputStream obtain(java.io.InputStream,long) -> obtain
    58:61:int read() -> read
    66:66:int read(byte[]) -> read
    71:71:int read(byte[],int,int) -> read
com.bumptech.glide.util.ExceptionPassthroughInputStream -> com.bumptech.glide.util.ExceptionPassthroughInputStream:
    27:27:void <clinit>() -> <clinit>
    54:56:void <init>() -> <init>
    64:64:int available() -> available
    69:70:void close() -> close
    129:129:java.io.IOException getException() -> getException
    74:75:void mark(int) -> mark
    79:79:boolean markSupported() -> markSupported
    35:42:com.bumptech.glide.util.ExceptionPassthroughInputStream obtain(java.io.InputStream) -> obtain
    85:88:int read() -> read
    95:98:int read(byte[]) -> read
    105:108:int read(byte[],int,int) -> read
    133:138:void release() -> release
    113:115:void reset() -> reset
    59:60:void setInputStream(java.io.InputStream) -> setInputStream
    120:123:long skip(long) -> skip
com.bumptech.glide.util.Executors -> com.bumptech.glide.util.Executors:
    15:22:void <clinit>() -> <clinit>
    37:37:java.util.concurrent.Executor directExecutor() -> directExecutor
    32:32:java.util.concurrent.Executor mainThreadExecutor() -> mainThreadExecutor
com.bumptech.glide.util.Executors$1 -> com.bumptech.glide.util.Executors$1:
    16:16:void <init>() -> <init>
    19:20:void execute(java.lang.Runnable) -> execute
com.bumptech.glide.util.Executors$2 -> com.bumptech.glide.util.Executors$2:
    23:23:void <init>() -> <init>
    26:27:void execute(java.lang.Runnable) -> execute
com.bumptech.glide.util.LogTime -> com.bumptech.glide.util.LogTime:
    9:10:void <clinit>() -> <clinit>
    35:35:double getElapsedMillis(long) -> getElapsedMillis
    22:23:long getLogTime() -> getLogTime
com.bumptech.glide.util.LruCache -> com.bumptech.glide.util.LruCache:
    18:32:void <init>(long) -> <init>
    170:171:void clearMemory() -> clearMemory
    194:195:void evict() -> evict
    100:102:java.lang.Object get(java.lang.Object) -> get
    77:77:long getMaxSize() -> getMaxSize
    57:57:int getSize(java.lang.Object) -> getSize
    73:73:void onItemEvicted(java.lang.Object,java.lang.Object) -> onItemEvicted
    130:150:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    159:165:java.lang.Object remove(java.lang.Object) -> remove
    181:191:void trimToSize(long) -> trimToSize
com.bumptech.glide.util.LruCache$Entry -> com.bumptech.glide.util.LruCache$Entry:
    203:206:void <init>(java.lang.Object,int) -> <init>
com.bumptech.glide.util.MarkEnforcingInputStream -> com.bumptech.glide.util.MarkEnforcingInputStream:
    16:20:void <init>(java.io.InputStream) -> <init>
    71:73:int available() -> available
    77:82:long getBytesToRead(long) -> getBytesToRead
    23:26:void mark(int) -> mark
    30:36:int read() -> read
    41:48:int read(byte[],int,int) -> read
    52:55:void reset() -> reset
    59:66:long skip(long) -> skip
    87:91:void updateAvailableBytesAfterRead(long) -> updateAvailableBytesAfterRead
com.bumptech.glide.util.MultiClassKey -> com.bumptech.glide.util.MultiClassKey:
    13:15:void <init>() -> <init>
    22:24:void <init>(java.lang.Class,java.lang.Class,java.lang.Class) -> <init>
    44:63:boolean equals(java.lang.Object) -> equals
    68:71:int hashCode() -> hashCode
    31:34:void set(java.lang.Class,java.lang.Class,java.lang.Class) -> set
    38:38:java.lang.String toString() -> toString
com.bumptech.glide.util.Preconditions -> com.bumptech.glide.util.Preconditions:
    16:19:void checkArgument(boolean,java.lang.String) -> checkArgument
    36:39:java.lang.String checkNotEmpty(java.lang.String) -> checkNotEmpty
    44:47:java.util.Collection checkNotEmpty(java.util.Collection) -> checkNotEmpty
    23:23:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    28:31:java.lang.Object checkNotNull(java.lang.Object,java.lang.String) -> checkNotNull
com.bumptech.glide.util.Util -> com.bumptech.glide.util.Util:
    22:24:void <clinit>() -> <clinit>
    27:29:void <init>() -> <init>
    165:168:void assertMainThread() -> assertMainThread
    225:231:boolean bothModelsNullEquivalentOrEquals(java.lang.Object,java.lang.Object) -> bothModelsNullEquivalentOrEquals
    221:221:boolean bothNullOrEqual(java.lang.Object,java.lang.Object) -> bothNullOrEqual
    46:51:java.lang.String bytesToHex(byte[],char[]) -> bytesToHex
    190:190:java.util.Queue createQueue(int) -> createQueue
    72:93:int getBitmapByteSize(android.graphics.Bitmap) -> getBitmapByteSize
    101:101:int getBitmapByteSize(int,int,android.graphics.Bitmap$Config) -> getBitmapByteSize
    106:127:int getBytesPerPixel(android.graphics.Bitmap$Config) -> getBytesPerPixel
    206:212:java.util.List getSnapshot(java.util.Collection) -> getSnapshot
    150:157:android.os.Handler getUiThreadHandler() -> getUiThreadHandler
    239:239:int hashCode(int,int) -> hashCode
    243:243:int hashCode(float) -> hashCode
    247:247:int hashCode(float,int) -> hashCode
    251:251:int hashCode(java.lang.Object,int) -> hashCode
    255:255:int hashCode(boolean,int) -> hashCode
    184:184:boolean isOnBackgroundThread() -> isOnBackgroundThread
    179:179:boolean isOnMainThread() -> isOnMainThread
    136:136:boolean isValidDimension(int) -> isValidDimension
    132:132:boolean isValidDimensions(int,int) -> isValidDimensions
    141:142:void postOnUiThread(java.lang.Runnable) -> postOnUiThread
    146:147:void removeCallbacksOnUiThread(java.lang.Runnable) -> removeCallbacksOnUiThread
    34:36:java.lang.String sha256BytesToHex(byte[]) -> sha256BytesToHex
com.bumptech.glide.util.Util$1 -> com.bumptech.glide.util.Util$1:
    111:111:void <clinit>() -> <clinit>
com.bumptech.glide.util.pool.FactoryPools -> com.bumptech.glide.util.pool.FactoryPools:
    19:19:void <clinit>() -> <clinit>
    106:106:androidx.core.util.Pools$Pool build(androidx.core.util.Pools$Pool,com.bumptech.glide.util.pool.FactoryPools$Factory) -> build
    112:112:androidx.core.util.Pools$Pool build(androidx.core.util.Pools$Pool,com.bumptech.glide.util.pool.FactoryPools$Factory,com.bumptech.glide.util.pool.FactoryPools$Resetter) -> build
    118:118:com.bumptech.glide.util.pool.FactoryPools$Resetter emptyResetter() -> emptyResetter
    56:56:androidx.core.util.Pools$Pool threadSafe(int,com.bumptech.glide.util.pool.FactoryPools$Factory) -> threadSafe
    70:70:androidx.core.util.Pools$Pool threadSafeList() -> threadSafeList
    86:86:androidx.core.util.Pools$Pool threadSafeList(int) -> threadSafeList
com.bumptech.glide.util.pool.FactoryPools$1 -> com.bumptech.glide.util.pool.FactoryPools$1:
    20:20:void <init>() -> <init>
    24:24:void reset(java.lang.Object) -> reset
com.bumptech.glide.util.pool.FactoryPools$2 -> com.bumptech.glide.util.pool.FactoryPools$2:
    88:88:void <init>() -> <init>
    88:88:java.lang.Object create() -> create
    92:92:java.util.List create() -> create
com.bumptech.glide.util.pool.FactoryPools$3 -> com.bumptech.glide.util.pool.FactoryPools$3:
    95:95:void <init>() -> <init>
    95:95:void reset(java.lang.Object) -> reset
    98:99:void reset(java.util.List) -> reset
com.bumptech.glide.util.pool.FactoryPools$FactoryPool -> com.bumptech.glide.util.pool.FactoryPools$FactoryPool:
    153:157:void <init>(androidx.core.util.Pools$Pool,com.bumptech.glide.util.pool.FactoryPools$Factory,com.bumptech.glide.util.pool.FactoryPools$Resetter) -> <init>
    161:171:java.lang.Object acquire() -> acquire
    176:180:boolean release(java.lang.Object) -> release
com.bumptech.glide.util.pool.GlideTrace -> com.bumptech.glide.util.pool.GlideTrace:
    29:29:void beginSection(java.lang.String) -> beginSection
    35:35:void beginSectionFormat(java.lang.String,java.lang.Object) -> beginSectionFormat
    47:47:void beginSectionFormat(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> beginSectionFormat
    53:53:void endSection() -> endSection
com.bumptech.glide.util.pool.StateVerifier -> com.bumptech.glide.util.pool.StateVerifier:
    7:7:void <init>(com.bumptech.glide.util.pool.StateVerifier$1) -> <init>
    20:20:void <init>() -> <init>
    16:16:com.bumptech.glide.util.pool.StateVerifier newInstance() -> newInstance
com.bumptech.glide.util.pool.StateVerifier$DefaultStateVerifier -> com.bumptech.glide.util.pool.StateVerifier$DefaultStateVerifier:
    35:35:void <init>() -> <init>
    46:47:void setRecycled(boolean) -> setRecycled
    39:42:void throwIfRecycled() -> throwIfRecycled
com.google.android.material.animation.AnimationUtils -> com.google.android.material.animation.AnimationUtils:
    32:39:void <clinit>() -> <clinit>
    43:43:float lerp(float,float,float) -> lerp
com.google.android.material.animation.AnimatorSetCompat -> com.google.android.material.animation.AnimatorSetCompat:
    37:47:void playTogether(android.animation.AnimatorSet,java.util.List) -> playTogether
com.google.android.material.animation.ArgbEvaluatorCompat -> com.google.android.material.animation.ArgbEvaluatorCompat:
    28:28:void <clinit>() -> <clinit>
    27:27:void <init>() -> <init>
    27:27:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    55:88:java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer) -> evaluate
    38:38:com.google.android.material.animation.ArgbEvaluatorCompat getInstance() -> getInstance
com.google.android.material.animation.ChildrenAlphaProperty -> com.google.android.material.animation.ChildrenAlphaProperty:
    37:37:void <clinit>() -> <clinit>
    41:42:void <init>(java.lang.String) -> <init>
    32:32:java.lang.Object get(java.lang.Object) -> get
    46:50:java.lang.Float get(android.view.ViewGroup) -> get
    32:32:void set(java.lang.Object,java.lang.Object) -> set
    56:64:void set(android.view.ViewGroup,java.lang.Float) -> set
com.google.android.material.animation.DrawableAlphaProperty -> com.google.android.material.animation.DrawableAlphaProperty:
    34:34:void <clinit>() -> <clinit>
    37:41:void <init>() -> <init>
    28:28:java.lang.Object get(java.lang.Object) -> get
    45:46:java.lang.Integer get(android.graphics.drawable.Drawable) -> get
    28:28:void set(java.lang.Object,java.lang.Object) -> set
    56:61:void set(android.graphics.drawable.Drawable,java.lang.Integer) -> set
com.google.android.material.animation.ImageMatrixProperty -> com.google.android.material.animation.ImageMatrixProperty:
    27:31:void <init>() -> <init>
    26:26:java.lang.Object get(java.lang.Object) -> get
    40:41:android.graphics.Matrix get(android.widget.ImageView) -> get
    26:26:void set(java.lang.Object,java.lang.Object) -> set
    35:36:void set(android.widget.ImageView,android.graphics.Matrix) -> set
com.google.android.material.animation.MatrixEvaluator -> com.google.android.material.animation.MatrixEvaluator:
    25:28:void <init>() -> <init>
    25:25:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    32:39:android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix) -> evaluate
com.google.android.material.animation.MotionSpec -> com.google.android.material.animation.MotionSpec:
    63:67:void <init>() -> <init>
    149:155:void addTimingFromAnimator(com.google.android.material.animation.MotionSpec,android.animation.Animator) -> addTimingFromAnimator
    123:136:com.google.android.material.animation.MotionSpec createFromResource(android.content.Context,int) -> createFromResource
    141:145:com.google.android.material.animation.MotionSpec createSpecFromAnimators(java.util.List) -> createSpecFromAnimators
    159:168:boolean equals(java.lang.Object) -> equals
    79:82:com.google.android.material.animation.MotionTiming getTiming(java.lang.String) -> getTiming
    95:100:long getTotalDuration() -> getTotalDuration
    71:71:boolean hasTiming(java.lang.String) -> hasTiming
    173:173:int hashCode() -> hashCode
    87:88:void setTiming(java.lang.String,com.google.android.material.animation.MotionTiming) -> setTiming
    178:186:java.lang.String toString() -> toString
com.google.android.material.animation.MotionTiming -> com.google.android.material.animation.MotionTiming:
    30:42:void <init>(long,long) -> <init>
    30:48:void <init>(long,long,android.animation.TimeInterpolator) -> <init>
    51:58:void apply(android.animation.Animator) -> apply
    81:86:com.google.android.material.animation.MotionTiming createFromAnimator(android.animation.ValueAnimator) -> createFromAnimator
    114:135:boolean equals(java.lang.Object) -> equals
    61:61:long getDelay() -> getDelay
    65:65:long getDuration() -> getDuration
    69:69:android.animation.TimeInterpolator getInterpolator() -> getInterpolator
    100:108:android.animation.TimeInterpolator getInterpolatorCompat(android.animation.ValueAnimator) -> getInterpolatorCompat
    73:73:int getRepeatCount() -> getRepeatCount
    77:77:int getRepeatMode() -> getRepeatMode
    140:145:int hashCode() -> hashCode
    150:166:java.lang.String toString() -> toString
com.google.android.material.animation.Positioning -> com.google.android.material.animation.Positioning:
    34:38:void <init>(int,float,float) -> <init>
com.google.android.material.appbar.AppBarLayout -> com.google.android.material.appbar.AppBarLayout:
    356:356:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    505:513:void dispatchOffsetUpdates(int) -> dispatchOffsetUpdates
    110:110:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    110:110:android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    361:361:com.google.android.material.appbar.AppBarLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    110:110:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    110:110:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    110:110:android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    110:110:android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    366:366:com.google.android.material.appbar.AppBarLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    371:376:com.google.android.material.appbar.AppBarLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    431:463:int getDownNestedPreScrollRange() -> getDownNestedPreScrollRange
    468:499:int getDownNestedScrollRange() -> getDownNestedScrollRange
    516:533:int getMinimumHeightForVisibleOverlappingContent() -> getMinimumHeightForVisibleOverlappingContent
    637:637:int getPendingAction() -> getPendingAction
    633:633:float getTargetElevation() -> getTargetElevation
    646:646:int getTopInset() -> getTopInset
    389:417:int getTotalScrollRange() -> getTotalScrollRange
    426:426:int getUpNestedPreScrollRange() -> getUpNestedPreScrollRange
    380:380:boolean hasChildWithInterpolator() -> hasChildWithInterpolator
    292:297:boolean hasCollapsibleChild() -> hasCollapsibleChild
    421:421:boolean hasScrollableChildren() -> hasScrollableChildren
    302:305:void invalidateScrollRanges() -> invalidateScrollRanges
    610:610:boolean isLiftOnScroll() -> isLiftOnScroll
    538:554:int[] onCreateDrawableState(int) -> onCreateDrawableState
    270:289:void onLayout(boolean,int,int,int,int) -> onLayout
    264:266:void onMeasure(int,int) -> onMeasure
    641:642:void resetPendingAction() -> resetPendingAction
    328:329:void setExpanded(boolean) -> setExpanded
    343:344:void setExpanded(boolean,boolean) -> setExpanded
    347:352:void setExpanded(boolean,boolean,boolean) -> setExpanded
    605:606:void setLiftOnScroll(boolean) -> setLiftOnScroll
    569:574:boolean setLiftableState(boolean) -> setLiftableState
    588:593:boolean setLiftedState(boolean) -> setLiftedState
    309:314:void setOrientation(int) -> setOrientation
    622:625:void setTargetElevation(float) -> setTargetElevation
com.google.android.material.appbar.AppBarLayout$BaseBehavior -> com.google.android.material.appbar.AppBarLayout$BaseBehavior:
    893:900:void <init>() -> <init>
    893:904:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    869:869:int access$000(com.google.android.material.appbar.AppBarLayout$BaseBehavior) -> access$000
    1029:1041:void animateOffsetTo(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,float) -> animateOffsetTo
    1048:1074:void animateOffsetWithDuration(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int) -> animateOffsetWithDuration
    869:869:boolean canDragView(android.view.View) -> canDragView
    1234:1248:boolean canDragView(com.google.android.material.appbar.AppBarLayout) -> canDragView
    936:937:boolean canScrollChildren(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View) -> canScrollChildren
    1143:1143:boolean checkFlag(int,int) -> checkFlag
    1455:1461:android.view.View findFirstScrollingChild(androidx.coordinatorlayout.widget.CoordinatorLayout) -> findFirstScrollingChild
    1443:1450:android.view.View getAppBarChildOnOffset(com.google.android.material.appbar.AppBarLayout,int) -> getAppBarChildOnOffset
    1077:1093:int getChildIndexOnOffset(com.google.android.material.appbar.AppBarLayout,int) -> getChildIndexOnOffset
    869:869:int getMaxDragOffset(android.view.View) -> getMaxDragOffset
    1260:1260:int getMaxDragOffset(com.google.android.material.appbar.AppBarLayout) -> getMaxDragOffset
    869:869:int getScrollRangeForDragFling(android.view.View) -> getScrollRangeForDragFling
    1265:1265:int getScrollRangeForDragFling(com.google.android.material.appbar.AppBarLayout) -> getScrollRangeForDragFling
    1466:1466:int getTopBottomOffsetForScrollingSibling() -> getTopBottomOffsetForScrollingSibling
    1328:1372:int interpolateOffset(com.google.android.material.appbar.AppBarLayout,int) -> interpolateOffset
    869:869:void onFlingFinished(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onFlingFinished
    1255:1256:void onFlingFinished(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> onFlingFinished
    869:869:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    1177:1229:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int) -> onLayoutChild
    869:869:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    1154:1171:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,int,int) -> onMeasureChild
    869:869:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int) -> onNestedPreScroll
    949:966:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int[],int) -> onNestedPreScroll
    869:869:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int) -> onNestedScroll
    978:987:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int,int,int) -> onNestedScroll
    869:869:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.os.Parcelable) -> onRestoreInstanceState
    1495:1505:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.os.Parcelable) -> onRestoreInstanceState
    869:869:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onSaveInstanceState
    1471:1490:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> onSaveInstanceState
    869:869:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    916:931:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    869:869:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int) -> onStopNestedScroll
    1006:1013:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int) -> onStopNestedScroll
    869:869:int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int) -> setHeaderTopBottomOffset
    1275:1319:int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,int) -> setHeaderTopBottomOffset
    1428:1439:boolean shouldJumpElevationState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> shouldJumpElevationState
    1097:1140:void snapToChildIfNeeded(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> snapToChildIfNeeded
    990:997:void stopNestedScrollIfNeeded(int,com.google.android.material.appbar.AppBarLayout,android.view.View,int) -> stopNestedScrollIfNeeded
    1381:1423:void updateAppBarLayoutDrawableState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,boolean) -> updateAppBarLayoutDrawableState
com.google.android.material.appbar.AppBarLayout$BaseBehavior$1 -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$1:
    1060:1060:void <init>(com.google.android.material.appbar.AppBarLayout$BaseBehavior,androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> <init>
    1063:1065:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState:
    1532:1532:void <clinit>() -> <clinit>
    1514:1518:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1521:1522:void <init>(android.os.Parcelable) -> <init>
    1526:1530:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState$1 -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState$1:
    1533:1533:void <init>() -> <init>
    1533:1533:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1533:1533:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1536:1536:com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1541:1541:com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1533:1533:java.lang.Object[] newArray(int) -> newArray
    1546:1546:com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState[] newArray(int) -> newArray
com.google.android.material.appbar.AppBarLayout$Behavior -> com.google.android.material.appbar.AppBarLayout$Behavior:
    852:853:void <init>() -> <init>
    860:861:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    842:842:int getTopAndBottomOffset() -> getTopAndBottomOffset
    842:842:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int) -> onLayoutChild
    842:842:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,int,int) -> onMeasureChild
    842:842:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int[],int) -> onNestedPreScroll
    842:842:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int,int,int) -> onNestedScroll
    842:842:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.os.Parcelable) -> onRestoreInstanceState
    842:842:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> onSaveInstanceState
    842:842:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    842:842:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int) -> onStopNestedScroll
    842:842:boolean setTopAndBottomOffset(int) -> setTopAndBottomOffset
com.google.android.material.appbar.AppBarLayout$LayoutParams -> com.google.android.material.appbar.AppBarLayout$LayoutParams:
    739:751:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    739:755:void <init>(int,int) -> <init>
    739:763:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    739:767:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    739:773:void <init>(android.widget.LinearLayout$LayoutParams) -> <init>
    805:805:int getScrollFlags() -> getScrollFlags
    827:827:android.view.animation.Interpolator getScrollInterpolator() -> getScrollInterpolator
    832:832:boolean isCollapsible() -> isCollapsible
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior -> com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior:
    1558:1558:void <init>() -> <init>
    1561:1568:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1556:1556:android.view.View findFirstDependency(java.util.List) -> findFirstDependency
    1653:1659:com.google.android.material.appbar.AppBarLayout findFirstDependency(java.util.List) -> findFirstDependency
    1643:1648:int getAppBarLayoutOffset(com.google.android.material.appbar.AppBarLayout) -> getAppBarLayoutOffset
    1622:1639:float getOverlapRatioForOffset(android.view.View) -> getOverlapRatioForOffset
    1664:1667:int getScrollRange(android.view.View) -> getScrollRange
    1573:1573:boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> layoutDependsOn
    1605:1618:void offsetChildAsNeeded(android.view.View,android.view.View) -> offsetChildAsNeeded
    1578:1580:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    1556:1556:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    1556:1556:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    1586:1601:boolean onRequestChildRectangleOnScreen(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect,boolean) -> onRequestChildRectangleOnScreen
    1672:1678:void updateLiftedStateIfNeeded(android.view.View,android.view.View) -> updateLiftedStateIfNeeded
com.google.android.material.appbar.HeaderBehavior -> com.google.android.material.appbar.HeaderBehavior:
    43:48:void <init>() -> <init>
    43:52:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    282:282:boolean canDragView(android.view.View) -> canDragView
    295:298:void ensureVelocityTracker() -> ensureVelocityTracker
    243:268:boolean fling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,float) -> fling
    287:287:int getMaxDragOffset(android.view.View) -> getMaxDragOffset
    291:291:int getScrollRangeForDragFling(android.view.View) -> getScrollRangeForDragFling
    224:224:int getTopBottomOffsetForScrollingSibling() -> getTopBottomOffsetForScrollingSibling
    278:278:void onFlingFinished(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onFlingFinished
    56:119:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    124:195:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    229:232:int scroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int) -> scroll
    199:199:int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> setHeaderTopBottomOffset
    205:220:int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int) -> setHeaderTopBottomOffset
com.google.android.material.appbar.HeaderBehavior$FlingRunnable -> com.google.android.material.appbar.HeaderBehavior$FlingRunnable:
    304:307:void <init>(com.google.android.material.appbar.HeaderBehavior,androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> <init>
    311:320:void run() -> run
com.google.android.material.appbar.HeaderScrollingViewBehavior -> com.google.android.material.appbar.HeaderScrollingViewBehavior:
    39:45:void <init>() -> <init>
    39:49:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    156:158:int getOverlapPixelsForOffset(android.view.View) -> getOverlapPixelsForOffset
    152:152:float getOverlapRatioForOffset(android.view.View) -> getOverlapRatioForOffset
    193:193:int getOverlayTop() -> getOverlayTop
    168:168:int getScrollRange(android.view.View) -> getScrollRange
    175:175:int getVerticalLayoutGap() -> getVerticalLayoutGap
    107:149:void layoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> layoutChild
    59:101:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    162:162:int resolveGravity(int) -> resolveGravity
    185:186:void setOverlayTop(int) -> setOverlayTop
com.google.android.material.appbar.ViewOffsetBehavior -> com.google.android.material.appbar.ViewOffsetBehavior:
    29:32:void <init>() -> <init>
    29:36:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    84:84:int getTopAndBottomOffset() -> getTopAndBottomOffset
    62:63:void layoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> layoutChild
    41:57:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    66:71:boolean setTopAndBottomOffset(int) -> setTopAndBottomOffset
com.google.android.material.appbar.ViewOffsetHelper -> com.google.android.material.appbar.ViewOffsetHelper:
    38:40:void <init>(android.view.View) -> <init>
    87:87:int getTopAndBottomOffset() -> getTopAndBottomOffset
    44:49:void onViewLayout() -> onViewLayout
    78:83:boolean setLeftAndRightOffset(int) -> setLeftAndRightOffset
    63:68:boolean setTopAndBottomOffset(int) -> setTopAndBottomOffset
    52:54:void updateOffsets() -> updateOffsets
com.google.android.material.appbar.ViewUtilsLollipop -> com.google.android.material.appbar.ViewUtilsLollipop:
    35:35:void <clinit>() -> <clinit>
    60:78:void setDefaultAppBarLayoutStateListAnimator(android.view.View,float) -> setDefaultAppBarLayoutStateListAnimator
com.google.android.material.behavior.HideBottomViewOnScrollBehavior -> com.google.android.material.behavior.HideBottomViewOnScrollBehavior:
    43:48:void <init>() -> <init>
    43:58:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    35:35:android.view.ViewPropertyAnimator access$002(com.google.android.material.behavior.HideBottomViewOnScrollBehavior,android.view.ViewPropertyAnimator) -> access$002
    113:126:void animateChildTo(android.view.View,int,long,android.animation.TimeInterpolator) -> animateChildTo
    62:63:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    85:90:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int) -> onNestedScroll
    73:73:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int) -> onStartNestedScroll
    103:110:void slideDown(android.view.View) -> slideDown
    93:100:void slideUp(android.view.View) -> slideUp
com.google.android.material.behavior.HideBottomViewOnScrollBehavior$1 -> com.google.android.material.behavior.HideBottomViewOnScrollBehavior$1:
    120:120:void <init>(com.google.android.material.behavior.HideBottomViewOnScrollBehavior) -> <init>
    123:124:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.behavior.SwipeDismissBehavior -> com.google.android.material.behavior.SwipeDismissBehavior:
    38:207:void <init>() -> <init>
    204:204:boolean canSwipeDismissView(android.view.View) -> canSwipeDismissView
    384:384:float clamp(float,float,float) -> clamp
    388:388:int clamp(int,int,int) -> clamp
    354:360:void ensureViewDragHelper(android.view.ViewGroup) -> ensureViewDragHelper
    403:403:float fraction(float,float,float) -> fraction
    166:185:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    190:194:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    149:150:void setEndAlphaSwipeDistance(float) -> setEndAlphaSwipeDistance
    140:141:void setStartAlphaSwipeDistance(float) -> setStartAlphaSwipeDistance
    122:123:void setSwipeDirection(int) -> setSwipeDirection
com.google.android.material.behavior.SwipeDismissBehavior$1 -> com.google.android.material.behavior.SwipeDismissBehavior$1:
    208:212:void <init>(com.google.android.material.behavior.SwipeDismissBehavior) -> <init>
    300:326:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    331:331:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    295:295:int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    222:231:void onViewCaptured(android.view.View,int) -> onViewCaptured
    235:238:void onViewDragStateChanged(int) -> onViewDragStateChanged
    336:350:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    243:265:void onViewReleased(android.view.View,float,float) -> onViewReleased
    268:290:boolean shouldDismiss(android.view.View,float) -> shouldDismiss
    217:217:boolean tryCaptureView(android.view.View,int) -> tryCaptureView
com.google.android.material.behavior.SwipeDismissBehavior$SettleRunnable -> com.google.android.material.behavior.SwipeDismissBehavior$SettleRunnable:
    366:369:void <init>(com.google.android.material.behavior.SwipeDismissBehavior,android.view.View,boolean) -> <init>
    373:380:void run() -> run
com.google.android.material.bottomappbar.BottomAppBar -> com.google.android.material.bottomappbar.BottomAppBar:
    86:86:android.animation.Animator access$002(com.google.android.material.bottomappbar.BottomAppBar,android.animation.Animator) -> access$002
    86:86:void access$1000(com.google.android.material.bottomappbar.BottomAppBar,com.google.android.material.floatingactionbutton.FloatingActionButton) -> access$1000
    86:86:com.google.android.material.floatingactionbutton.FloatingActionButton access$1100(com.google.android.material.bottomappbar.BottomAppBar) -> access$1100
    86:86:boolean access$1200(com.google.android.material.bottomappbar.BottomAppBar) -> access$1200
    86:86:void access$1300(com.google.android.material.bottomappbar.BottomAppBar) -> access$1300
    86:86:float access$1400(com.google.android.material.bottomappbar.BottomAppBar) -> access$1400
    86:86:android.animation.Animator access$302(com.google.android.material.bottomappbar.BottomAppBar,android.animation.Animator) -> access$302
    86:86:void access$400(com.google.android.material.bottomappbar.BottomAppBar,androidx.appcompat.widget.ActionMenuView,int,boolean) -> access$400
    657:660:void addFabAnimationListeners(com.google.android.material.floatingactionbutton.FloatingActionButton) -> addFabAnimationListeners
    590:599:void cancelAnimations() -> cancelAnimations
    316:322:void createCradleTranslationAnimation(int,java.util.List) -> createCradleTranslationAnimation
    360:364:void createFabTranslationXAnimation(int,java.util.List) -> createFabTranslationXAnimation
    403:443:void createMenuViewTranslationAnimation(int,boolean,java.util.List) -> createMenuViewTranslationAnimation
    338:350:com.google.android.material.floatingactionbutton.FloatingActionButton findDependentFab() -> findDependentFab
    544:551:androidx.appcompat.widget.ActionMenuView getActionMenuView() -> getActionMenuView
    193:193:android.content.res.ColorStateList getBackgroundTint() -> getBackgroundTint
    680:680:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior() -> getBehavior
    233:233:float getCradleVerticalOffset() -> getCradleVerticalOffset
    171:171:int getFabAlignmentMode() -> getFabAlignmentMode
    200:200:float getFabCradleMargin() -> getFabCradleMargin
    216:216:float getFabCradleRoundedCornerRadius() -> getFabCradleRoundedCornerRadius
    532:534:int getFabTranslationX(int) -> getFabTranslationX
    539:539:float getFabTranslationX() -> getFabTranslationX
    504:524:float getFabTranslationY(boolean) -> getFabTranslationY
    528:528:float getFabTranslationY() -> getFabTranslationY
    254:254:boolean getHideOnScroll() -> getHideOnScroll
    602:604:boolean isAnimationRunning() -> isAnimationRunning
    354:355:boolean isVisibleFab() -> isVisibleFab
    367:396:void maybeAnimateMenuView(int,boolean) -> maybeAnimateMenuView
    288:312:void maybeAnimateModeChange(int) -> maybeAnimateModeChange
    609:615:void onLayout(boolean,int,int,int,int) -> onLayout
    795:803:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    786:790:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    663:665:void removeFabAnimationListeners(com.google.android.material.floatingactionbutton.FloatingActionButton) -> removeFabAnimationListeners
    188:189:void setBackgroundTint(android.content.res.ColorStateList) -> setBackgroundTint
    242:246:void setCradleVerticalOffset(float) -> setCradleVerticalOffset
    619:620:void setCutoutState() -> setCutoutState
    182:185:void setFabAlignmentMode(int) -> setFabAlignmentMode
    207:211:void setFabCradleMargin(float) -> setFabCradleMargin
    221:225:void setFabCradleRoundedCornerRadius(float) -> setFabCradleRoundedCornerRadius
    281:281:void setFabDiameter(int) -> setFabDiameter
    263:264:void setHideOnScroll(boolean) -> setHideOnScroll
    675:675:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    670:670:void setTitle(java.lang.CharSequence) -> setTitle
    566:587:void translateActionMenuView(androidx.appcompat.widget.ActionMenuView,int,boolean) -> translateActionMenuView
com.google.android.material.bottomappbar.BottomAppBar$1 -> com.google.android.material.bottomappbar.BottomAppBar$1:
    305:305:void <init>(com.google.android.material.bottomappbar.BottomAppBar) -> <init>
    308:309:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.bottomappbar.BottomAppBar$3 -> com.google.android.material.bottomappbar.BottomAppBar$3:
    389:389:void <init>(com.google.android.material.bottomappbar.BottomAppBar) -> <init>
    392:393:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.bottomappbar.BottomAppBar$4 -> com.google.android.material.bottomappbar.BottomAppBar$4:
    418:418:void <init>(com.google.android.material.bottomappbar.BottomAppBar,androidx.appcompat.widget.ActionMenuView,int,boolean) -> <init>
    423:424:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    428:431:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.bottomappbar.BottomAppBar$Behavior -> com.google.android.material.bottomappbar.BottomAppBar$Behavior:
    692:694:void <init>() -> <init>
    703:705:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    687:687:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    722:737:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.bottomappbar.BottomAppBar,int) -> onLayoutChild
    687:687:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    749:750:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.bottomappbar.BottomAppBar,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    687:687:void slideDown(android.view.View) -> slideDown
    769:781:void slideDown(com.google.android.material.bottomappbar.BottomAppBar) -> slideDown
    687:687:void slideUp(android.view.View) -> slideUp
    756:765:void slideUp(com.google.android.material.bottomappbar.BottomAppBar) -> slideUp
    709:716:boolean updateFabPositionAndVisibility(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.bottomappbar.BottomAppBar) -> updateFabPositionAndVisibility
com.google.android.material.bottomappbar.BottomAppBar$SavedState -> com.google.android.material.bottomappbar.BottomAppBar$SavedState:
    826:826:void <clinit>() -> <clinit>
    810:811:void <init>(android.os.Parcelable) -> <init>
    814:817:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    821:824:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.bottomappbar.BottomAppBar$SavedState$1 -> com.google.android.material.bottomappbar.BottomAppBar$SavedState$1:
    827:827:void <init>() -> <init>
    827:827:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    827:827:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    830:830:com.google.android.material.bottomappbar.BottomAppBar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    835:835:com.google.android.material.bottomappbar.BottomAppBar$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    827:827:java.lang.Object[] newArray(int) -> newArray
    840:840:com.google.android.material.bottomappbar.BottomAppBar$SavedState[] newArray(int) -> newArray
com.google.android.material.bottomsheet.BottomSheetBehavior -> com.google.android.material.bottomsheet.BottomSheetBehavior:
    124:765:void <init>() -> <init>
    124:765:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    55:55:boolean access$000(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$000
    55:55:int access$100(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$100
    683:688:void calculateCollapsedOffset() -> calculateCollapsedOffset
    892:902:void dispatchOnSlide(int) -> dispatchOnSlide
    712:724:android.view.View findScrollingChild(android.view.View) -> findScrollingChild
    736:736:int getExpandedOffset() -> getExpandedOffset
    728:732:float getYVelocity() -> getYVelocity
    271:324:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    227:266:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    487:489:boolean onNestedPreFling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float) -> onNestedPreFling
    379:415:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int) -> onNestedPreScroll
    215:223:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.os.Parcelable) -> onRestoreInstanceState
    210:210:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onSaveInstanceState
    365:367:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    423:478:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int) -> onStopNestedScroll
    329:354:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    691:696:void reset() -> reset
    509:521:void setFitToContents(boolean) -> setFitToContents
    569:570:void setHideable(boolean) -> setHideable
    531:549:void setPeekHeight(int) -> setPeekHeight
    590:591:void setSkipCollapsed(boolean) -> setSkipCollapsed
    666:680:void setStateInternal(int) -> setStateInternal
    699:707:boolean shouldHide(android.view.View,float) -> shouldHide
    993:1039:void updateImportantForAccessibility(boolean) -> updateImportantForAccessibility
com.google.android.material.bottomsheet.BottomSheetBehavior$2 -> com.google.android.material.bottomsheet.BottomSheetBehavior$2:
    766:766:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior) -> <init>
    878:878:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    872:873:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    883:886:int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    794:797:void onViewDragStateChanged(int) -> onViewDragStateChanged
    789:790:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    803:868:void onViewReleased(android.view.View,float,float) -> onViewReleased
    770:783:boolean tryCaptureView(android.view.View,int) -> tryCaptureView
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState -> com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState:
    954:954:void <clinit>() -> <clinit>
    938:941:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    944:946:void <init>(android.os.Parcelable,int) -> <init>
    950:952:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState$1 -> com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState$1:
    955:955:void <init>() -> <init>
    955:955:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    955:955:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    958:958:com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    963:963:com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    955:955:java.lang.Object[] newArray(int) -> newArray
    968:968:com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState[] newArray(int) -> newArray
com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable -> com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable:
    915:918:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior,android.view.View,int) -> <init>
    922:927:void run() -> run
com.google.android.material.button.MaterialButton -> com.google.android.material.button.MaterialButton:
    133:134:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    137:168:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    262:262:android.content.res.ColorStateList getBackgroundTintList() -> getBackgroundTintList
    273:273:android.graphics.PorterDuff$Mode getBackgroundTintMode() -> getBackgroundTintMode
    717:717:int getCornerRadius() -> getCornerRadius
    470:470:android.graphics.drawable.Drawable getIcon() -> getIcon
    729:729:int getIconGravity() -> getIconGravity
    396:396:int getIconPadding() -> getIconPadding
    426:426:int getIconSize() -> getIconSize
    509:509:android.content.res.ColorStateList getIconTint() -> getIconTint
    534:534:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    591:591:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    633:633:android.content.res.ColorStateList getStrokeColor() -> getStrokeColor
    676:676:int getStrokeWidth() -> getStrokeWidth
    207:213:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    245:250:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    358:358:boolean isLayoutRTL() -> isLayoutRTL
    744:744:boolean isUsingOriginalBackground() -> isUsingOriginalBackground
    172:177:void onDraw(android.graphics.Canvas) -> onDraw
    321:326:void onLayout(boolean,int,int,int,int) -> onLayout
    330:355:void onMeasure(int,int) -> onMeasure
    289:290:void setBackground(android.graphics.drawable.Drawable) -> setBackground
    278:285:void setBackgroundColor(int) -> setBackgroundColor
    303:317:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    294:299:void setBackgroundResource(int) -> setBackgroundResource
    256:257:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    267:268:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    688:691:void setCornerRadius(int) -> setCornerRadius
    702:705:void setCornerRadiusResource(int) -> setCornerRadiusResource
    439:443:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    740:741:void setIconGravity(int) -> setIconGravity
    381:385:void setIconPadding(int) -> setIconPadding
    454:459:void setIconResource(int) -> setIconResource
    407:415:void setIconSize(int) -> setIconSize
    482:486:void setIconTint(android.content.res.ColorStateList) -> setIconTint
    520:524:void setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    497:498:void setIconTintResource(int) -> setIconTintResource
    370:371:void setInternalBackground(android.graphics.drawable.Drawable) -> setInternalBackground
    563:566:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    577:580:void setRippleColorResource(int) -> setRippleColorResource
    604:607:void setStrokeColor(android.content.res.ColorStateList) -> setStrokeColor
    619:622:void setStrokeColorResource(int) -> setStrokeColorResource
    646:649:void setStrokeWidth(int) -> setStrokeWidth
    661:664:void setStrokeWidthResource(int) -> setStrokeWidthResource
    188:195:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    226:233:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    539:552:void updateIcon() -> updateIcon
com.google.android.material.button.MaterialButtonBackgroundDrawable -> com.google.android.material.button.MaterialButtonBackgroundDrawable:
    59:60:void <init>(android.content.res.ColorStateList,android.graphics.drawable.InsetDrawable,android.graphics.drawable.Drawable) -> <init>
    65:71:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
com.google.android.material.button.MaterialButtonHelper -> com.google.android.material.button.MaterialButtonHelper:
    57:57:void <clinit>() -> <clinit>
    74:91:void <init>(com.google.android.material.button.MaterialButton) -> <init>
    183:200:android.graphics.drawable.Drawable createBackgroundCompat() -> createBackgroundCompat
    255:276:android.graphics.drawable.Drawable createBackgroundLollipop() -> createBackgroundLollipop
    377:377:int getCornerRadius() -> getCornerRadius
    308:308:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    324:324:android.content.res.ColorStateList getStrokeColor() -> getStrokeColor
    336:336:int getStrokeWidth() -> getStrokeWidth
    221:221:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    236:236:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    158:158:boolean isBackgroundOverwritten() -> isBackgroundOverwritten
    94:141:void loadFromAttributes(android.content.res.TypedArray) -> loadFromAttributes
    288:293:void setBackgroundColor(int) -> setBackgroundColor
    150:155:void setBackgroundOverwritten() -> setBackgroundOverwritten
    351:374:void setCornerRadius(int) -> setCornerRadius
    296:304:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    312:320:void setStrokeColor(android.content.res.ColorStateList) -> setStrokeColor
    328:333:void setStrokeWidth(int) -> setStrokeWidth
    210:218:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    225:233:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    340:348:void updateStroke() -> updateStroke
    240:246:void updateTintAndTintModeLollipop() -> updateTintAndTintModeLollipop
    206:206:android.graphics.drawable.InsetDrawable wrapDrawableWithInset(android.graphics.drawable.Drawable) -> wrapDrawableWithInset
com.google.android.material.circularreveal.CircularRevealCompat -> com.google.android.material.circularreveal.CircularRevealCompat:
    55:75:android.animation.Animator createCircularReveal(com.google.android.material.circularreveal.CircularRevealWidget,float,float,float) -> createCircularReveal
    118:118:android.animation.Animator$AnimatorListener createCircularRevealListener(com.google.android.material.circularreveal.CircularRevealWidget) -> createCircularRevealListener
com.google.android.material.circularreveal.CircularRevealCompat$1 -> com.google.android.material.circularreveal.CircularRevealCompat$1:
    118:118:void <init>(com.google.android.material.circularreveal.CircularRevealWidget) -> <init>
    126:127:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    121:122:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.circularreveal.CircularRevealFrameLayout -> com.google.android.material.circularreveal.CircularRevealFrameLayout:
    43:44:void buildCircularRevealCache() -> buildCircularRevealCache
    48:49:void destroyCircularRevealCache() -> destroyCircularRevealCache
    86:91:void draw(android.graphics.Canvas) -> draw
    75:75:android.graphics.drawable.Drawable getCircularRevealOverlayDrawable() -> getCircularRevealOverlayDrawable
    64:64:int getCircularRevealScrimColor() -> getCircularRevealScrimColor
    54:54:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo() -> getRevealInfo
    100:103:boolean isOpaque() -> isOpaque
    80:81:void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable) -> setCircularRevealOverlayDrawable
    69:70:void setCircularRevealScrimColor(int) -> setCircularRevealScrimColor
    59:60:void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> setRevealInfo
com.google.android.material.circularreveal.CircularRevealHelper -> com.google.android.material.circularreveal.CircularRevealHelper:
    126:133:void <clinit>() -> <clinit>
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealEvaluator -> com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealEvaluator:
    208:208:void <clinit>() -> <clinit>
    206:209:void <init>() -> <init>
    206:206:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    213:217:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo evaluate(float,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> evaluate
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealProperty -> com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealProperty:
    181:181:void <clinit>() -> <clinit>
    185:186:void <init>(java.lang.String) -> <init>
    179:179:java.lang.Object get(java.lang.Object) -> get
    190:190:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo get(com.google.android.material.circularreveal.CircularRevealWidget) -> get
    179:179:void set(java.lang.Object,java.lang.Object) -> set
    195:196:void set(com.google.android.material.circularreveal.CircularRevealWidget,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> set
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealScrimColorProperty -> com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealScrimColorProperty:
    227:227:void <clinit>() -> <clinit>
    231:232:void <init>(java.lang.String) -> <init>
    225:225:java.lang.Object get(java.lang.Object) -> get
    236:236:java.lang.Integer get(com.google.android.material.circularreveal.CircularRevealWidget) -> get
    225:225:void set(java.lang.Object,java.lang.Object) -> set
    241:242:void set(com.google.android.material.circularreveal.CircularRevealWidget,java.lang.Integer) -> set
com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo -> com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo:
    132:132:void <init>(com.google.android.material.circularreveal.CircularRevealWidget$1) -> <init>
    144:144:void <init>() -> <init>
    146:150:void <init>(float,float,float) -> <init>
    157:160:void set(float,float,float) -> set
com.google.android.material.circularreveal.cardview.CircularRevealCardView -> com.google.android.material.circularreveal.cardview.CircularRevealCardView:
    46:47:void buildCircularRevealCache() -> buildCircularRevealCache
    51:52:void destroyCircularRevealCache() -> destroyCircularRevealCache
    88:93:void draw(android.graphics.Canvas) -> draw
    78:78:android.graphics.drawable.Drawable getCircularRevealOverlayDrawable() -> getCircularRevealOverlayDrawable
    72:72:int getCircularRevealScrimColor() -> getCircularRevealScrimColor
    62:62:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo() -> getRevealInfo
    102:105:boolean isOpaque() -> isOpaque
    83:84:void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable) -> setCircularRevealOverlayDrawable
    67:68:void setCircularRevealScrimColor(int) -> setCircularRevealScrimColor
    56:57:void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> setRevealInfo
com.google.android.material.floatingactionbutton.FloatingActionButton -> com.google.android.material.floatingactionbutton.FloatingActionButton:
    93:93:int access$000(com.google.android.material.floatingactionbutton.FloatingActionButton) -> access$000
    93:93:void access$101(com.google.android.material.floatingactionbutton.FloatingActionButton,android.graphics.drawable.Drawable) -> access$101
    544:545:void addOnHideAnimationListener(android.animation.Animator$AnimatorListener) -> addOnHideAnimationListener
    512:513:void addOnShowAnimationListener(android.animation.Animator$AnimatorListener) -> addOnShowAnimationListener
    1255:1256:com.google.android.material.floatingactionbutton.FloatingActionButtonImpl createImpl() -> createImpl
    737:739:void drawableStateChanged() -> drawableStateChanged
    328:328:android.content.res.ColorStateList getBackgroundTintList() -> getBackgroundTintList
    354:354:android.graphics.PorterDuff$Mode getBackgroundTintMode() -> getBackgroundTintMode
    1104:1104:float getCompatElevation() -> getCompatElevation
    1139:1139:float getCompatHoveredFocusedTranslationZ() -> getCompatHoveredFocusedTranslationZ
    1174:1174:float getCompatPressedTranslationZ() -> getCompatPressedTranslationZ
    810:810:android.graphics.drawable.Drawable getContentBackground() -> getContentBackground
    782:787:boolean getContentRect(android.graphics.Rect) -> getContentRect
    684:684:int getCustomSize() -> getCustomSize
    568:568:int getExpandedComponentIdHint() -> getExpandedComponentIdHint
    1226:1226:com.google.android.material.animation.MotionSpec getHideMotionSpec() -> getHideMotionSpec
    1248:1251:com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl() -> getImpl
    796:798:void getMeasuredContentRect(android.graphics.Rect) -> getMeasuredContentRect
    274:274:int getRippleColor() -> getRippleColor
    285:285:android.content.res.ColorStateList getRippleColorStateList() -> getRippleColorStateList
    1203:1203:com.google.android.material.animation.MotionSpec getShowMotionSpec() -> getShowMotionSpec
    628:628:int getSize() -> getSize
    698:698:int getSizeDimension() -> getSizeDimension
    702:719:int getSizeDimension(int) -> getSizeDimension
    388:388:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    407:407:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    421:421:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    435:435:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    596:596:boolean getUseCompatPadding() -> getUseCompatPadding
    540:541:void hide(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener,boolean) -> hide
    558:558:boolean isExpanded() -> isExpanded
    656:656:boolean isOrWillBeShown() -> isOrWillBeShown
    743:745:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    801:805:void offsetRectWithShadow(android.graphics.Rect) -> offsetRectWithShadow
    439:458:void onApplySupportImageTint() -> onApplySupportImageTint
    725:727:void onAttachedToWindow() -> onAttachedToWindow
    731:733:void onDetachedFromWindow() -> onDetachedFromWindow
    247:262:void onMeasure(int,int) -> onMeasure
    760:770:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    749:753:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    841:847:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    548:549:void removeOnHideAnimationListener(android.animation.Animator$AnimatorListener) -> removeOnHideAnimationListener
    516:517:void removeOnShowAnimationListener(android.animation.Animator$AnimatorListener) -> removeOnShowAnimationListener
    814:836:int resolveAdjustedSize(int,int) -> resolveAdjustedSize
    472:473:void setBackgroundColor(int) -> setBackgroundColor
    462:463:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    467:468:void setBackgroundResource(int) -> setBackgroundResource
    339:343:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    366:370:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    1116:1117:void setCompatElevation(float) -> setCompatElevation
    1128:1129:void setCompatElevationResource(int) -> setCompatElevationResource
    1151:1152:void setCompatHoveredFocusedTranslationZ(float) -> setCompatHoveredFocusedTranslationZ
    1163:1164:void setCompatHoveredFocusedTranslationZResource(int) -> setCompatHoveredFocusedTranslationZResource
    1186:1187:void setCompatPressedTranslationZ(float) -> setCompatPressedTranslationZ
    1198:1199:void setCompatPressedTranslationZResource(int) -> setCompatPressedTranslationZResource
    670:675:void setCustomSize(int) -> setCustomSize
    563:564:void setExpandedComponentIdHint(int) -> setExpandedComponentIdHint
    1235:1236:void setHideMotionSpec(com.google.android.material.animation.MotionSpec) -> setHideMotionSpec
    1244:1245:void setHideMotionSpecResource(int) -> setHideMotionSpecResource
    483:485:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    478:479:void setImageResource(int) -> setImageResource
    299:300:void setRippleColor(int) -> setRippleColor
    313:317:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    1212:1213:void setShowMotionSpec(com.google.android.material.animation.MotionSpec) -> setShowMotionSpec
    1221:1222:void setShowMotionSpecResource(int) -> setShowMotionSpecResource
    613:618:void setSize(int) -> setSize
    378:379:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    397:398:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    412:416:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    426:430:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
    581:585:void setUseCompatPadding(boolean) -> setUseCompatPadding
    508:509:void show(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener,boolean) -> show
    634:638:com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener wrapOnVisibilityChangedListener(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener) -> wrapOnVisibilityChangedListener
com.google.android.material.floatingactionbutton.FloatingActionButton$1 -> com.google.android.material.floatingactionbutton.FloatingActionButton$1:
    638:638:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener) -> <init>
    646:647:void onHidden() -> onHidden
    641:642:void onShown() -> onShown
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior -> com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior:
    882:884:void <init>() -> <init>
    887:895:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    873:873:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect) -> getInsetDodgeRect
    1047:1053:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.graphics.Rect) -> getInsetDodgeRect
    944:948:boolean isBottomSheet(android.view.View) -> isBottomSheet
    1062:1093:void offsetIfNeeded(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton) -> offsetIfNeeded
    923:928:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    873:873:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    933:940:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.view.View) -> onDependentViewChanged
    873:873:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    1020:1037:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,int) -> onLayoutChild
    957:975:boolean shouldUpdateVisibility(android.view.View,com.google.android.material.floatingactionbutton.FloatingActionButton) -> shouldUpdateVisibility
    980:999:boolean updateFabVisibilityForAppBarLayout(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,com.google.android.material.floatingactionbutton.FloatingActionButton) -> updateFabVisibilityForAppBarLayout
    1004:1013:boolean updateFabVisibilityForBottomSheet(android.view.View,com.google.android.material.floatingactionbutton.FloatingActionButton) -> updateFabVisibilityForBottomSheet
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior -> com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior:
    859:860:void <init>() -> <init>
    863:864:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    856:856:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.graphics.Rect) -> getInsetDodgeRect
    856:856:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    856:856:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.view.View) -> onDependentViewChanged
    856:856:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,int) -> onLayoutChild
com.google.android.material.floatingactionbutton.FloatingActionButton$ShadowDelegateImpl -> com.google.android.material.floatingactionbutton.FloatingActionButton$ShadowDelegateImpl:
    1263:1263:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton) -> <init>
    1267:1267:float getRadius() -> getRadius
    1284:1284:boolean isCompatPaddingEnabled() -> isCompatPaddingEnabled
    1279:1280:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    1272:1275:void setShadowPadding(int,int,int,int) -> setShadowPadding
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl:
    62:126:void <clinit>() -> <clinit>
    78:165:void <init>(com.google.android.material.internal.VisibilityAwareImageButton,com.google.android.material.shadow.ShadowViewDelegate) -> <init>
    356:360:void addOnHideAnimationListener(android.animation.Animator$AnimatorListener) -> addOnHideAnimationListener
    341:345:void addOnShowAnimationListener(android.animation.Animator$AnimatorListener) -> addOnShowAnimationListener
    290:304:void calculateImageMatrixFromScale(float,android.graphics.Matrix) -> calculateImageMatrixFromScale
    515:539:android.animation.AnimatorSet createAnimator(com.google.android.material.animation.MotionSpec,float,float,float) -> createAnimator
    651:657:android.animation.ValueAnimator createElevationAnimator(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl) -> createElevationAnimator
    607:617:void ensurePreDrawListener() -> ensurePreDrawListener
    543:543:android.graphics.drawable.Drawable getContentBackground() -> getContentBackground
    505:509:com.google.android.material.animation.MotionSpec getDefaultHideMotionSpec() -> getDefaultHideMotionSpec
    497:501:com.google.android.material.animation.MotionSpec getDefaultShowMotionSpec() -> getDefaultShowMotionSpec
    317:317:com.google.android.material.animation.MotionSpec getHideMotionSpec() -> getHideMotionSpec
    245:245:float getHoveredFocusedTranslationZ() -> getHoveredFocusedTranslationZ
    249:249:float getPressedTranslationZ() -> getPressedTranslationZ
    308:308:com.google.android.material.animation.MotionSpec getShowMotionSpec() -> getShowMotionSpec
    371:431:void hide(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean) -> hide
    641:646:boolean isOrWillBeHidden() -> isOrWillBeHidden
    631:636:boolean isOrWillBeShown() -> isOrWillBeShown
    564:568:void onAttachedToWindow() -> onAttachedToWindow
    571:575:void onDetachedFromWindow() -> onDetachedFromWindow
    599:604:void onPreDraw() -> onPreDraw
    363:368:void removeOnHideAnimationListener(android.animation.Animator$AnimatorListener) -> removeOnHideAnimationListener
    348:353:void removeOnShowAnimationListener(android.animation.Animator$AnimatorListener) -> removeOnShowAnimationListener
    212:218:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    221:224:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    234:238:void setElevation(float) -> setElevation
    321:322:void setHideMotionSpec(com.google.android.material.animation.MotionSpec) -> setHideMotionSpec
    253:257:void setHoveredFocusedTranslationZ(float) -> setHoveredFocusedTranslationZ
    282:287:void setImageMatrixScale(float) -> setImageMatrixScale
    260:264:void setPressedTranslationZ(float) -> setPressedTranslationZ
    227:231:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    312:313:void setShowMotionSpec(com.google.android.material.animation.MotionSpec) -> setShowMotionSpec
    725:725:boolean shouldAnimateVisibilityChange() -> shouldAnimateVisibilityChange
    434:494:void show(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean) -> show
    729:750:void updateFromViewRotation() -> updateFromViewRotation
    278:279:void updateImageMatrixScale() -> updateImageMatrixScale
    551:555:void updatePadding() -> updatePadding
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$1 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$1:
    388:388:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,boolean,com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener) -> <init>
    402:403:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    407:416:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    393:398:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$2 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$2:
    459:459:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,boolean,com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener) -> <init>
    470:476:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    462:466:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$3 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$3:
    609:609:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    612:613:boolean onPreDraw() -> onPreDraw
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$DisabledElevationAnimation -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$DisabledElevationAnimation:
    716:716:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation:
    698:698:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToPressedTranslationZAnimation -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToPressedTranslationZAnimation:
    707:707:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ResetElevationAnimation -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ResetElevationAnimation:
    689:689:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl:
    660:660:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    660:660:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$1) -> <init>
    680:681:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    668:676:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop -> com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop:
    53:54:void <init>(com.google.android.material.internal.VisibilityAwareImageButton,com.google.android.material.shadow.ShadowViewDelegate) -> <init>
    155:161:android.animation.Animator createElevationAnimator(float,float) -> createElevationAnimator
    166:166:float getElevation() -> getElevation
    228:243:void getPadding(android.graphics.Rect) -> getPadding
    209:209:void jumpDrawableToCurrentState() -> jumpDrawableToCurrentState
    171:172:void onCompatShadowChanged() -> onCompatShadowChanged
    188:204:void onDrawableStateChanged(int[]) -> onDrawableStateChanged
    102:151:void onElevationsChanged(float,float,float) -> onElevationsChanged
    176:184:void onPaddingUpdated(android.graphics.Rect) -> onPaddingUpdated
    213:213:boolean requirePreDrawListener() -> requirePreDrawListener
    89:95:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
com.google.android.material.internal.BaselineLayout -> com.google.android.material.internal.BaselineLayout:
    31:39:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    114:114:int getBaseline() -> getBaseline
    85:110:void onLayout(boolean,int,int,int,int) -> onLayout
    47:81:void onMeasure(int,int) -> onMeasure
com.google.android.material.internal.CheckableImageButton -> com.google.android.material.internal.CheckableImageButton:
    37:37:void <clinit>() -> <clinit>
    46:47:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    50:69:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    82:82:boolean isChecked() -> isChecked
    92:97:int[] onCreateDrawableState(int) -> onCreateDrawableState
    73:78:void setChecked(boolean) -> setChecked
    87:88:void toggle() -> toggle
com.google.android.material.internal.CheckableImageButton$1 -> com.google.android.material.internal.CheckableImageButton$1:
    54:54:void <init>(com.google.android.material.internal.CheckableImageButton) -> <init>
    57:59:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    64:67:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.internal.DescendantOffsetUtils -> com.google.android.material.internal.DescendantOffsetUtils:
    36:37:void <clinit>() -> <clinit>
    80:82:void getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> getDescendantRect
    85:97:void offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix) -> offsetDescendantMatrix
    48:70:void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> offsetDescendantRect
com.google.android.material.internal.ForegroundLinearLayout -> com.google.android.material.internal.ForegroundLinearLayout:
    57:58:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    42:79:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    202:233:void draw(android.graphics.Canvas) -> draw
    239:243:void drawableHotspotChanged(float,float) -> drawableHotspotChanged
    136:140:void drawableStateChanged() -> drawableStateChanged
    185:185:android.graphics.drawable.Drawable getForeground() -> getForeground
    89:89:int getForegroundGravity() -> getForegroundGravity
    128:132:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    190:192:void onLayout(boolean,int,int,int,int) -> onLayout
    196:198:void onSizeChanged(int,int,int,int) -> onSizeChanged
    151:175:void setForeground(android.graphics.drawable.Drawable) -> setForeground
    100:118:void setForegroundGravity(int) -> setForegroundGravity
    122:122:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
com.google.android.material.internal.NavigationMenuItemView -> com.google.android.material.internal.NavigationMenuItemView:
    52:52:void <clinit>() -> <clinit>
    87:88:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    72:98:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    128:144:void adjustAppearance() -> adjustAppearance
    166:175:android.graphics.drawable.StateListDrawable createDefaultBackground() -> createDefaultBackground
    180:180:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    102:119:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    242:246:int[] onCreateDrawableState(int) -> onCreateDrawableState
    232:232:boolean prefersCondensedTitle() -> prefersCondensedTitle
    154:163:void setActionView(android.view.View) -> setActionView
    190:196:void setCheckable(boolean) -> setCheckable
    200:202:void setChecked(boolean) -> setChecked
    271:272:void setHorizontalPadding(int) -> setHorizontalPadding
    209:228:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    275:276:void setIconPadding(int) -> setIconPadding
    250:256:void setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    267:268:void setNeedsEmptyIcon(boolean) -> setNeedsEmptyIcon
    259:260:void setTextAppearance(int) -> setTextAppearance
    263:264:void setTextColor(android.content.res.ColorStateList) -> setTextColor
    185:186:void setTitle(java.lang.CharSequence) -> setTitle
    122:124:boolean shouldExpandActionArea() -> shouldExpandActionArea
com.google.android.material.internal.NavigationMenuItemView$1 -> com.google.android.material.internal.NavigationMenuItemView$1:
    73:73:void <init>(com.google.android.material.internal.NavigationMenuItemView) -> <init>
    77:79:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.internal.NavigationMenuView -> com.google.android.material.internal.NavigationMenuView:
    38:39:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    42:44:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    51:51:int getWindowAnimations() -> getWindowAnimations
    47:47:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> initialize
com.google.android.material.internal.StateListAnimator -> com.google.android.material.internal.StateListAnimator:
    35:42:void <init>() -> <init>
    60:63:void addState(int[],android.animation.ValueAnimator) -> addState
com.google.android.material.internal.StateListAnimator$1 -> com.google.android.material.internal.StateListAnimator$1:
    43:43:void <init>(com.google.android.material.internal.StateListAnimator) -> <init>
    46:49:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.internal.StateListAnimator$Tuple -> com.google.android.material.internal.StateListAnimator$Tuple:
    118:121:void <init>(int[],android.animation.ValueAnimator) -> <init>
com.google.android.material.internal.ThemeEnforcement -> com.google.android.material.internal.ThemeEnforcement:
    40:43:void <clinit>() -> <clinit>
    196:197:void checkAppCompatTheme(android.content.Context) -> checkAppCompatTheme
    121:132:void checkCompatibleTheme(android.content.Context,android.util.AttributeSet,int,int) -> checkCompatibleTheme
    200:201:void checkMaterialTheme(android.content.Context) -> checkMaterialTheme
    141:174:void checkTextAppearance(android.content.Context,android.util.AttributeSet,int[],int,int,int[]) -> checkTextAppearance
    220:226:void checkTheme(android.content.Context,int[],java.lang.String) -> checkTheme
    183:192:boolean isCustomTextAppearanceValid(android.content.Context,android.util.AttributeSet,int[],int,int,int[]) -> isCustomTextAppearanceValid
    212:216:boolean isTheme(android.content.Context,int[]) -> isTheme
    72:78:android.content.res.TypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[]) -> obtainStyledAttributes
com.google.android.material.internal.ViewUtils -> com.google.android.material.internal.ViewUtils:
    34:48:android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode) -> parseTintMode
com.google.android.material.internal.VisibilityAwareImageButton -> com.google.android.material.internal.VisibilityAwareImageButton:
    62:62:int getUserSetVisibility() -> getUserSetVisibility
    55:59:void internalSetVisibility(int,boolean) -> internalSetVisibility
    51:52:void setVisibility(int) -> setVisibility
com.google.android.material.math.MathUtils -> com.google.android.material.math.MathUtils:
    28:30:float dist(float,float,float,float) -> dist
    65:69:float distanceToFurthestCorner(float,float,float,float,float,float) -> distanceToFurthestCorner
    37:37:float lerp(float,float,float) -> lerp
    74:74:float max(float,float,float,float) -> max
com.google.android.material.resources.MaterialResources -> com.google.android.material.resources.MaterialResources:
    43:52:android.content.res.ColorStateList getColorStateList(android.content.Context,android.content.res.TypedArray,int) -> getColorStateList
    64:73:android.graphics.drawable.Drawable getDrawable(android.content.Context,android.content.res.TypedArray,int) -> getDrawable
com.google.android.material.ripple.RippleUtils -> com.google.android.material.ripple.RippleUtils:
    36:63:void <clinit>() -> <clinit>
    95:167:android.content.res.ColorStateList convertToRippleDrawableColor(android.content.res.ColorStateList) -> convertToRippleDrawableColor
    189:190:int doubleAlpha(int) -> doubleAlpha
    174:179:int getColorForState(android.content.res.ColorStateList,int[]) -> getColorForState
com.google.android.material.shadow.ShadowDrawableWrapper -> com.google.android.material.shadow.ShadowDrawableWrapper:
    41:41:void <clinit>() -> <clinit>
    177:180:float calculateHorizontalPadding(float,float,boolean) -> calculateHorizontalPadding
    168:171:float calculateVerticalPadding(float,float,boolean) -> calculateVerticalPadding
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior -> com.google.android.material.snackbar.BaseTransientBottomBar$Behavior:
    792:794:void <init>() -> <init>
    802:802:boolean canSwipeDismissView(android.view.View) -> canSwipeDismissView
    807:808:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
com.google.android.material.snackbar.BaseTransientBottomBar$BehaviorDelegate -> com.google.android.material.snackbar.BaseTransientBottomBar$BehaviorDelegate:
    818:822:void <init>(com.google.android.material.behavior.SwipeDismissBehavior) -> <init>
    829:829:boolean canSwipeDismissView(android.view.View) -> canSwipeDismissView
    833:848:void onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout -> com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout:
    720:741:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    707:707:void access$300(com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout,boolean) -> access$300
    758:764:void onAttachedToWindow() -> onAttachedToWindow
    768:775:void onDetachedFromWindow() -> onDetachedFromWindow
    750:754:void onLayout(boolean,int,int,int,int) -> onLayout
    744:746:void setClickableOrFocusableBasedOnAccessibility(boolean) -> setClickableOrFocusableBasedOnAccessibility
    784:785:void setOnAttachStateChangeListener(com.google.android.material.snackbar.BaseTransientBottomBar$OnAttachStateChangeListener) -> setOnAttachStateChangeListener
    779:780:void setOnLayoutChangeListener(com.google.android.material.snackbar.BaseTransientBottomBar$OnLayoutChangeListener) -> setOnLayoutChangeListener
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout$1 -> com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout$1:
    731:731:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout) -> <init>
    734:735:void onTouchExplorationStateChanged(boolean) -> onTouchExplorationStateChanged
com.google.android.material.snackbar.Snackbar$SnackbarLayout -> com.google.android.material.snackbar.Snackbar$SnackbarLayout:
    397:398:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    402:417:void onMeasure(int,int) -> onMeasure
com.google.android.material.snackbar.SnackbarContentLayout -> com.google.android.material.snackbar.SnackbarContentLayout:
    46:52:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    66:66:android.widget.Button getActionView() -> getActionView
    62:62:android.widget.TextView getMessageView() -> getMessageView
    56:59:void onFinishInflate() -> onFinishInflate
    71:102:void onMeasure(int,int) -> onMeasure
    120:130:void updateTopBottomPadding(android.view.View,int,int) -> updateTopBottomPadding
    106:116:boolean updateViewsWithinLayout(int,int,int) -> updateViewsWithinLayout
com.google.android.material.snackbar.SnackbarManager -> com.google.android.material.snackbar.SnackbarManager:
    47:63:void <init>() -> <init>
    202:209:boolean cancelSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord,int) -> cancelSnackbarLocked
    35:38:com.google.android.material.snackbar.SnackbarManager getInstance() -> getInstance
    237:242:void handleTimeout(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord) -> handleTimeout
    213:213:boolean isCurrentSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$Callback) -> isCurrentSnackbarLocked
    142:148:void pauseTimeout(com.google.android.material.snackbar.SnackbarManager$Callback) -> pauseTimeout
    151:157:void restoreTimeoutIfPaused(com.google.android.material.snackbar.SnackbarManager$Callback) -> restoreTimeoutIfPaused
    221:234:void scheduleTimeoutLocked(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord) -> scheduleTimeoutLocked
com.google.android.material.snackbar.SnackbarManager$1 -> com.google.android.material.snackbar.SnackbarManager$1:
    52:52:void <init>(com.google.android.material.snackbar.SnackbarManager) -> <init>
    55:60:boolean handleMessage(android.os.Message) -> handleMessage
com.google.android.material.snackbar.SnackbarManager$SnackbarRecord -> com.google.android.material.snackbar.SnackbarManager$SnackbarRecord:
    182:182:boolean isSnackbar(com.google.android.material.snackbar.SnackbarManager$Callback) -> isSnackbar
com.google.android.material.stateful.ExtendableSavedState -> com.google.android.material.stateful.ExtendableSavedState:
    88:88:void <clinit>() -> <clinit>
    34:34:void <init>(android.os.Parcel,java.lang.ClassLoader,com.google.android.material.stateful.ExtendableSavedState$1) -> <init>
    39:41:void <init>(android.os.Parcelable) -> <init>
    44:58:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    81:82:java.lang.String toString() -> toString
    62:77:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.stateful.ExtendableSavedState$1 -> com.google.android.material.stateful.ExtendableSavedState$1:
    89:89:void <init>() -> <init>
    89:89:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    89:89:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    93:93:com.google.android.material.stateful.ExtendableSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    98:98:com.google.android.material.stateful.ExtendableSavedState createFromParcel(android.os.Parcel) -> createFromParcel
    89:89:java.lang.Object[] newArray(int) -> newArray
    103:103:com.google.android.material.stateful.ExtendableSavedState[] newArray(int) -> newArray
com.google.android.material.theme.MaterialComponentsViewInflater -> com.google.android.material.theme.MaterialComponentsViewInflater:
    32:32:void <init>() -> <init>
    37:37:androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet) -> createButton
com.google.android.material.transformation.ExpandableBehavior -> com.google.android.material.transformation.ExpandableBehavior:
    59:61:void <init>() -> <init>
    59:65:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    38:38:int access$000(com.google.android.material.transformation.ExpandableBehavior) -> access$000
    139:144:boolean didStateChange(boolean) -> didStateChange
    128:135:com.google.android.material.expandable.ExpandableWidget findExpandableWidget(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> findExpandableWidget
    116:123:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    88:110:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
com.google.android.material.transformation.ExpandableBehavior$1 -> com.google.android.material.transformation.ExpandableBehavior$1:
    96:96:void <init>(com.google.android.material.transformation.ExpandableBehavior,android.view.View,int,com.google.android.material.expandable.ExpandableWidget) -> <init>
    99:104:boolean onPreDraw() -> onPreDraw
com.google.android.material.transformation.ExpandableTransformationBehavior -> com.google.android.material.transformation.ExpandableTransformationBehavior:
    42:42:void <init>() -> <init>
    45:46:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    38:38:android.animation.AnimatorSet access$002(com.google.android.material.transformation.ExpandableTransformationBehavior,android.animation.AnimatorSet) -> access$002
    70:92:boolean onExpandedStateChange(android.view.View,android.view.View,boolean,boolean) -> onExpandedStateChange
com.google.android.material.transformation.ExpandableTransformationBehavior$1 -> com.google.android.material.transformation.ExpandableTransformationBehavior$1:
    78:78:void <init>(com.google.android.material.transformation.ExpandableTransformationBehavior) -> <init>
    81:82:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.transformation.FabTransformationBehavior -> com.google.android.material.transformation.FabTransformationBehavior:
    74:79:void <init>() -> <init>
    74:83:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    633:645:android.view.ViewGroup calculateChildContentContainer(android.view.View) -> calculateChildContentContainer
    591:609:void calculateChildVisibleBoundsAtEndOfExpansion(android.view.View,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,com.google.android.material.animation.MotionTiming,com.google.android.material.animation.MotionTiming,float,float,float,float,android.graphics.RectF) -> calculateChildVisibleBoundsAtEndOfExpansion
    556:565:float calculateRevealCenterX(android.view.View,android.view.View,com.google.android.material.animation.Positioning) -> calculateRevealCenterX
    569:578:float calculateRevealCenterY(android.view.View,android.view.View,com.google.android.material.animation.Positioning) -> calculateRevealCenterY
    492:513:float calculateTranslationX(android.view.View,android.view.View,com.google.android.material.animation.Positioning) -> calculateTranslationX
    517:538:float calculateTranslationY(android.view.View,android.view.View,com.google.android.material.animation.Positioning) -> calculateTranslationY
    613:626:float calculateValueOfAnimationAtEndOfExpansion(com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,com.google.android.material.animation.MotionTiming,float,float) -> calculateValueOfAnimationAtEndOfExpansion
    542:553:void calculateWindowBounds(android.view.View,android.graphics.RectF) -> calculateWindowBounds
    459:489:void createChildrenFadeAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> createChildrenFadeAnimation
    419:449:void createColorAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> createColorAnimation
    187:202:void createElevationAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> createElevationAnimation
    334:409:void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List) -> createExpansionAnimation
    272:322:void createIconFadeAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> createIconFadeAnimation
    695:706:void createPostFillRadialExpansion(android.view.View,long,long,long,int,int,float,java.util.List) -> createPostFillRadialExpansion
    673:684:void createPreFillRadialExpansion(android.view.View,long,int,int,float,java.util.List) -> createPreFillRadialExpansion
    213:262:void createTranslationAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List,android.graphics.RectF) -> createTranslationAnimation
    658:662:int getBackgroundTint(android.view.View) -> getBackgroundTint
    88:98:boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> layoutDependsOn
    104:109:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    115:173:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean) -> onCreateExpandedStateChangeAnimation
    650:653:android.view.ViewGroup toViewGroupOrNull(android.view.View) -> toViewGroupOrNull
com.google.android.material.transformation.FabTransformationBehavior$1 -> com.google.android.material.transformation.FabTransformationBehavior$1:
    149:149:void <init>(com.google.android.material.transformation.FabTransformationBehavior,boolean,android.view.View,android.view.View) -> <init>
    162:168:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    152:158:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.transformation.FabTransformationBehavior$2 -> com.google.android.material.transformation.FabTransformationBehavior$2:
    297:297:void <init>(com.google.android.material.transformation.FabTransformationBehavior,android.view.View) -> <init>
    302:303:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.transformation.FabTransformationBehavior$3 -> com.google.android.material.transformation.FabTransformationBehavior$3:
    310:310:void <init>(com.google.android.material.transformation.FabTransformationBehavior,com.google.android.material.circularreveal.CircularRevealWidget,android.graphics.drawable.Drawable) -> <init>
    319:320:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    314:315:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.transformation.FabTransformationBehavior$4 -> com.google.android.material.transformation.FabTransformationBehavior$4:
    362:362:void <init>(com.google.android.material.transformation.FabTransformationBehavior,com.google.android.material.circularreveal.CircularRevealWidget) -> <init>
    367:370:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec -> com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec:
    709:709:void <init>() -> <init>
com.google.android.material.transformation.FabTransformationScrimBehavior -> com.google.android.material.transformation.FabTransformationScrimBehavior:
    48:51:void <init>() -> <init>
    48:55:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    104:118:void createScrimAnimation(android.view.View,boolean,boolean,java.util.List,java.util.List) -> createScrimAnimation
    59:59:boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> layoutDependsOn
    72:95:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean) -> onCreateExpandedStateChangeAnimation
    65:65:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
com.google.android.material.transformation.FabTransformationScrimBehavior$1 -> com.google.android.material.transformation.FabTransformationScrimBehavior$1:
    80:80:void <init>(com.google.android.material.transformation.FabTransformationScrimBehavior,boolean,android.view.View) -> <init>
    90:93:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    83:86:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.transformation.FabTransformationSheetBehavior -> com.google.android.material.transformation.FabTransformationSheetBehavior:
    47:47:void <init>() -> <init>
    50:51:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    56:65:com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec onCreateMotionSpec(android.content.Context,boolean) -> onCreateMotionSpec
    72:73:boolean onExpandedStateChange(android.view.View,android.view.View,boolean,boolean) -> onExpandedStateChange
    77:120:void updateImportantForAccessibility(android.view.View,boolean) -> updateImportantForAccessibility
com.md.mataka.MainActivity -> com.md.mataka.MainActivity:
    42:67:void <init>() -> <init>
    42:42:void access$000(com.md.mataka.MainActivity) -> access$000
    42:42:void access$100(com.md.mataka.MainActivity) -> access$100
    331:430:void apicall() -> apicall
    449:466:void initViews() -> initViews
    71:325:void onCreate(android.os.Bundle) -> onCreate
    434:436:void onResume() -> onResume
    439:444:void openWhatsApp() -> openWhatsApp
com.md.mataka.MainActivity$1 -> com.md.mataka.MainActivity$1:
    96:96:void <init>(com.md.mataka.MainActivity) -> <init>
    99:104:void onClick(android.view.View) -> onClick
com.md.mataka.MainActivity$10 -> com.md.mataka.MainActivity$10:
    190:190:void <init>(com.md.mataka.MainActivity) -> <init>
    193:194:void onClick(android.view.View) -> onClick
com.md.mataka.MainActivity$11 -> com.md.mataka.MainActivity$11:
    198:198:void <init>(com.md.mataka.MainActivity) -> <init>
    201:202:void onClick(android.view.View) -> onClick
com.md.mataka.MainActivity$12 -> com.md.mataka.MainActivity$12:
    205:205:void <init>(com.md.mataka.MainActivity) -> <init>
    208:209:void onClick(android.view.View) -> onClick
com.md.mataka.MainActivity$13 -> com.md.mataka.MainActivity$13:
    212:212:void <init>(com.md.mataka.MainActivity) -> <init>
    215:216:void onClick(android.view.View) -> onClick
com.md.mataka.MainActivity$14 -> com.md.mataka.MainActivity$14:
    249:249:void <init>(com.md.mataka.MainActivity) -> <init>
    253:308:boolean onItemClick(android.view.View,int,com.mikepenz.materialdrawer.model.interfaces.IDrawerItem) -> onItemClick
com.md.mataka.MainActivity$15 -> com.md.mataka.MainActivity$15:
    314:314:void <init>(com.md.mataka.MainActivity,com.mikepenz.materialdrawer.Drawer) -> <init>
    317:322:void onClick(android.view.View) -> onClick
com.md.mataka.MainActivity$16 -> com.md.mataka.MainActivity$16:
    334:334:void <init>(com.md.mataka.MainActivity) -> <init>
    334:334:void onResponse(java.lang.Object) -> onResponse
    339:406:void onResponse(java.lang.String) -> onResponse
com.md.mataka.MainActivity$17 -> com.md.mataka.MainActivity$17:
    408:408:void <init>(com.md.mataka.MainActivity) -> <init>
    412:415:void onErrorResponse(com.android.volley.VolleyError) -> onErrorResponse
com.md.mataka.MainActivity$18 -> com.md.mataka.MainActivity$18:
    417:417:void <init>(com.md.mataka.MainActivity,int,java.lang.String,com.android.volley.Response$Listener,com.android.volley.Response$ErrorListener) -> <init>
    420:425:java.util.Map getParams() -> getParams
com.md.mataka.MainActivity$2 -> com.md.mataka.MainActivity$2:
    107:107:void <init>(com.md.mataka.MainActivity) -> <init>
    110:112:void onClick(android.view.View) -> onClick
com.md.mataka.MainActivity$3 -> com.md.mataka.MainActivity$3:
    115:115:void <init>(com.md.mataka.MainActivity) -> <init>
    118:124:void onClick(android.view.View) -> onClick
com.md.mataka.MainActivity$4 -> com.md.mataka.MainActivity$4:
    127:127:void <init>(com.md.mataka.MainActivity) -> <init>
    130:132:void onClick(android.view.View) -> onClick
com.md.mataka.MainActivity$5 -> com.md.mataka.MainActivity$5:
    155:155:void <init>(com.md.mataka.MainActivity) -> <init>
    158:159:void onClick(android.view.View) -> onClick
com.md.mataka.MainActivity$6 -> com.md.mataka.MainActivity$6:
    162:162:void <init>(com.md.mataka.MainActivity) -> <init>
    165:166:void onClick(android.view.View) -> onClick
com.md.mataka.MainActivity$7 -> com.md.mataka.MainActivity$7:
    169:169:void <init>(com.md.mataka.MainActivity) -> <init>
    172:173:void onClick(android.view.View) -> onClick
com.md.mataka.MainActivity$8 -> com.md.mataka.MainActivity$8:
    176:176:void <init>(com.md.mataka.MainActivity) -> <init>
    179:180:void onClick(android.view.View) -> onClick
com.md.mataka.MainActivity$9 -> com.md.mataka.MainActivity$9:
    183:183:void <init>(com.md.mataka.MainActivity) -> <init>
    186:187:void onClick(android.view.View) -> onClick
com.md.mataka.SliderAdapter -> com.md.mataka.SliderAdapter:
    21:23:void <init>(android.content.Context,java.util.ArrayList) -> <init>
    52:52:int getCount() -> getCount
    15:15:void onBindViewHolder(com.smarteist.autoimageslider.SliderViewAdapter$ViewHolder,int) -> onBindViewHolder
    38:46:void onBindViewHolder(com.md.mataka.SliderAdapter$SliderAdapterViewHolder,int) -> onBindViewHolder
    15:15:com.smarteist.autoimageslider.SliderViewAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup) -> onCreateViewHolder
    29:30:com.md.mataka.SliderAdapter$SliderAdapterViewHolder onCreateViewHolder(android.view.ViewGroup) -> onCreateViewHolder
com.md.mataka.SliderAdapter$SliderAdapterViewHolder -> com.md.mataka.SliderAdapter$SliderAdapterViewHolder:
    62:65:void <init>(android.view.View) -> <init>
com.md.mataka.SliderDataStore -> com.md.mataka.SliderDataStore:
    10:12:void <init>(java.lang.String) -> <init>
    16:16:java.lang.String getImgUrl() -> getImgUrl
com.md.mataka.ViewDialog -> com.md.mataka.ViewDialog:
    17:19:void <init>(androidx.appcompat.app.AppCompatActivity) -> <init>
    39:40:void hideDialog() -> hideDialog
    23:36:void showDialog() -> showDialog
com.md.mataka.adapter_chart -> com.md.mataka.adapter_chart:
    20:27:void <init>(android.content.Context,java.util.ArrayList,java.util.ArrayList) -> <init>
    53:53:int getItemCount() -> getItemCount
    17:17:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    40:48:void onBindViewHolder(com.md.mataka.adapter_chart$ViewHolder,int) -> onBindViewHolder
    17:17:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    32:33:com.md.mataka.adapter_chart$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
com.md.mataka.adapter_chart$1 -> com.md.mataka.adapter_chart$1:
    41:41:void <init>(com.md.mataka.adapter_chart,int) -> <init>
    44:45:void onClick(android.view.View) -> onClick
com.md.mataka.adapter_chart$ViewHolder -> com.md.mataka.adapter_chart$ViewHolder:
    62:68:void <init>(com.md.mataka.adapter_chart,android.view.View) -> <init>
com.md.mataka.adapter_crossing -> com.md.mataka.adapter_crossing:
    20:26:void <init>(android.content.Context,java.util.ArrayList) -> <init>
    58:58:int getItemCount() -> getItemCount
    16:16:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    39:49:void onBindViewHolder(com.md.mataka.adapter_crossing$ViewHolder,int) -> onBindViewHolder
    16:16:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    31:32:com.md.mataka.adapter_crossing$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
com.md.mataka.adapter_crossing$ViewHolder -> com.md.mataka.adapter_crossing$ViewHolder:
    67:73:void <init>(com.md.mataka.adapter_crossing,android.view.View) -> <init>
com.md.mataka.adapter_market -> com.md.mataka.adapter_market:
    22:34:void <init>(android.content.Context,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> <init>
    18:18:java.util.ArrayList access$000(com.md.mataka.adapter_market) -> access$000
    92:92:int getItemCount() -> getItemCount
    18:18:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    48:87:void onBindViewHolder(com.md.mataka.adapter_market$ViewHolder,int) -> onBindViewHolder
    18:18:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    39:40:com.md.mataka.adapter_market$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
com.md.mataka.adapter_market$1 -> com.md.mataka.adapter_market$1:
    54:54:void <init>(com.md.mataka.adapter_market,int) -> <init>
    57:71:void onClick(android.view.View) -> onClick
com.md.mataka.adapter_market$2 -> com.md.mataka.adapter_market$2:
    75:75:void <init>(com.md.mataka.adapter_market) -> <init>
    78:79:void onClick(android.view.View) -> onClick
com.md.mataka.adapter_market$ViewHolder -> com.md.mataka.adapter_market$ViewHolder:
    101:108:void <init>(com.md.mataka.adapter_market,android.view.View) -> <init>
com.md.mataka.adapter_result -> com.md.mataka.adapter_result:
    18:25:void <init>(android.content.Context,java.util.ArrayList,java.util.ArrayList) -> <init>
    46:46:int getItemCount() -> getItemCount
    15:15:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    38:41:void onBindViewHolder(com.md.mataka.adapter_result$ViewHolder,int) -> onBindViewHolder
    15:15:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    30:31:com.md.mataka.adapter_result$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
com.md.mataka.adapter_result$ViewHolder -> com.md.mataka.adapter_result$ViewHolder:
    53:57:void <init>(com.md.mataka.adapter_result,android.view.View) -> <init>
com.md.mataka.adapterbetting -> com.md.mataka.adapterbetting:
    25:31:void <init>(android.content.Context,java.util.ArrayList) -> <init>
    21:21:java.util.ArrayList access$000(com.md.mataka.adapterbetting) -> access$000
    93:93:int getItemCount() -> getItemCount
    88:88:java.util.ArrayList getNumber() -> getNumber
    21:21:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    44:84:void onBindViewHolder(com.md.mataka.adapterbetting$ViewHolder,int) -> onBindViewHolder
    21:21:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    36:37:com.md.mataka.adapterbetting$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
com.md.mataka.adapterbetting$1 -> com.md.mataka.adapterbetting$1:
    48:48:void <init>(com.md.mataka.adapterbetting,int,com.md.mataka.adapterbetting$ViewHolder) -> <init>
    80:80:void afterTextChanged(android.text.Editable) -> afterTextChanged
    52:52:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    57:75:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.md.mataka.adapterbetting$1$1 -> com.md.mataka.adapterbetting$1$1:
    66:66:void <init>(com.md.mataka.adapterbetting$1) -> <init>
    66:66:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.md.mataka.adapterbetting$ViewHolder -> com.md.mataka.adapterbetting$ViewHolder:
    102:108:void <init>(com.md.mataka.adapterbetting,android.view.View) -> <init>
com.md.mataka.adapterplayed -> com.md.mataka.adapterplayed:
    19:30:void <init>(android.content.Context,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> <init>
    53:53:int getItemCount() -> getItemCount
    15:15:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    43:49:void onBindViewHolder(com.md.mataka.adapterplayed$ViewHolder,int) -> onBindViewHolder
    15:15:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    35:36:com.md.mataka.adapterplayed$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
com.md.mataka.adapterplayed$ViewHolder -> com.md.mataka.adapterplayed$ViewHolder:
    61:70:void <init>(com.md.mataka.adapterplayed,android.view.View) -> <init>
com.md.mataka.adaptertransaction -> com.md.mataka.adaptertransaction:
    18:27:void <init>(android.content.Context,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> <init>
    48:48:int getItemCount() -> getItemCount
    15:15:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    40:44:void onBindViewHolder(com.md.mataka.adaptertransaction$ViewHolder,int) -> onBindViewHolder
    15:15:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    32:33:com.md.mataka.adaptertransaction$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
com.md.mataka.adaptertransaction$ViewHolder -> com.md.mataka.adaptertransaction$ViewHolder:
    56:62:void <init>(com.md.mataka.adaptertransaction,android.view.View) -> <init>
com.md.mataka.bazar -> com.md.mataka.bazar:
    27:32:void <init>() -> <init>
    338:409:void apicall2() -> apicall2
    96:186:void doublepatti() -> doublepatti
    415:416:void initViews() -> initViews
    327:333:void jodi() -> jodi
    41:80:void onCreate(android.os.Bundle) -> onCreate
    83:93:void single() -> single
    190:310:void singlepatti() -> singlepatti
    314:324:void triplepatti() -> triplepatti
com.md.mataka.bazar$1 -> com.md.mataka.bazar$1:
    46:46:void <init>(com.md.mataka.bazar) -> <init>
    49:50:void onClick(android.view.View) -> onClick
com.md.mataka.bazar$2 -> com.md.mataka.bazar$2:
    344:344:void <init>(com.md.mataka.bazar) -> <init>
    344:344:void onResponse(java.lang.Object) -> onResponse
    347:386:void onResponse(java.lang.String) -> onResponse
com.md.mataka.bazar$3 -> com.md.mataka.bazar$3:
    388:388:void <init>(com.md.mataka.bazar) -> <init>
    392:395:void onErrorResponse(com.android.volley.VolleyError) -> onErrorResponse
com.md.mataka.bazar$4 -> com.md.mataka.bazar$4:
    397:397:void <init>(com.md.mataka.bazar,int,java.lang.String,com.android.volley.Response$Listener,com.android.volley.Response$ErrorListener) -> <init>
    400:404:java.util.Map getParams() -> getParams
com.md.mataka.betting -> com.md.mataka.betting:
    38:53:void <init>() -> <init>
    38:38:void access$000(com.md.mataka.betting) -> access$000
    38:38:void access$100(com.md.mataka.betting) -> access$100
    184:265:void apicall() -> apicall
    277:280:void initView() -> initView
    58:180:void onCreate(android.os.Bundle) -> onCreate
    269:274:void openWhatsApp() -> openWhatsApp
com.md.mataka.betting$1 -> com.md.mataka.betting$1:
    64:64:void <init>(com.md.mataka.betting) -> <init>
    67:68:void onClick(android.view.View) -> onClick
com.md.mataka.betting$2 -> com.md.mataka.betting$2:
    76:76:void <init>(com.md.mataka.betting) -> <init>
    80:86:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.md.mataka.betting$3 -> com.md.mataka.betting$3:
    96:96:void <init>(com.md.mataka.betting) -> <init>
    100:178:void onClick(android.view.View) -> onClick
com.md.mataka.betting$3$1 -> com.md.mataka.betting$3$1:
    108:108:void <init>(com.md.mataka.betting$3) -> <init>
    110:111:void onClick(android.content.DialogInterface,int) -> onClick
com.md.mataka.betting$3$2 -> com.md.mataka.betting$3$2:
    129:129:void <init>(com.md.mataka.betting$3) -> <init>
    131:132:void onClick(android.content.DialogInterface,int) -> onClick
com.md.mataka.betting$3$3 -> com.md.mataka.betting$3$3:
    159:159:void <init>(com.md.mataka.betting$3) -> <init>
    161:163:void onClick(android.content.DialogInterface,int) -> onClick
com.md.mataka.betting$3$4 -> com.md.mataka.betting$3$4:
    168:168:void <init>(com.md.mataka.betting$3) -> <init>
    170:171:void onClick(android.content.DialogInterface,int) -> onClick
com.md.mataka.betting$4 -> com.md.mataka.betting$4:
    191:191:void <init>(com.md.mataka.betting) -> <init>
    191:191:void onResponse(java.lang.Object) -> onResponse
    194:236:void onResponse(java.lang.String) -> onResponse
com.md.mataka.betting$5 -> com.md.mataka.betting$5:
    238:238:void <init>(com.md.mataka.betting) -> <init>
    242:245:void onErrorResponse(com.android.volley.VolleyError) -> onErrorResponse
com.md.mataka.betting$6 -> com.md.mataka.betting$6:
    247:247:void <init>(com.md.mataka.betting,int,java.lang.String,com.android.volley.Response$Listener,com.android.volley.Response$ErrorListener) -> <init>
    250:260:java.util.Map getParams() -> getParams
com.md.mataka.chart_menu -> com.md.mataka.chart_menu:
    31:38:void <init>() -> <init>
    100:163:void apicall() -> apicall
    166:168:void initViews() -> initViews
    43:96:void onCreate(android.os.Bundle) -> onCreate
com.md.mataka.chart_menu$1 -> com.md.mataka.chart_menu$1:
    47:47:void <init>(com.md.mataka.chart_menu) -> <init>
    50:51:void onClick(android.view.View) -> onClick
com.md.mataka.chart_menu$2 -> com.md.mataka.chart_menu$2:
    55:55:void <init>(com.md.mataka.chart_menu) -> <init>
    69:93:void afterTextChanged(android.text.Editable) -> afterTextChanged
    59:59:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    64:64:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.md.mataka.chart_menu$3 -> com.md.mataka.chart_menu$3:
    106:106:void <init>(com.md.mataka.chart_menu) -> <init>
    106:106:void onResponse(java.lang.Object) -> onResponse
    109:138:void onResponse(java.lang.String) -> onResponse
com.md.mataka.chart_menu$4 -> com.md.mataka.chart_menu$4:
    140:140:void <init>(com.md.mataka.chart_menu) -> <init>
    144:148:void onErrorResponse(com.android.volley.VolleyError) -> onErrorResponse
com.md.mataka.chart_menu$5 -> com.md.mataka.chart_menu$5:
    150:150:void <init>(com.md.mataka.chart_menu,int,java.lang.String,com.android.volley.Response$Listener,com.android.volley.Response$ErrorListener) -> <init>
    153:158:java.util.Map getParams() -> getParams
com.md.mataka.charts -> com.md.mataka.charts:
    12:12:void <init>() -> <init>
    43:44:void initViews() -> initViews
    20:40:void onCreate(android.os.Bundle) -> onCreate
    63:63:void onDownloadRequested(java.lang.String,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String) -> onDownloadRequested
    68:68:void onExternalPageRequest(java.lang.String) -> onExternalPageRequest
    57:58:void onPageError(int,java.lang.String,java.lang.String) -> onPageError
    52:53:void onPageFinished(java.lang.String) -> onPageFinished
    48:48:void onPageStarted(java.lang.String,android.graphics.Bitmap) -> onPageStarted
com.md.mataka.charts$1 -> com.md.mataka.charts$1:
    24:24:void <init>(com.md.mataka.charts) -> <init>
    27:28:void onClick(android.view.View) -> onClick
com.md.mataka.constant -> com.md.mataka.constant:
    5:32:void <clinit>() -> <clinit>
com.md.mataka.crossing -> com.md.mataka.crossing:
    37:57:void <init>() -> <init>
    37:37:void access$000(com.md.mataka.crossing) -> access$000
    37:37:void access$100(com.md.mataka.crossing) -> access$100
    153:210:void apicall() -> apicall
    223:266:void characterCount(java.lang.String) -> characterCount
    269:332:void initView() -> initView
    61:149:void onCreate(android.os.Bundle) -> onCreate
    214:219:void openWhatsApp() -> openWhatsApp
com.md.mataka.crossing$1 -> com.md.mataka.crossing$1:
    66:66:void <init>(com.md.mataka.crossing) -> <init>
    69:70:void onClick(android.view.View) -> onClick
com.md.mataka.crossing$2 -> com.md.mataka.crossing$2:
    78:78:void <init>(com.md.mataka.crossing) -> <init>
    82:147:void onClick(android.view.View) -> onClick
com.md.mataka.crossing$2$1 -> com.md.mataka.crossing$2$1:
    99:99:void <init>(com.md.mataka.crossing$2) -> <init>
    101:102:void onClick(android.content.DialogInterface,int) -> onClick
com.md.mataka.crossing$2$2 -> com.md.mataka.crossing$2$2:
    126:126:void <init>(com.md.mataka.crossing$2) -> <init>
    128:130:void onClick(android.content.DialogInterface,int) -> onClick
com.md.mataka.crossing$2$3 -> com.md.mataka.crossing$2$3:
    135:135:void <init>(com.md.mataka.crossing$2) -> <init>
    137:138:void onClick(android.content.DialogInterface,int) -> onClick
com.md.mataka.crossing$3 -> com.md.mataka.crossing$3:
    160:160:void <init>(com.md.mataka.crossing) -> <init>
    160:160:void onResponse(java.lang.Object) -> onResponse
    163:182:void onResponse(java.lang.String) -> onResponse
com.md.mataka.crossing$4 -> com.md.mataka.crossing$4:
    184:184:void <init>(com.md.mataka.crossing) -> <init>
    188:191:void onErrorResponse(com.android.volley.VolleyError) -> onErrorResponse
com.md.mataka.crossing$5 -> com.md.mataka.crossing$5:
    193:193:void <init>(com.md.mataka.crossing,int,java.lang.String,com.android.volley.Response$Listener,com.android.volley.Response$ErrorListener) -> <init>
    196:205:java.util.Map getParams() -> getParams
com.md.mataka.crossing$6 -> com.md.mataka.crossing$6:
    277:277:void <init>(com.md.mataka.crossing) -> <init>
    290:304:void afterTextChanged(android.text.Editable) -> afterTextChanged
    281:281:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    286:286:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.md.mataka.crossing$7 -> com.md.mataka.crossing$7:
    307:307:void <init>(com.md.mataka.crossing) -> <init>
    320:329:void afterTextChanged(android.text.Editable) -> afterTextChanged
    311:311:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    316:316:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.md.mataka.deposit_money -> com.md.mataka.deposit_money:
    void $r8$lambda$0ydfIv8F-lEUjJIk2dUalPRCjwo(com.md.mataka.deposit_money,com.android.volley.VolleyError) -> $r8$lambda$0ydfIv8F-lEUjJIk2dUalPRCjwo
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$kI9rA0U_X2G7_1UgyBsP3GxjKvY(com.md.mataka.deposit_money,java.lang.String) -> $r8$lambda$kI9rA0U_X2G7_1UgyBsP3GxjKvY
      # {"id":"com.android.tools.r8.synthesized"}
    35:41:void <init>() -> <init>
    194:197:void lambda$updatePayment$0(java.lang.String) -> lambda$updatePayment$0
    199:202:void lambda$updatePayment$1(com.android.volley.VolleyError) -> lambda$updatePayment$1
    102:123:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    47:98:void onCreate(android.os.Bundle) -> onCreate
    189:217:void updatePayment() -> updatePayment
com.md.mataka.deposit_money$$ExternalSyntheticLambda0 -> com.md.mataka.deposit_money$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.md.mataka.deposit_money com.md.mataka.deposit_money$$InternalSyntheticLambda$0$837fcf8987f346f1e25b0a1ecda0c999cee9e1969240b20226f8088e81601547$1.f$0 -> f$0
    void com.md.mataka.deposit_money$$InternalSyntheticLambda$0$837fcf8987f346f1e25b0a1ecda0c999cee9e1969240b20226f8088e81601547$1.<init>(com.md.mataka.deposit_money) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.md.mataka.deposit_money$$InternalSyntheticLambda$0$837fcf8987f346f1e25b0a1ecda0c999cee9e1969240b20226f8088e81601547$1.onErrorResponse(com.android.volley.VolleyError) -> onErrorResponse
      # {"id":"com.android.tools.r8.synthesized"}
com.md.mataka.deposit_money$$ExternalSyntheticLambda1 -> com.md.mataka.deposit_money$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.md.mataka.deposit_money com.md.mataka.deposit_money$$InternalSyntheticLambda$0$837fcf8987f346f1e25b0a1ecda0c999cee9e1969240b20226f8088e81601547$0.f$0 -> f$0
    void com.md.mataka.deposit_money$$InternalSyntheticLambda$0$837fcf8987f346f1e25b0a1ecda0c999cee9e1969240b20226f8088e81601547$0.<init>(com.md.mataka.deposit_money) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.md.mataka.deposit_money$$InternalSyntheticLambda$0$837fcf8987f346f1e25b0a1ecda0c999cee9e1969240b20226f8088e81601547$0.onResponse(java.lang.Object) -> onResponse
      # {"id":"com.android.tools.r8.synthesized"}
com.md.mataka.deposit_money$1 -> com.md.mataka.deposit_money$1:
    51:51:void <init>(com.md.mataka.deposit_money) -> <init>
    54:55:void onClick(android.view.View) -> onClick
com.md.mataka.deposit_money$2 -> com.md.mataka.deposit_money$2:
    59:59:void <init>(com.md.mataka.deposit_money) -> <init>
    62:67:void onClick(android.view.View) -> onClick
com.md.mataka.deposit_money$3 -> com.md.mataka.deposit_money$3:
    72:72:void <init>(com.md.mataka.deposit_money) -> <init>
    75:96:void onClick(android.view.View) -> onClick
com.md.mataka.deposit_money$7 -> com.md.mataka.deposit_money$7:
    203:203:void <init>(com.md.mataka.deposit_money,int,java.lang.String,com.android.volley.Response$Listener,com.android.volley.Response$ErrorListener) -> <init>
    206:212:java.util.Map getParams() -> getParams
com.md.mataka.earn -> com.md.mataka.earn:
    10:10:void <init>() -> <init>
    44:47:void initView() -> initView
    18:41:void onCreate(android.os.Bundle) -> onCreate
com.md.mataka.earn$1 -> com.md.mataka.earn$1:
    23:23:void <init>(com.md.mataka.earn) -> <init>
    26:27:void onClick(android.view.View) -> onClick
com.md.mataka.earn$2 -> com.md.mataka.earn$2:
    30:30:void <init>(com.md.mataka.earn) -> <init>
    33:39:void onClick(android.view.View) -> onClick
com.md.mataka.fullsangam -> com.md.mataka.fullsangam:
    34:45:void <init>() -> <init>
    34:34:void access$000(com.md.mataka.fullsangam) -> access$000
    34:34:void access$100(com.md.mataka.fullsangam) -> access$100
    373:428:void apicall() -> apicall
    124:367:java.util.ArrayList getpatti() -> getpatti
    439:446:void initView() -> initView
    56:117:void onCreate(android.os.Bundle) -> onCreate
    431:436:void openWhatsApp() -> openWhatsApp
com.md.mataka.fullsangam$1 -> com.md.mataka.fullsangam$1:
    61:61:void <init>(com.md.mataka.fullsangam) -> <init>
    64:65:void onClick(android.view.View) -> onClick
com.md.mataka.fullsangam$2 -> com.md.mataka.fullsangam$2:
    79:79:void <init>(com.md.mataka.fullsangam) -> <init>
    82:114:void onClick(android.view.View) -> onClick
com.md.mataka.fullsangam$2$1 -> com.md.mataka.fullsangam$2$1:
    96:96:void <init>(com.md.mataka.fullsangam$2) -> <init>
    98:100:void onClick(android.content.DialogInterface,int) -> onClick
com.md.mataka.fullsangam$2$2 -> com.md.mataka.fullsangam$2$2:
    105:105:void <init>(com.md.mataka.fullsangam$2) -> <init>
    107:108:void onClick(android.content.DialogInterface,int) -> onClick
com.md.mataka.fullsangam$3 -> com.md.mataka.fullsangam$3:
    379:379:void <init>(com.md.mataka.fullsangam) -> <init>
    379:379:void onResponse(java.lang.Object) -> onResponse
    382:400:void onResponse(java.lang.String) -> onResponse
com.md.mataka.fullsangam$4 -> com.md.mataka.fullsangam$4:
    402:402:void <init>(com.md.mataka.fullsangam) -> <init>
    406:409:void onErrorResponse(com.android.volley.VolleyError) -> onErrorResponse
com.md.mataka.fullsangam$5 -> com.md.mataka.fullsangam$5:
    411:411:void <init>(com.md.mataka.fullsangam,int,java.lang.String,com.android.volley.Response$Listener,com.android.volley.Response$ErrorListener) -> <init>
    414:423:java.util.Map getParams() -> getParams
com.md.mataka.halfsangam -> com.md.mataka.halfsangam:
    35:49:void <init>() -> <init>
    35:35:void access$000(com.md.mataka.halfsangam) -> access$000
    35:35:void access$100(com.md.mataka.halfsangam) -> access$100
    172:227:void apicall() -> apicall
    241:484:java.util.ArrayList getpatti() -> getpatti
    491:499:void initView() -> initView
    60:167:void onCreate(android.os.Bundle) -> onCreate
    230:235:void openWhatsApp() -> openWhatsApp
com.md.mataka.halfsangam$1 -> com.md.mataka.halfsangam$1:
    63:63:void <init>(com.md.mataka.halfsangam) -> <init>
    66:67:void onClick(android.view.View) -> onClick
com.md.mataka.halfsangam$2 -> com.md.mataka.halfsangam$2:
    100:100:void <init>(com.md.mataka.halfsangam) -> <init>
    103:122:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    127:127:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.md.mataka.halfsangam$3 -> com.md.mataka.halfsangam$3:
    130:130:void <init>(com.md.mataka.halfsangam) -> <init>
    133:165:void onClick(android.view.View) -> onClick
com.md.mataka.halfsangam$3$1 -> com.md.mataka.halfsangam$3$1:
    147:147:void <init>(com.md.mataka.halfsangam$3) -> <init>
    149:151:void onClick(android.content.DialogInterface,int) -> onClick
com.md.mataka.halfsangam$3$2 -> com.md.mataka.halfsangam$3$2:
    156:156:void <init>(com.md.mataka.halfsangam$3) -> <init>
    158:159:void onClick(android.content.DialogInterface,int) -> onClick
com.md.mataka.halfsangam$4 -> com.md.mataka.halfsangam$4:
    178:178:void <init>(com.md.mataka.halfsangam) -> <init>
    178:178:void onResponse(java.lang.Object) -> onResponse
    181:199:void onResponse(java.lang.String) -> onResponse
com.md.mataka.halfsangam$5 -> com.md.mataka.halfsangam$5:
    201:201:void <init>(com.md.mataka.halfsangam) -> <init>
    205:208:void onErrorResponse(com.android.volley.VolleyError) -> onErrorResponse
com.md.mataka.halfsangam$6 -> com.md.mataka.halfsangam$6:
    210:210:void <init>(com.md.mataka.halfsangam,int,java.lang.String,com.android.volley.Response$Listener,com.android.volley.Response$ErrorListener) -> <init>
    213:222:java.util.Map getParams() -> getParams
com.md.mataka.howot -> com.md.mataka.howot:
    26:26:void <init>() -> <init>
    49:98:void apicall() -> apicall
    103:104:void initView() -> initView
    34:45:void onCreate(android.os.Bundle) -> onCreate
com.md.mataka.howot$1 -> com.md.mataka.howot$1:
    38:38:void <init>(com.md.mataka.howot) -> <init>
    41:42:void onClick(android.view.View) -> onClick
com.md.mataka.howot$2 -> com.md.mataka.howot$2:
    56:56:void <init>(com.md.mataka.howot) -> <init>
    56:56:void onResponse(java.lang.Object) -> onResponse
    59:75:void onResponse(java.lang.String) -> onResponse
com.md.mataka.howot$3 -> com.md.mataka.howot$3:
    77:77:void <init>(com.md.mataka.howot) -> <init>
    81:84:void onErrorResponse(com.android.volley.VolleyError) -> onErrorResponse
com.md.mataka.howot$4 -> com.md.mataka.howot$4:
    86:86:void <init>(com.md.mataka.howot,int,java.lang.String,com.android.volley.Response$Listener,com.android.volley.Response$ErrorListener) -> <init>
    89:93:java.util.Map getParams() -> getParams
com.md.mataka.latobold -> com.md.mataka.latobold:
    19:22:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    31:34:void onDraw(android.graphics.Canvas) -> onDraw
com.md.mataka.latonormal -> com.md.mataka.latonormal:
    18:21:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    30:31:void onDraw(android.graphics.Canvas) -> onDraw
com.md.mataka.ledger -> com.md.mataka.ledger:
    28:39:void <init>() -> <init>
    59:116:void apicall() -> apicall
    120:121:void initView() -> initView
    43:55:void onCreate(android.os.Bundle) -> onCreate
com.md.mataka.ledger$1 -> com.md.mataka.ledger$1:
    47:47:void <init>(com.md.mataka.ledger) -> <init>
    50:51:void onClick(android.view.View) -> onClick
com.md.mataka.ledger$2 -> com.md.mataka.ledger$2:
    65:65:void <init>(com.md.mataka.ledger) -> <init>
    65:65:void onResponse(java.lang.Object) -> onResponse
    68:92:void onResponse(java.lang.String) -> onResponse
com.md.mataka.ledger$3 -> com.md.mataka.ledger$3:
    94:94:void <init>(com.md.mataka.ledger) -> <init>
    98:101:void onErrorResponse(com.android.volley.VolleyError) -> onErrorResponse
com.md.mataka.ledger$4 -> com.md.mataka.ledger$4:
    103:103:void <init>(com.md.mataka.ledger,int,java.lang.String,com.android.volley.Response$Listener,com.android.volley.Response$ErrorListener) -> <init>
    106:111:java.util.Map getParams() -> getParams
com.md.mataka.login -> com.md.mataka.login:
    void $r8$lambda$zExuoOrhVCDhO34jS9ywoVlsuTo(com.md.mataka.login,java.lang.String) -> $r8$lambda$zExuoOrhVCDhO34jS9ywoVlsuTo
      # {"id":"com.android.tools.r8.synthesized"}
    31:45:void <init>() -> <init>
    31:31:void access$000(com.md.mataka.login) -> access$000
    104:158:void apicall() -> apicall
    95:99:java.lang.String getRandomString(int) -> getRandomString
    163:169:void initView() -> initView
    111:134:void lambda$apicall$0(java.lang.String) -> lambda$apicall$0
    49:91:void onCreate(android.os.Bundle) -> onCreate
com.md.mataka.login$$ExternalSyntheticLambda0 -> com.md.mataka.login$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.md.mataka.login com.md.mataka.login$$InternalSyntheticLambda$0$34aa8e002538b9aa511f1ce6fb905ca55009ddc31090e4995e92e4c88939d64e$0.f$0 -> f$0
    void com.md.mataka.login$$InternalSyntheticLambda$0$34aa8e002538b9aa511f1ce6fb905ca55009ddc31090e4995e92e4c88939d64e$0.<init>(com.md.mataka.login) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.md.mataka.login$$InternalSyntheticLambda$0$34aa8e002538b9aa511f1ce6fb905ca55009ddc31090e4995e92e4c88939d64e$0.onResponse(java.lang.Object) -> onResponse
      # {"id":"com.android.tools.r8.synthesized"}
com.md.mataka.login$1 -> com.md.mataka.login$1:
    56:56:void <init>(com.md.mataka.login) -> <init>
    59:60:void onClick(android.view.View) -> onClick
com.md.mataka.login$2 -> com.md.mataka.login$2:
    63:63:void <init>(com.md.mataka.login) -> <init>
    66:72:void onClick(android.view.View) -> onClick
com.md.mataka.login$3 -> com.md.mataka.login$3:
    75:75:void <init>(com.md.mataka.login) -> <init>
    78:89:void onClick(android.view.View) -> onClick
com.md.mataka.login$4 -> com.md.mataka.login$4:
    135:135:void <init>(com.md.mataka.login) -> <init>
    139:142:void onErrorResponse(com.android.volley.VolleyError) -> onErrorResponse
com.md.mataka.login$5 -> com.md.mataka.login$5:
    144:144:void <init>(com.md.mataka.login,int,java.lang.String,com.android.volley.Response$Listener,com.android.volley.Response$ErrorListener) -> <init>
    147:153:java.util.Map getParams() -> getParams
com.md.mataka.notice -> com.md.mataka.notice:
    25:25:void <init>() -> <init>
    53:100:void apicall() -> apicall
    104:105:void initView() -> initView
    35:48:void onCreate(android.os.Bundle) -> onCreate
com.md.mataka.notice$1 -> com.md.mataka.notice$1:
    40:40:void <init>(com.md.mataka.notice) -> <init>
    43:44:void onClick(android.view.View) -> onClick
com.md.mataka.notice$2 -> com.md.mataka.notice$2:
    59:59:void <init>(com.md.mataka.notice) -> <init>
    59:59:void onResponse(java.lang.Object) -> onResponse
    62:77:void onResponse(java.lang.String) -> onResponse
com.md.mataka.notice$3 -> com.md.mataka.notice$3:
    79:79:void <init>(com.md.mataka.notice) -> <init>
    83:86:void onErrorResponse(com.android.volley.VolleyError) -> onErrorResponse
com.md.mataka.notice$4 -> com.md.mataka.notice$4:
    88:88:void <init>(com.md.mataka.notice,int,java.lang.String,com.android.volley.Response$Listener,com.android.volley.Response$ErrorListener) -> <init>
    91:95:java.util.Map getParams() -> getParams
com.md.mataka.played -> com.md.mataka.played:
    27:27:void <init>() -> <init>
    56:120:void apicall() -> apicall
    124:125:void initView() -> initView
    38:51:void onCreate(android.os.Bundle) -> onCreate
com.md.mataka.played$1 -> com.md.mataka.played$1:
    42:42:void <init>(com.md.mataka.played) -> <init>
    45:46:void onClick(android.view.View) -> onClick
com.md.mataka.played$2 -> com.md.mataka.played$2:
    62:62:void <init>(com.md.mataka.played) -> <init>
    62:62:void onResponse(java.lang.Object) -> onResponse
    65:96:void onResponse(java.lang.String) -> onResponse
com.md.mataka.played$3 -> com.md.mataka.played$3:
    98:98:void <init>(com.md.mataka.played) -> <init>
    102:105:void onErrorResponse(com.android.volley.VolleyError) -> onErrorResponse
com.md.mataka.played$4 -> com.md.mataka.played$4:
    107:107:void <init>(com.md.mataka.played,int,java.lang.String,com.android.volley.Response$Listener,com.android.volley.Response$ErrorListener) -> <init>
    110:115:java.util.Map getParams() -> getParams
com.md.mataka.profile -> com.md.mataka.profile:
    26:26:void <init>() -> <init>
    26:26:void access$000(com.md.mataka.profile) -> access$000
    26:26:void access$100(com.md.mataka.profile) -> access$100
    160:213:void apicall() -> apicall
    105:155:void apicall2() -> apicall2
    217:224:void initView() -> initView
    44:101:void onCreate(android.os.Bundle) -> onCreate
com.md.mataka.profile$1 -> com.md.mataka.profile$1:
    49:49:void <init>(com.md.mataka.profile) -> <init>
    52:53:void onClick(android.view.View) -> onClick
com.md.mataka.profile$2 -> com.md.mataka.profile$2:
    62:62:void <init>(com.md.mataka.profile) -> <init>
    65:77:void onClick(android.view.View) -> onClick
com.md.mataka.profile$3 -> com.md.mataka.profile$3:
    80:80:void <init>(com.md.mataka.profile) -> <init>
    83:99:void onClick(android.view.View) -> onClick
com.md.mataka.profile$4 -> com.md.mataka.profile$4:
    111:111:void <init>(com.md.mataka.profile) -> <init>
    111:111:void onResponse(java.lang.Object) -> onResponse
    114:131:void onResponse(java.lang.String) -> onResponse
com.md.mataka.profile$5 -> com.md.mataka.profile$5:
    133:133:void <init>(com.md.mataka.profile) -> <init>
    137:140:void onErrorResponse(com.android.volley.VolleyError) -> onErrorResponse
com.md.mataka.profile$6 -> com.md.mataka.profile$6:
    142:142:void <init>(com.md.mataka.profile,int,java.lang.String,com.android.volley.Response$Listener,com.android.volley.Response$ErrorListener) -> <init>
    145:150:java.util.Map getParams() -> getParams
com.md.mataka.profile$7 -> com.md.mataka.profile$7:
    167:167:void <init>(com.md.mataka.profile) -> <init>
    167:167:void onResponse(java.lang.Object) -> onResponse
    170:188:void onResponse(java.lang.String) -> onResponse
com.md.mataka.profile$8 -> com.md.mataka.profile$8:
    190:190:void <init>(com.md.mataka.profile) -> <init>
    194:197:void onErrorResponse(com.android.volley.VolleyError) -> onErrorResponse
com.md.mataka.profile$9 -> com.md.mataka.profile$9:
    199:199:void <init>(com.md.mataka.profile,int,java.lang.String,com.android.volley.Response$Listener,com.android.volley.Response$ErrorListener) -> <init>
    202:208:java.util.Map getParams() -> getParams
com.md.mataka.rate -> com.md.mataka.rate:
    23:23:void <init>() -> <init>
    56:104:void apicall() -> apicall
    108:116:void initView() -> initView
    39:51:void onCreate(android.os.Bundle) -> onCreate
com.md.mataka.rate$1 -> com.md.mataka.rate$1:
    43:43:void <init>(com.md.mataka.rate) -> <init>
    46:47:void onClick(android.view.View) -> onClick
com.md.mataka.rate$2 -> com.md.mataka.rate$2:
    62:62:void <init>(com.md.mataka.rate) -> <init>
    62:62:void onResponse(java.lang.Object) -> onResponse
    65:82:void onResponse(java.lang.String) -> onResponse
com.md.mataka.rate$3 -> com.md.mataka.rate$3:
    84:84:void <init>(com.md.mataka.rate) -> <init>
    88:91:void onErrorResponse(com.android.volley.VolleyError) -> onErrorResponse
com.md.mataka.rate$4 -> com.md.mataka.rate$4:
    93:93:void <init>(com.md.mataka.rate,int,java.lang.String,com.android.volley.Response$Listener,com.android.volley.Response$ErrorListener) -> <init>
    96:99:java.util.Map getParams() -> getParams
com.md.mataka.signup -> com.md.mataka.signup:
    25:25:void <init>() -> <init>
    25:25:void access$000(com.md.mataka.signup) -> access$000
    72:128:void apicall() -> apicall
    131:137:void initView() -> initView
    38:67:void onCreate(android.os.Bundle) -> onCreate
com.md.mataka.signup$1 -> com.md.mataka.signup$1:
    43:43:void <init>(com.md.mataka.signup) -> <init>
    46:47:void onClick(android.view.View) -> onClick
com.md.mataka.signup$2 -> com.md.mataka.signup$2:
    50:50:void <init>(com.md.mataka.signup) -> <init>
    53:65:void onClick(android.view.View) -> onClick
com.md.mataka.signup$3 -> com.md.mataka.signup$3:
    77:77:void <init>(com.md.mataka.signup) -> <init>
    77:77:void onResponse(java.lang.Object) -> onResponse
    80:100:void onResponse(java.lang.String) -> onResponse
com.md.mataka.signup$4 -> com.md.mataka.signup$4:
    102:102:void <init>(com.md.mataka.signup) -> <init>
    106:109:void onErrorResponse(com.android.volley.VolleyError) -> onErrorResponse
com.md.mataka.signup$5 -> com.md.mataka.signup$5:
    111:111:void <init>(com.md.mataka.signup,int,java.lang.String,com.android.volley.Response$Listener,com.android.volley.Response$ErrorListener) -> <init>
    114:123:java.util.Map getParams() -> getParams
com.md.mataka.splash -> com.md.mataka.splash:
    9:9:void <init>() -> <init>
    13:42:void onCreate(android.os.Bundle) -> onCreate
com.md.mataka.splash$1 -> com.md.mataka.splash$1:
    17:17:void <init>(com.md.mataka.splash) -> <init>
    22:39:void run() -> run
com.md.mataka.thankyou -> com.md.mataka.thankyou:
    9:9:void <init>() -> <init>
    48:50:void initView() -> initView
    39:45:void onBackPressed() -> onBackPressed
    16:35:void onCreate(android.os.Bundle) -> onCreate
com.md.mataka.thankyou$1 -> com.md.mataka.thankyou$1:
    20:20:void <init>(com.md.mataka.thankyou) -> <init>
    23:24:void onClick(android.view.View) -> onClick
com.md.mataka.thankyou$2 -> com.md.mataka.thankyou$2:
    27:27:void <init>(com.md.mataka.thankyou) -> <init>
    30:33:void onClick(android.view.View) -> onClick
com.md.mataka.transactions -> com.md.mataka.transactions:
    27:36:void <init>() -> <init>
    58:115:void apicall() -> apicall
    119:120:void initView() -> initView
    41:53:void onCreate(android.os.Bundle) -> onCreate
com.md.mataka.transactions$1 -> com.md.mataka.transactions$1:
    45:45:void <init>(com.md.mataka.transactions) -> <init>
    48:49:void onClick(android.view.View) -> onClick
com.md.mataka.transactions$2 -> com.md.mataka.transactions$2:
    64:64:void <init>(com.md.mataka.transactions) -> <init>
    64:64:void onResponse(java.lang.Object) -> onResponse
    67:91:void onResponse(java.lang.String) -> onResponse
com.md.mataka.transactions$3 -> com.md.mataka.transactions$3:
    93:93:void <init>(com.md.mataka.transactions) -> <init>
    97:100:void onErrorResponse(com.android.volley.VolleyError) -> onErrorResponse
com.md.mataka.transactions$4 -> com.md.mataka.transactions$4:
    102:102:void <init>(com.md.mataka.transactions,int,java.lang.String,com.android.volley.Response$Listener,com.android.volley.Response$ErrorListener) -> <init>
    105:110:java.util.Map getParams() -> getParams
com.md.mataka.webview -> com.md.mataka.webview:
    11:14:void <init>() -> <init>
    18:34:void onCreate(android.os.Bundle) -> onCreate
    62:62:void onDownloadRequested(java.lang.String,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String) -> onDownloadRequested
    67:67:void onExternalPageRequest(java.lang.String) -> onExternalPageRequest
    57:57:void onPageError(int,java.lang.String,java.lang.String) -> onPageError
    52:52:void onPageFinished(java.lang.String) -> onPageFinished
    39:47:void onPageStarted(java.lang.String,android.graphics.Bitmap) -> onPageStarted
com.mikepenz.fastadapter.AbstractAdapter -> com.mikepenz.fastadapter.AbstractAdapter:
    8:30:void <init>() -> <init>
    27:27:com.mikepenz.fastadapter.FastAdapter getFastAdapter() -> getFastAdapter
    38:38:int getOrder() -> getOrder
    55:60:void mapPossibleTypes(java.lang.Iterable) -> mapPossibleTypes
    46:47:void setOrder(int) -> setOrder
    18:19:com.mikepenz.fastadapter.AbstractAdapter withFastAdapter(com.mikepenz.fastadapter.FastAdapter) -> withFastAdapter
com.mikepenz.fastadapter.FastAdapter -> com.mikepenz.fastadapter.FastAdapter:
    61:650:void <init>() -> <init>
    56:56:com.mikepenz.fastadapter.listeners.OnClickListener access$000(com.mikepenz.fastadapter.FastAdapter) -> access$000
    56:56:java.util.Map access$100(com.mikepenz.fastadapter.FastAdapter) -> access$100
    56:56:com.mikepenz.fastadapter.listeners.OnClickListener access$200(com.mikepenz.fastadapter.FastAdapter) -> access$200
    56:56:com.mikepenz.fastadapter.listeners.OnLongClickListener access$300(com.mikepenz.fastadapter.FastAdapter) -> access$300
    56:56:com.mikepenz.fastadapter.listeners.OnLongClickListener access$400(com.mikepenz.fastadapter.FastAdapter) -> access$400
    56:56:com.mikepenz.fastadapter.listeners.OnTouchListener access$500(com.mikepenz.fastadapter.FastAdapter) -> access$500
    232:237:com.mikepenz.fastadapter.FastAdapter addExtension(com.mikepenz.fastadapter.IAdapterExtension) -> addExtension
    1028:1044:void cacheSizes() -> cacheSizes
    1175:1176:void deselect() -> deselect
    96:100:int floorIndex(android.util.SparseArray,int) -> floorIndex
    915:920:com.mikepenz.fastadapter.IAdapter getAdapter(int) -> getAdapter
    274:274:java.util.List getEventHooks() -> getEventHooks
    244:244:java.util.Collection getExtensions() -> getExtensions
    1404:1410:com.mikepenz.fastadapter.IItem getHolderAdapterItem(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> getHolderAdapterItem
    1421:1427:com.mikepenz.fastadapter.IItem getHolderAdapterItemTag(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getHolderAdapterItemTag
    571:571:int getHolderAdapterPosition(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getHolderAdapterPosition
    852:857:com.mikepenz.fastadapter.IItem getItem(int) -> getItem
    951:951:int getItemCount() -> getItemCount
    942:942:long getItemId(int) -> getItemId
    931:931:int getItemViewType(int) -> getItemViewType
    325:325:com.mikepenz.fastadapter.listeners.OnClickListener getOnClickListener() -> getOnClickListener
    814:818:int getPosition(com.mikepenz.fastadapter.IItem) -> getPosition
    828:841:int getPosition(long) -> getPosition
    986:991:int getPreItemCount(int) -> getPreItemCount
    962:974:int getPreItemCountByOrder(int) -> getPreItemCountByOrder
    892:903:com.mikepenz.fastadapter.FastAdapter$RelativeInfo getRelativeInfo(int) -> getRelativeInfo
    1097:1097:java.util.Set getSelections() -> getSelections
    553:553:com.mikepenz.fastadapter.IItem getTypeInstance(int) -> getTypeInstance
    135:138:com.mikepenz.fastadapter.ITypeInstanceCache getTypeInstanceCache() -> getTypeInstanceCache
    1256:1261:void notifyAdapterDataSetChanged() -> notifyAdapterDataSetChanged
    1352:1353:void notifyAdapterItemRangeChanged(int,int) -> notifyAdapterItemRangeChanged
    1364:1372:void notifyAdapterItemRangeChanged(int,int,java.lang.Object) -> notifyAdapterItemRangeChanged
    1280:1285:void notifyAdapterItemRangeInserted(int,int) -> notifyAdapterItemRangeInserted
    1304:1310:void notifyAdapterItemRangeRemoved(int,int) -> notifyAdapterItemRangeRemoved
    797:799:void onAttachedToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> onAttachedToRecyclerView
    714:723:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    735:744:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List) -> onBindViewHolder
    682:700:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    803:805:void onDetachedFromRecyclerView(androidx.recyclerview.widget.RecyclerView) -> onDetachedFromRecyclerView
    791:792:boolean onFailedToRecycleView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onFailedToRecycleView
    777:780:void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewAttachedToWindow
    765:768:void onViewDetachedFromWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewDetachedFromWindow
    753:756:void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewRecycled
    1440:1440:com.mikepenz.fastadapter.utils.Triple recursive(com.mikepenz.fastadapter.utils.AdapterPredicate,boolean) -> recursive
    1454:1471:com.mikepenz.fastadapter.utils.Triple recursive(com.mikepenz.fastadapter.utils.AdapterPredicate,int,boolean) -> recursive
    1489:1505:com.mikepenz.fastadapter.utils.Triple recursiveSub(com.mikepenz.fastadapter.IAdapter,int,com.mikepenz.fastadapter.IExpandable,com.mikepenz.fastadapter.utils.AdapterPredicate,boolean) -> recursiveSub
    538:544:void registerTypeInstance(com.mikepenz.fastadapter.IItem) -> registerTypeInstance
    1140:1141:void select(int) -> select
    175:192:com.mikepenz.fastadapter.FastAdapter with(java.util.Collection,java.util.Collection) -> with
    437:438:com.mikepenz.fastadapter.FastAdapter withAllowDeselection(boolean) -> withAllowDeselection
    300:307:com.mikepenz.fastadapter.FastAdapter withEventHooks(java.util.Collection) -> withEventHooks
    415:416:com.mikepenz.fastadapter.FastAdapter withMultiSelect(boolean) -> withMultiSelect
    317:318:com.mikepenz.fastadapter.FastAdapter withOnClickListener(com.mikepenz.fastadapter.listeners.OnClickListener) -> withOnClickListener
    346:347:com.mikepenz.fastadapter.FastAdapter withOnLongClickListener(com.mikepenz.fastadapter.listeners.OnLongClickListener) -> withOnLongClickListener
    524:528:com.mikepenz.fastadapter.FastAdapter withSavedInstanceState(android.os.Bundle,java.lang.String) -> withSavedInstanceState
    426:427:com.mikepenz.fastadapter.FastAdapter withSelectOnLongClick(boolean) -> withSelectOnLongClick
    448:455:com.mikepenz.fastadapter.FastAdapter withSelectable(boolean) -> withSelectable
com.mikepenz.fastadapter.FastAdapter$1 -> com.mikepenz.fastadapter.FastAdapter$1:
    577:577:void <init>(com.mikepenz.fastadapter.FastAdapter) -> <init>
    580:612:void onClick(android.view.View,int,com.mikepenz.fastadapter.FastAdapter,com.mikepenz.fastadapter.IItem) -> onClick
com.mikepenz.fastadapter.FastAdapter$2 -> com.mikepenz.fastadapter.FastAdapter$2:
    618:618:void <init>(com.mikepenz.fastadapter.FastAdapter) -> <init>
    621:643:boolean onLongClick(android.view.View,int,com.mikepenz.fastadapter.FastAdapter,com.mikepenz.fastadapter.IItem) -> onLongClick
com.mikepenz.fastadapter.FastAdapter$3 -> com.mikepenz.fastadapter.FastAdapter$3:
    650:650:void <init>(com.mikepenz.fastadapter.FastAdapter) -> <init>
    653:668:boolean onTouch(android.view.View,android.view.MotionEvent,int,com.mikepenz.fastadapter.FastAdapter,com.mikepenz.fastadapter.IItem) -> onTouch
com.mikepenz.fastadapter.FastAdapter$RelativeInfo -> com.mikepenz.fastadapter.FastAdapter$RelativeInfo:
    1511:1514:void <init>() -> <init>
com.mikepenz.fastadapter.FastAdapter$ViewHolder -> com.mikepenz.fastadapter.FastAdapter$ViewHolder:
    1542:1542:void attachToWindow(com.mikepenz.fastadapter.IItem) -> attachToWindow
    1548:1548:void detachFromWindow(com.mikepenz.fastadapter.IItem) -> detachFromWindow
    1556:1556:boolean failedToRecycle(com.mikepenz.fastadapter.IItem) -> failedToRecycle
com.mikepenz.fastadapter.IAdapterNotifier -> com.mikepenz.fastadapter.IAdapterNotifier:
    9:33:void <clinit>() -> <clinit>
com.mikepenz.fastadapter.IAdapterNotifier$1 -> com.mikepenz.fastadapter.IAdapterNotifier$1:
    9:9:void <init>() -> <init>
    13:29:boolean notify(com.mikepenz.fastadapter.FastAdapter,int,int,int) -> notify
com.mikepenz.fastadapter.IAdapterNotifier$2 -> com.mikepenz.fastadapter.IAdapterNotifier$2:
    33:33:void <init>() -> <init>
    37:51:boolean notify(com.mikepenz.fastadapter.FastAdapter,int,int,int) -> notify
com.mikepenz.fastadapter.IIdDistributor -> com.mikepenz.fastadapter.IIdDistributor:
    12:12:void <clinit>() -> <clinit>
com.mikepenz.fastadapter.IInterceptor -> com.mikepenz.fastadapter.IInterceptor:
    10:10:void <clinit>() -> <clinit>
com.mikepenz.fastadapter.IInterceptor$1 -> com.mikepenz.fastadapter.IInterceptor$1:
    10:10:void <init>() -> <init>
    10:10:java.lang.Object intercept(java.lang.Object) -> intercept
    13:13:com.mikepenz.fastadapter.IItem intercept(com.mikepenz.fastadapter.IItem) -> intercept
com.mikepenz.fastadapter.adapters.ItemAdapter -> com.mikepenz.fastadapter.adapters.ItemAdapter:
    14:15:void <init>() -> <init>
    27:27:com.mikepenz.fastadapter.adapters.ItemAdapter items() -> items
com.mikepenz.fastadapter.adapters.ItemFilter -> com.mikepenz.fastadapter.adapters.ItemFilter:
    28:30:void <init>(com.mikepenz.fastadapter.adapters.ModelAdapter) -> <init>
    111:111:java.lang.CharSequence getConstraint() -> getConstraint
    61:107:android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    117:125:void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
com.mikepenz.fastadapter.adapters.ModelAdapter -> com.mikepenz.fastadapter.adapters.ModelAdapter:
    39:40:void <init>(com.mikepenz.fastadapter.IInterceptor) -> <init>
    42:163:void <init>(com.mikepenz.fastadapter.IItemList,com.mikepenz.fastadapter.IInterceptor) -> <init>
    34:34:com.mikepenz.fastadapter.IItemAdapter add(java.lang.Object[]) -> add
    387:387:com.mikepenz.fastadapter.adapters.ModelAdapter add(java.lang.Object[]) -> add
    396:397:com.mikepenz.fastadapter.adapters.ModelAdapter add(java.util.List) -> add
    34:34:com.mikepenz.fastadapter.IItemAdapter addInternal(int,java.util.List) -> addInternal
    401:411:com.mikepenz.fastadapter.adapters.ModelAdapter addInternal(java.util.List) -> addInternal
    437:444:com.mikepenz.fastadapter.adapters.ModelAdapter addInternal(int,java.util.List) -> addInternal
    266:266:com.mikepenz.fastadapter.IItem getAdapterItem(int) -> getAdapterItem
    217:217:int getAdapterItemCount() -> getAdapterItemCount
    225:225:java.util.List getAdapterItems() -> getAdapterItems
    247:247:int getAdapterPosition(long) -> getAdapterPosition
    135:138:com.mikepenz.fastadapter.IIdDistributor getIdDistributor() -> getIdDistributor
    180:180:com.mikepenz.fastadapter.adapters.ItemFilter getItemFilter() -> getItemFilter
    101:101:com.mikepenz.fastadapter.IItem intercept(java.lang.Object) -> intercept
    111:118:java.util.List intercept(java.util.List) -> intercept
    34:34:com.mikepenz.fastadapter.IItemAdapter removeRange(int,int) -> removeRange
    497:498:com.mikepenz.fastadapter.adapters.ModelAdapter removeRange(int,int) -> removeRange
    308:328:com.mikepenz.fastadapter.adapters.ModelAdapter setInternal(java.util.List,boolean,com.mikepenz.fastadapter.IAdapterNotifier) -> setInternal
    34:34:com.mikepenz.fastadapter.IAdapter withFastAdapter(com.mikepenz.fastadapter.FastAdapter) -> withFastAdapter
    49:52:com.mikepenz.fastadapter.AbstractAdapter withFastAdapter(com.mikepenz.fastadapter.FastAdapter) -> withFastAdapter
    130:131:com.mikepenz.fastadapter.adapters.ModelAdapter withIdDistributor(com.mikepenz.fastadapter.IIdDistributor) -> withIdDistributor
com.mikepenz.fastadapter.expandable.ExpandableExtension -> com.mikepenz.fastadapter.expandable.ExpandableExtension:
    29:38:void <init>() -> <init>
    331:335:void collapse(boolean) -> collapse
    344:345:void collapse(int) -> collapse
    354:399:void collapse(int,boolean) -> collapse
    426:427:void expand(int) -> expand
    437:456:void expand(int,boolean) -> expand
    225:239:int[] getExpandedItems() -> getExpandedItems
    281:301:int[] getExpandedItemsRootLevel(int) -> getExpandedItemsRootLevel
    247:271:int[] getExpandedItemsSameLevel(int) -> getExpandedItemsSameLevel
    29:29:com.mikepenz.fastadapter.IAdapterExtension init(com.mikepenz.fastadapter.FastAdapter) -> init
    42:43:com.mikepenz.fastadapter.expandable.ExpandableExtension init(com.mikepenz.fastadapter.FastAdapter) -> init
    136:136:void notifyAdapterDataSetChanged() -> notifyAdapterDataSetChanged
    155:161:void notifyAdapterItemRangeChanged(int,int,java.lang.Object) -> notifyAdapterItemRangeChanged
    140:140:void notifyAdapterItemRangeInserted(int,int) -> notifyAdapterItemRangeInserted
    144:144:void notifyAdapterItemRangeRemoved(int,int) -> notifyAdapterItemRangeRemoved
    102:121:boolean onClick(android.view.View,int,com.mikepenz.fastadapter.FastAdapter,com.mikepenz.fastadapter.IItem) -> onClick
    126:126:boolean onLongClick(android.view.View,int,com.mikepenz.fastadapter.FastAdapter,com.mikepenz.fastadapter.IItem) -> onLongClick
    131:131:boolean onTouch(android.view.View,android.view.MotionEvent,int,com.mikepenz.fastadapter.FastAdapter,com.mikepenz.fastadapter.IItem) -> onTouch
    171:172:void performFiltering(java.lang.CharSequence) -> performFiltering
    166:167:void set(java.util.List,boolean) -> set
    310:316:void toggleExpandable(int) -> toggleExpandable
    67:80:void withSavedInstanceState(android.os.Bundle,java.lang.String) -> withSavedInstanceState
com.mikepenz.fastadapter.expandable.ExpandableExtension$1 -> com.mikepenz.fastadapter.expandable.ExpandableExtension$1:
    355:356:void <init>(com.mikepenz.fastadapter.expandable.ExpandableExtension,int[]) -> <init>
    361:386:boolean apply(com.mikepenz.fastadapter.IAdapter,int,com.mikepenz.fastadapter.IItem,int) -> apply
com.mikepenz.fastadapter.listeners.ClickEventHook -> com.mikepenz.fastadapter.listeners.ClickEventHook:
    13:13:void <init>() -> <init>
    19:19:android.view.View onBind(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onBind
    25:25:java.util.List onBindMany(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onBindMany
com.mikepenz.fastadapter.listeners.CustomEventHook -> com.mikepenz.fastadapter.listeners.CustomEventHook:
    14:14:void <init>() -> <init>
    63:63:android.view.View onBind(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onBind
    69:69:java.util.List onBindMany(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onBindMany
com.mikepenz.fastadapter.listeners.LongClickEventHook -> com.mikepenz.fastadapter.listeners.LongClickEventHook:
    13:13:void <init>() -> <init>
    19:19:android.view.View onBind(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onBind
    25:25:java.util.List onBindMany(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onBindMany
com.mikepenz.fastadapter.listeners.OnBindViewHolderListenerImpl -> com.mikepenz.fastadapter.listeners.OnBindViewHolderListenerImpl:
    13:13:void <init>() -> <init>
    23:36:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List) -> onBindViewHolder
    108:116:boolean onFailedToRecycleView(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onFailedToRecycleView
    68:79:void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onViewAttachedToWindow
    89:96:void onViewDetachedFromWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onViewDetachedFromWindow
    46:58:void unBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> unBindViewHolder
com.mikepenz.fastadapter.listeners.OnCreateViewHolderListenerImpl -> com.mikepenz.fastadapter.listeners.OnCreateViewHolderListenerImpl:
    13:13:void <init>() -> <init>
    34:35:androidx.recyclerview.widget.RecyclerView$ViewHolder onPostCreateViewHolder(com.mikepenz.fastadapter.FastAdapter,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onPostCreateViewHolder
    23:23:androidx.recyclerview.widget.RecyclerView$ViewHolder onPreCreateViewHolder(com.mikepenz.fastadapter.FastAdapter,android.view.ViewGroup,int) -> onPreCreateViewHolder
com.mikepenz.fastadapter.listeners.TouchEventHook -> com.mikepenz.fastadapter.listeners.TouchEventHook:
    14:14:void <init>() -> <init>
    20:20:android.view.View onBind(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onBind
    26:26:java.util.List onBindMany(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onBindMany
com.mikepenz.fastadapter.select.SelectExtension -> com.mikepenz.fastadapter.select.SelectExtension:
    30:46:void <init>() -> <init>
    464:472:void deselect() -> deselect
    480:481:void deselect(com.mikepenz.fastadapter.IItem) -> deselect
    501:502:void deselect(int) -> deselect
    512:517:void deselect(int,java.util.Iterator) -> deselect
    529:540:void deselect(com.mikepenz.fastadapter.IItem,int,java.util.Iterator) -> deselect
    580:589:void deselectByItems(java.util.Set) -> deselectByItems
    241:251:java.util.Set getSelectedItems() -> getSelectedItems
    228:234:java.util.Set getSelections() -> getSelections
    274:310:void handleSelection(android.view.View,com.mikepenz.fastadapter.IItem,int) -> handleSelection
    130:131:com.mikepenz.fastadapter.IAdapterExtension init(com.mikepenz.fastadapter.FastAdapter) -> init
    190:190:void notifyAdapterDataSetChanged() -> notifyAdapterDataSetChanged
    206:206:void notifyAdapterItemRangeChanged(int,int,java.lang.Object) -> notifyAdapterItemRangeChanged
    194:194:void notifyAdapterItemRangeInserted(int,int) -> notifyAdapterItemRangeInserted
    198:198:void notifyAdapterItemRangeRemoved(int,int) -> notifyAdapterItemRangeRemoved
    168:171:boolean onClick(android.view.View,int,com.mikepenz.fastadapter.FastAdapter,com.mikepenz.fastadapter.IItem) -> onClick
    177:180:boolean onLongClick(android.view.View,int,com.mikepenz.fastadapter.FastAdapter,com.mikepenz.fastadapter.IItem) -> onLongClick
    185:185:boolean onTouch(android.view.View,android.view.MotionEvent,int,com.mikepenz.fastadapter.FastAdapter,com.mikepenz.fastadapter.IItem) -> onTouch
    216:216:void performFiltering(java.lang.CharSequence) -> performFiltering
    369:370:void select(int) -> select
    379:380:void select(int,boolean) -> select
    390:395:void select(int,boolean,boolean) -> select
    407:421:void select(com.mikepenz.fastadapter.IAdapter,com.mikepenz.fastadapter.IItem,int,boolean,boolean) -> select
    431:441:void selectByIdentifier(long,boolean,boolean) -> selectByIdentifier
    211:211:void set(java.util.List,boolean) -> set
    95:96:com.mikepenz.fastadapter.select.SelectExtension withAllowDeselection(boolean) -> withAllowDeselection
    73:74:com.mikepenz.fastadapter.select.SelectExtension withMultiSelect(boolean) -> withMultiSelect
    136:145:void withSavedInstanceState(android.os.Bundle,java.lang.String) -> withSavedInstanceState
    84:85:com.mikepenz.fastadapter.select.SelectExtension withSelectOnLongClick(boolean) -> withSelectOnLongClick
    106:107:com.mikepenz.fastadapter.select.SelectExtension withSelectable(boolean) -> withSelectable
com.mikepenz.fastadapter.select.SelectExtension$1 -> com.mikepenz.fastadapter.select.SelectExtension$1:
    242:242:void <init>(com.mikepenz.fastadapter.select.SelectExtension,java.util.Set) -> <init>
    245:248:boolean apply(com.mikepenz.fastadapter.IAdapter,int,com.mikepenz.fastadapter.IItem,int) -> apply
com.mikepenz.fastadapter.select.SelectExtension$3 -> com.mikepenz.fastadapter.select.SelectExtension$3:
    431:431:void <init>(com.mikepenz.fastadapter.select.SelectExtension,long,boolean,boolean) -> <init>
    434:438:boolean apply(com.mikepenz.fastadapter.IAdapter,int,com.mikepenz.fastadapter.IItem,int) -> apply
com.mikepenz.fastadapter.select.SelectExtension$5 -> com.mikepenz.fastadapter.select.SelectExtension$5:
    464:464:void <init>(com.mikepenz.fastadapter.select.SelectExtension) -> <init>
    467:468:boolean apply(com.mikepenz.fastadapter.IAdapter,int,com.mikepenz.fastadapter.IItem,int) -> apply
com.mikepenz.fastadapter.select.SelectExtension$8 -> com.mikepenz.fastadapter.select.SelectExtension$8:
    580:580:void <init>(com.mikepenz.fastadapter.select.SelectExtension,java.util.Set) -> <init>
    583:586:boolean apply(com.mikepenz.fastadapter.IAdapter,int,com.mikepenz.fastadapter.IItem,int) -> apply
com.mikepenz.fastadapter.utils.DefaultIdDistributor -> com.mikepenz.fastadapter.utils.DefaultIdDistributor:
    11:11:void <init>() -> <init>
    49:52:com.mikepenz.fastadapter.IIdentifyable checkId(com.mikepenz.fastadapter.IIdentifyable) -> checkId
    21:24:java.util.List checkIds(java.util.List) -> checkIds
com.mikepenz.fastadapter.utils.DefaultIdDistributorImpl -> com.mikepenz.fastadapter.utils.DefaultIdDistributorImpl:
    10:12:void <init>() -> <init>
    16:16:long nextId(com.mikepenz.fastadapter.IIdentifyable) -> nextId
com.mikepenz.fastadapter.utils.DefaultItemList -> com.mikepenz.fastadapter.utils.DefaultItemList:
    11:11:void <init>() -> <init>
    20:20:com.mikepenz.fastadapter.FastAdapter getFastAdapter() -> getFastAdapter
    16:17:void setFastAdapter(com.mikepenz.fastadapter.FastAdapter) -> setFastAdapter
com.mikepenz.fastadapter.utils.DefaultItemListImpl -> com.mikepenz.fastadapter.utils.DefaultItemListImpl:
    20:21:void <init>() -> <init>
    23:25:void <init>(java.util.List) -> <init>
    109:114:void addAll(java.util.List,int) -> addAll
    118:122:void addAll(int,java.util.List,int) -> addAll
    15:15:java.lang.Object get(int) -> get
    29:29:com.mikepenz.fastadapter.IItem get(int) -> get
    39:44:int getAdapterPosition(long) -> getAdapterPosition
    34:34:java.util.List getItems() -> getItems
    58:68:void removeRange(int,int,int) -> removeRange
    127:146:void set(java.util.List,int,com.mikepenz.fastadapter.IAdapterNotifier) -> set
    82:82:int size() -> size
com.mikepenz.fastadapter.utils.DefaultTypeInstanceCache -> com.mikepenz.fastadapter.utils.DefaultTypeInstanceCache:
    12:15:void <init>() -> <init>
    28:28:com.mikepenz.fastadapter.IItem get(int) -> get
    19:23:boolean register(com.mikepenz.fastadapter.IItem) -> register
com.mikepenz.fastadapter.utils.EventHookUtil -> com.mikepenz.fastadapter.utils.EventHookUtil:
    57:126:void attachToView(com.mikepenz.fastadapter.listeners.EventHook,androidx.recyclerview.widget.RecyclerView$ViewHolder,android.view.View) -> attachToView
    31:47:void bind(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List) -> bind
com.mikepenz.fastadapter.utils.EventHookUtil$1 -> com.mikepenz.fastadapter.utils.EventHookUtil$1:
    58:58:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,com.mikepenz.fastadapter.listeners.EventHook) -> <init>
    62:76:void onClick(android.view.View) -> onClick
com.mikepenz.fastadapter.utils.EventHookUtil$2 -> com.mikepenz.fastadapter.utils.EventHookUtil$2:
    79:79:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,com.mikepenz.fastadapter.listeners.EventHook) -> <init>
    83:97:boolean onLongClick(android.view.View) -> onLongClick
com.mikepenz.fastadapter.utils.EventHookUtil$3 -> com.mikepenz.fastadapter.utils.EventHookUtil$3:
    101:101:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,com.mikepenz.fastadapter.listeners.EventHook) -> <init>
    105:119:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.mikepenz.fastadapter.utils.Triple -> com.mikepenz.fastadapter.utils.Triple:
    19:23:void <init>(java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
com.mikepenz.iconics.IconicsDrawable -> com.mikepenz.iconics.IconicsDrawable:
    89:142:void <init>(android.content.Context) -> <init>
    89:168:void <init>(android.content.Context,com.mikepenz.iconics.typeface.IIcon) -> <init>
    1037:1038:com.mikepenz.iconics.IconicsDrawable alpha(int) -> alpha
    745:755:com.mikepenz.iconics.IconicsDrawable backgroundColor(int) -> backgroundColor
    735:735:com.mikepenz.iconics.IconicsDrawable backgroundColorRes(int) -> backgroundColorRes
    689:697:com.mikepenz.iconics.IconicsDrawable backgroundContourColor(int) -> backgroundContourColor
    975:980:com.mikepenz.iconics.IconicsDrawable backgroundContourWidthPx(int) -> backgroundContourWidthPx
    1212:1215:void clearColorFilter() -> clearColorFilter
    73:73:java.lang.Object clone() -> clone
    264:289:com.mikepenz.iconics.IconicsDrawable clone() -> clone
    412:415:com.mikepenz.iconics.IconicsDrawable color(int) -> color
    445:449:com.mikepenz.iconics.IconicsDrawable color(android.content.res.ColorStateList) -> color
    425:425:com.mikepenz.iconics.IconicsDrawable colorRes(int) -> colorRes
    717:725:com.mikepenz.iconics.IconicsDrawable contourColor(int) -> contourColor
    884:889:com.mikepenz.iconics.IconicsDrawable contourWidthPx(int) -> contourWidthPx
    1072:1107:void draw(android.graphics.Canvas) -> draw
    1007:1014:com.mikepenz.iconics.IconicsDrawable drawBackgroundContour(boolean) -> drawBackgroundContour
    990:997:com.mikepenz.iconics.IconicsDrawable drawContour(boolean) -> drawContour
    1200:1200:int getAlpha() -> getAlpha
    1187:1187:int getIntrinsicHeight() -> getIntrinsicHeight
    1182:1182:int getIntrinsicWidth() -> getIntrinsicWidth
    1153:1162:int getOpacity() -> getOpacity
    319:319:com.mikepenz.iconics.IconicsDrawable icon(java.lang.Character) -> icon
    366:372:com.mikepenz.iconics.IconicsDrawable icon(com.mikepenz.iconics.typeface.IIcon) -> icon
    479:482:com.mikepenz.iconics.IconicsDrawable iconOffsetXPx(int) -> iconOffsetXPx
    512:515:com.mikepenz.iconics.IconicsDrawable iconOffsetYPx(int) -> iconOffsetYPx
    340:340:com.mikepenz.iconics.IconicsDrawable iconText(java.lang.String) -> iconText
    351:356:com.mikepenz.iconics.IconicsDrawable iconText(java.lang.String,android.graphics.Typeface) -> iconText
    1142:1142:boolean isStateful() -> isStateful
    1289:1296:void offsetIcon(android.graphics.Rect) -> offsetIcon
    1132:1138:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    1167:1177:boolean onStateChange(int[]) -> onStateChange
    535:535:com.mikepenz.iconics.IconicsDrawable paddingDp(int) -> paddingDp
    545:556:com.mikepenz.iconics.IconicsDrawable paddingPx(int) -> paddingPx
    1220:1238:void prepare() -> prepare
    785:788:com.mikepenz.iconics.IconicsDrawable roundedCornersRxPx(int) -> roundedCornersRxPx
    818:821:com.mikepenz.iconics.IconicsDrawable roundedCornersRyPx(int) -> roundedCornersRyPx
    1192:1196:void setAlpha(int) -> setAlpha
    1205:1208:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    1147:1148:boolean setState(int[]) -> setState
    1111:1112:void setTint(int) -> setTint
    1116:1120:void setTintList(android.content.res.ColorStateList) -> setTintList
    1124:1128:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    938:945:com.mikepenz.iconics.IconicsDrawable shadowPx(float,float,float,int) -> shadowPx
    587:587:com.mikepenz.iconics.IconicsDrawable sizeDp(int) -> sizeDp
    597:601:com.mikepenz.iconics.IconicsDrawable sizePx(int) -> sizePx
    631:635:com.mikepenz.iconics.IconicsDrawable sizePxX(int) -> sizePxX
    665:669:com.mikepenz.iconics.IconicsDrawable sizePxY(int) -> sizePxY
    1062:1065:com.mikepenz.iconics.IconicsDrawable typeface(android.graphics.Typeface) -> typeface
    1303:1322:void updateIconColor() -> updateIconColor
    1246:1255:void updatePaddingBounds(android.graphics.Rect) -> updatePaddingBounds
    1263:1281:void updateTextSize(android.graphics.Rect) -> updateTextSize
    1329:1335:android.graphics.PorterDuffColorFilter updateTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> updateTintFilter
com.mikepenz.iconics.utils.Utils -> com.mikepenz.iconics.utils.Utils:
    14:14:int convertDpToPx(android.content.Context,float) -> convertDpToPx
com.mikepenz.materialdrawer.Drawer -> com.mikepenz.materialdrawer.Drawer:
    69:71:void <init>(com.mikepenz.materialdrawer.DrawerBuilder) -> <init>
    142:145:void closeDrawer() -> closeDrawer
    154:157:boolean isDrawerOpen() -> isDrawerOpen
    133:136:void openDrawer() -> openDrawer
com.mikepenz.materialdrawer.DrawerBuilder -> com.mikepenz.materialdrawer.DrawerBuilder:
    77:1219:void <init>() -> <init>
    976:977:com.mikepenz.materialdrawer.DrawerBuilder addDrawerItems(com.mikepenz.materialdrawer.model.interfaces.IDrawerItem[]) -> addDrawerItems
    1320:1358:com.mikepenz.materialdrawer.Drawer build() -> build
    1539:1579:com.mikepenz.materialdrawer.Drawer buildView() -> buildView
    1849:1865:void closeDrawerDelayed() -> closeDrawerDelayed
    1641:1843:void createContent() -> createContent
    904:911:com.mikepenz.fastadapter.FastAdapter getAdapter() -> getAdapter
    1874:1874:com.mikepenz.materialdrawer.model.interfaces.IDrawerItem getDrawerItem(int) -> getDrawerItem
    923:923:com.mikepenz.fastadapter.IItemAdapter getFooterAdapter() -> getFooterAdapter
    919:919:com.mikepenz.fastadapter.IItemAdapter getHeaderAdapter() -> getHeaderAdapter
    915:915:com.mikepenz.fastadapter.IItemAdapter getItemAdapter() -> getItemAdapter
    1434:1530:void handleDrawerNavigation(android.app.Activity,boolean) -> handleDrawerNavigation
    1267:1312:void handleShowOnLaunch() -> handleShowOnLaunch
    1892:1898:void resetStickyFooterSelection() -> resetStickyFooterSelection
    513:514:com.mikepenz.materialdrawer.DrawerBuilder withActionBarDrawerToggle(boolean) -> withActionBarDrawerToggle
    115:118:com.mikepenz.materialdrawer.DrawerBuilder withActivity(android.app.Activity) -> withActivity
    326:340:com.mikepenz.materialdrawer.DrawerBuilder withDrawerLayout(int) -> withDrawerLayout
    571:580:com.mikepenz.materialdrawer.DrawerBuilder withHeader(int) -> withHeader
    590:591:com.mikepenz.materialdrawer.DrawerBuilder withHeaderDivider(boolean) -> withHeaderDivider
    1157:1158:com.mikepenz.materialdrawer.DrawerBuilder withOnDrawerItemClickListener(com.mikepenz.materialdrawer.Drawer$OnDrawerItemClickListener) -> withOnDrawerItemClickListener
    357:358:com.mikepenz.materialdrawer.DrawerBuilder withSliderBackgroundColor(int) -> withSliderBackgroundColor
    160:161:com.mikepenz.materialdrawer.DrawerBuilder withTranslucentStatusBar(boolean) -> withTranslucentStatusBar
com.mikepenz.materialdrawer.DrawerBuilder$1 -> com.mikepenz.materialdrawer.DrawerBuilder$1:
    1286:1287:void <init>(com.mikepenz.materialdrawer.DrawerBuilder,android.content.SharedPreferences) -> <init>
    1291:1307:void onDrawerStateChanged(int) -> onDrawerStateChanged
com.mikepenz.materialdrawer.DrawerBuilder$2 -> com.mikepenz.materialdrawer.DrawerBuilder$2:
    1434:1434:void <init>(com.mikepenz.materialdrawer.DrawerBuilder) -> <init>
    1437:1449:void onClick(android.view.View) -> onClick
com.mikepenz.materialdrawer.DrawerBuilder$3 -> com.mikepenz.materialdrawer.DrawerBuilder$3:
    1458:1458:void <init>(com.mikepenz.materialdrawer.DrawerBuilder,android.app.Activity,androidx.drawerlayout.widget.DrawerLayout,androidx.appcompat.widget.Toolbar,int,int) -> <init>
    1469:1473:void onDrawerClosed(android.view.View) -> onDrawerClosed
    1461:1465:void onDrawerOpened(android.view.View) -> onDrawerOpened
    1477:1486:void onDrawerSlide(android.view.View,float) -> onDrawerSlide
com.mikepenz.materialdrawer.DrawerBuilder$4 -> com.mikepenz.materialdrawer.DrawerBuilder$4:
    1502:1502:void <init>(com.mikepenz.materialdrawer.DrawerBuilder) -> <init>
    1519:1522:void onDrawerClosed(android.view.View) -> onDrawerClosed
    1512:1515:void onDrawerOpened(android.view.View) -> onDrawerOpened
    1505:1508:void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    1527:1527:void onDrawerStateChanged(int) -> onDrawerStateChanged
com.mikepenz.materialdrawer.DrawerBuilder$5 -> com.mikepenz.materialdrawer.DrawerBuilder$5:
    1727:1727:void <init>(com.mikepenz.materialdrawer.DrawerBuilder) -> <init>
    1730:1732:void onClick(android.view.View) -> onClick
com.mikepenz.materialdrawer.DrawerBuilder$6 -> com.mikepenz.materialdrawer.DrawerBuilder$6:
    1760:1760:void <init>(com.mikepenz.materialdrawer.DrawerBuilder) -> <init>
    1760:1760:boolean onClick(android.view.View,com.mikepenz.fastadapter.IAdapter,com.mikepenz.fastadapter.IItem,int) -> onClick
    1763:1807:boolean onClick(android.view.View,com.mikepenz.fastadapter.IAdapter,com.mikepenz.materialdrawer.model.interfaces.IDrawerItem,int) -> onClick
com.mikepenz.materialdrawer.DrawerBuilder$6$1 -> com.mikepenz.materialdrawer.DrawerBuilder$6$1:
    1779:1779:void <init>(com.mikepenz.materialdrawer.DrawerBuilder$6,android.view.View,int,com.mikepenz.materialdrawer.model.interfaces.IDrawerItem) -> <init>
    1782:1783:void run() -> run
com.mikepenz.materialdrawer.DrawerBuilder$7 -> com.mikepenz.materialdrawer.DrawerBuilder$7:
    1811:1811:void <init>(com.mikepenz.materialdrawer.DrawerBuilder) -> <init>
    1811:1811:boolean onLongClick(android.view.View,com.mikepenz.fastadapter.IAdapter,com.mikepenz.fastadapter.IItem,int) -> onLongClick
    1814:1817:boolean onLongClick(android.view.View,com.mikepenz.fastadapter.IAdapter,com.mikepenz.materialdrawer.model.interfaces.IDrawerItem,int) -> onLongClick
com.mikepenz.materialdrawer.DrawerBuilder$8 -> com.mikepenz.materialdrawer.DrawerBuilder$8:
    1851:1851:void <init>(com.mikepenz.materialdrawer.DrawerBuilder) -> <init>
    1854:1859:void run() -> run
com.mikepenz.materialdrawer.DrawerUtils -> com.mikepenz.materialdrawer.DrawerUtils:
    382:388:void addStickyFooterDivider(android.content.Context,android.view.ViewGroup) -> addStickyFooterDivider
    359:372:android.view.ViewGroup buildStickyDrawerItemFooter(android.content.Context,com.mikepenz.materialdrawer.DrawerBuilder,android.view.View$OnClickListener) -> buildStickyDrawerItemFooter
    399:415:void fillStickyDrawerItemFooter(com.mikepenz.materialdrawer.DrawerBuilder,android.view.ViewGroup,android.view.View$OnClickListener) -> fillStickyDrawerItemFooter
    107:115:int getPositionByIdentifier(com.mikepenz.materialdrawer.DrawerBuilder,long) -> getPositionByIdentifier
    298:349:void handleFooterView(com.mikepenz.materialdrawer.DrawerBuilder,android.view.View$OnClickListener) -> handleFooterView
    191:250:void handleHeaderView(com.mikepenz.materialdrawer.DrawerBuilder) -> handleHeaderView
    35:76:void onFooterDrawerItemClick(com.mikepenz.materialdrawer.DrawerBuilder,com.mikepenz.materialdrawer.model.interfaces.IDrawerItem,android.view.View,java.lang.Boolean) -> onFooterDrawerItemClick
    425:445:androidx.drawerlayout.widget.DrawerLayout$LayoutParams processDrawerLayoutParams(com.mikepenz.materialdrawer.DrawerBuilder,androidx.drawerlayout.widget.DrawerLayout$LayoutParams) -> processDrawerLayoutParams
    86:98:void setStickyFooterSelection(com.mikepenz.materialdrawer.DrawerBuilder,int,java.lang.Boolean) -> setStickyFooterSelection
com.mikepenz.materialdrawer.MiniDrawer -> com.mikepenz.materialdrawer.MiniDrawer:
    34:134:void <init>() -> <init>
    375:387:boolean onItemClick(com.mikepenz.materialdrawer.model.interfaces.IDrawerItem) -> onItemClick
    397:408:void setSelection(long) -> setSelection
    65:66:com.mikepenz.materialdrawer.MiniDrawer withAccountHeader(com.mikepenz.materialdrawer.AccountHeader) -> withAccountHeader
    52:53:com.mikepenz.materialdrawer.MiniDrawer withDrawer(com.mikepenz.materialdrawer.Drawer) -> withDrawer
com.mikepenz.materialdrawer.holder.BadgeStyle -> com.mikepenz.materialdrawer.holder.BadgeStyle:
    25:188:void <init>() -> <init>
    57:57:com.mikepenz.materialdrawer.holder.ColorHolder getColor() -> getColor
    71:71:com.mikepenz.materialdrawer.holder.ColorHolder getColorPressed() -> getColorPressed
    105:105:com.mikepenz.materialdrawer.holder.DimenHolder getCorners() -> getCorners
    37:37:int getGradientDrawable() -> getGradientDrawable
    207:231:void style(android.widget.TextView,android.content.res.ColorStateList) -> style
com.mikepenz.materialdrawer.holder.DimenHolder -> com.mikepenz.materialdrawer.holder.DimenHolder:
    13:15:void <init>() -> <init>
    24:26:com.mikepenz.materialdrawer.holder.DimenHolder fromDp(int) -> fromDp
com.mikepenz.materialdrawer.holder.ImageHolder -> com.mikepenz.materialdrawer.holder.ImageHolder:
    44:45:void <init>(int) -> <init>
    149:163:void applyDecidedIconOrSetGone(com.mikepenz.materialdrawer.holder.ImageHolder,android.widget.ImageView,int,boolean,int) -> applyDecidedIconOrSetGone
    98:119:android.graphics.drawable.Drawable decideIcon(android.content.Context,int,boolean,int) -> decideIcon
    132:135:android.graphics.drawable.Drawable decideIcon(com.mikepenz.materialdrawer.holder.ImageHolder,android.content.Context,int,boolean,int) -> decideIcon
com.mikepenz.materialdrawer.holder.StringHolder -> com.mikepenz.materialdrawer.holder.StringHolder:
    10:11:void <init>(java.lang.CharSequence) -> <init>
com.mikepenz.materialdrawer.icons.MaterialDrawerFont -> com.mikepenz.materialdrawer.icons.MaterialDrawerFont:
    19:19:void <clinit>() -> <clinit>
    16:16:void <init>() -> <init>
    100:107:android.graphics.Typeface getTypeface(android.content.Context) -> getTypeface
com.mikepenz.materialdrawer.icons.MaterialDrawerFont$Icon -> com.mikepenz.materialdrawer.icons.MaterialDrawerFont$Icon:
    110:115:void <clinit>() -> <clinit>
    119:121:void <init>(java.lang.String,int,char) -> <init>
    128:128:char getCharacter() -> getCharacter
    139:142:com.mikepenz.iconics.typeface.ITypeface getTypeface() -> getTypeface
    110:110:com.mikepenz.materialdrawer.icons.MaterialDrawerFont$Icon valueOf(java.lang.String) -> valueOf
    110:110:com.mikepenz.materialdrawer.icons.MaterialDrawerFont$Icon[] values() -> values
com.mikepenz.materialdrawer.model.AbstractBadgeableDrawerItem -> com.mikepenz.materialdrawer.model.AbstractBadgeableDrawerItem:
    18:20:void <init>() -> <init>
    18:18:void bindView(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List) -> bindView
    67:90:void bindView(com.mikepenz.materialdrawer.model.AbstractBadgeableDrawerItem$ViewHolder,java.util.List) -> bindView
    62:62:int getLayoutRes() -> getLayoutRes
    56:56:int getType() -> getType
    18:18:androidx.recyclerview.widget.RecyclerView$ViewHolder getViewHolder(android.view.View) -> getViewHolder
    94:94:com.mikepenz.materialdrawer.model.AbstractBadgeableDrawerItem$ViewHolder getViewHolder(android.view.View) -> getViewHolder
com.mikepenz.materialdrawer.model.AbstractBadgeableDrawerItem$ViewHolder -> com.mikepenz.materialdrawer.model.AbstractBadgeableDrawerItem$ViewHolder:
    102:105:void <init>(android.view.View) -> <init>
    97:97:android.widget.TextView access$000(com.mikepenz.materialdrawer.model.AbstractBadgeableDrawerItem$ViewHolder) -> access$000
    97:97:android.view.View access$100(com.mikepenz.materialdrawer.model.AbstractBadgeableDrawerItem$ViewHolder) -> access$100
com.mikepenz.materialdrawer.model.AbstractDrawerItem -> com.mikepenz.materialdrawer.model.AbstractDrawerItem:
    25:278:void <init>() -> <init>
    360:360:void attachToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> attachToWindow
    339:340:void bindView(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List) -> bindView
    370:370:void detachFromWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> detachFromWindow
    415:415:boolean equals(int) -> equals
    426:429:boolean equals(java.lang.Object) -> equals
    381:381:boolean failedToRecycle(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> failedToRecycle
    331:333:android.view.View generateView(android.content.Context,android.view.ViewGroup) -> generateView
    48:48:long getIdentifier() -> getIdentifier
    165:165:com.mikepenz.materialdrawer.Drawer$OnDrawerItemClickListener getOnDrawerItemClickListener() -> getOnDrawerItemClickListener
    25:25:com.mikepenz.fastadapter.IItem getParent() -> getParent
    218:218:com.mikepenz.materialdrawer.model.interfaces.IDrawerItem getParent() -> getParent
    274:274:java.util.List getSubItems() -> getSubItems
    392:392:androidx.recyclerview.widget.RecyclerView$ViewHolder getViewHolder(android.view.ViewGroup) -> getViewHolder
    439:439:int hashCode() -> hashCode
    306:306:boolean isAutoExpanding() -> isAutoExpanding
    92:92:boolean isEnabled() -> isEnabled
    295:295:boolean isExpanded() -> isExpanded
    138:138:boolean isSelectable() -> isSelectable
    115:115:boolean isSelected() -> isSelected
    159:159:boolean isSelectedBackgroundAnimated() -> isSelectedBackgroundAnimated
    205:208:void onPostBindView(com.mikepenz.materialdrawer.model.interfaces.IDrawerItem,android.view.View) -> onPostBindView
    349:350:void unbindView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> unbindView
    36:37:java.lang.Object withIdentifier(long) -> withIdentifier
    286:287:java.lang.Object withIsExpanded(boolean) -> withIsExpanded
    106:107:java.lang.Object withSetSelected(boolean) -> withSetSelected
com.mikepenz.materialdrawer.model.BaseDescribeableDrawerItem -> com.mikepenz.materialdrawer.model.BaseDescribeableDrawerItem:
    21:21:void <init>() -> <init>
    59:108:void bindViewHelper(com.mikepenz.materialdrawer.model.BaseViewHolder) -> bindViewHelper
    46:46:com.mikepenz.materialdrawer.holder.StringHolder getDescription() -> getDescription
    50:50:com.mikepenz.materialdrawer.holder.ColorHolder getDescriptionTextColor() -> getDescriptionTextColor
com.mikepenz.materialdrawer.model.BaseDrawerItem -> com.mikepenz.materialdrawer.model.BaseDrawerItem:
    32:52:void <init>() -> <init>
    291:296:int getColor(android.content.Context) -> getColor
    250:250:com.mikepenz.materialdrawer.holder.ColorHolder getDisabledIconColor() -> getDisabledIconColor
    230:230:com.mikepenz.materialdrawer.holder.ColorHolder getDisabledTextColor() -> getDisabledTextColor
    238:238:com.mikepenz.materialdrawer.holder.ImageHolder getIcon() -> getIcon
    258:258:com.mikepenz.materialdrawer.holder.ColorHolder getIconColor() -> getIconColor
    317:322:int getIconColor(android.content.Context) -> getIconColor
    246:246:com.mikepenz.materialdrawer.holder.StringHolder getName() -> getName
    218:218:com.mikepenz.materialdrawer.holder.ColorHolder getSelectedColor() -> getSelectedColor
    276:279:int getSelectedColor(android.content.Context) -> getSelectedColor
    242:242:com.mikepenz.materialdrawer.holder.ImageHolder getSelectedIcon() -> getSelectedIcon
    254:254:com.mikepenz.materialdrawer.holder.ColorHolder getSelectedIconColor() -> getSelectedIconColor
    332:332:int getSelectedIconColor(android.content.Context) -> getSelectedIconColor
    226:226:com.mikepenz.materialdrawer.holder.ColorHolder getSelectedTextColor() -> getSelectedTextColor
    306:306:int getSelectedTextColor(android.content.Context) -> getSelectedTextColor
    222:222:com.mikepenz.materialdrawer.holder.ColorHolder getTextColor() -> getTextColor
    343:347:android.content.res.ColorStateList getTextColorStateList(int,int) -> getTextColorStateList
    262:262:android.graphics.Typeface getTypeface() -> getTypeface
    234:234:boolean isIconTinted() -> isIconTinted
    65:66:java.lang.Object withIcon(int) -> withIcon
    98:99:java.lang.Object withName(java.lang.String) -> withName
    207:208:java.lang.Object withTypeface(android.graphics.Typeface) -> withTypeface
com.mikepenz.materialdrawer.model.BaseViewHolder -> com.mikepenz.materialdrawer.model.BaseViewHolder:
    18:24:void <init>(android.view.View) -> <init>
com.mikepenz.materialdrawer.model.ContainerDrawerItem -> com.mikepenz.materialdrawer.model.ContainerDrawerItem:
    19:56:void <init>() -> <init>
    19:19:void bindView(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List) -> bindView
    80:134:void bindView(com.mikepenz.materialdrawer.model.ContainerDrawerItem$ViewHolder,java.util.List) -> bindView
    75:75:int getLayoutRes() -> getLayoutRes
    69:69:int getType() -> getType
    19:19:androidx.recyclerview.widget.RecyclerView$ViewHolder getViewHolder(android.view.View) -> getViewHolder
    138:138:com.mikepenz.materialdrawer.model.ContainerDrawerItem$ViewHolder getViewHolder(android.view.View) -> getViewHolder
    59:60:com.mikepenz.materialdrawer.model.ContainerDrawerItem withDivider(boolean) -> withDivider
    24:25:com.mikepenz.materialdrawer.model.ContainerDrawerItem withHeight(com.mikepenz.materialdrawer.holder.DimenHolder) -> withHeight
    35:36:com.mikepenz.materialdrawer.model.ContainerDrawerItem withView(android.view.View) -> withView
    52:53:com.mikepenz.materialdrawer.model.ContainerDrawerItem withViewPosition(com.mikepenz.materialdrawer.model.ContainerDrawerItem$Position) -> withViewPosition
com.mikepenz.materialdrawer.model.ContainerDrawerItem$Position -> com.mikepenz.materialdrawer.model.ContainerDrawerItem$Position:
    43:46:void <clinit>() -> <clinit>
    43:43:void <init>(java.lang.String,int) -> <init>
    43:43:com.mikepenz.materialdrawer.model.ContainerDrawerItem$Position valueOf(java.lang.String) -> valueOf
    43:43:com.mikepenz.materialdrawer.model.ContainerDrawerItem$Position[] values() -> values
com.mikepenz.materialdrawer.model.ContainerDrawerItem$ViewHolder -> com.mikepenz.materialdrawer.model.ContainerDrawerItem$ViewHolder:
    141:141:void <init>(android.view.View,com.mikepenz.materialdrawer.model.ContainerDrawerItem$1) -> <init>
    145:147:void <init>(android.view.View) -> <init>
    141:141:android.view.View access$000(com.mikepenz.materialdrawer.model.ContainerDrawerItem$ViewHolder) -> access$000
com.mikepenz.materialdrawer.model.PrimaryDrawerItem -> com.mikepenz.materialdrawer.model.PrimaryDrawerItem:
    6:6:void <init>() -> <init>
com.mikepenz.materialdrawer.model.utils.BadgeDrawableBuilder -> com.mikepenz.materialdrawer.model.utils.BadgeDrawableBuilder:
    18:20:void <init>(com.mikepenz.materialdrawer.holder.BadgeStyle) -> <init>
    23:42:android.graphics.drawable.StateListDrawable build(android.content.Context) -> build
com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader -> com.mikepenz.materialdrawer.util.AbstractDrawerImageLoader:
    9:9:void <init>() -> <init>
    27:27:android.graphics.drawable.Drawable placeholder(android.content.Context) -> placeholder
    32:32:android.graphics.drawable.Drawable placeholder(android.content.Context,java.lang.String) -> placeholder
    12:12:void set(android.widget.ImageView,android.net.Uri,android.graphics.drawable.Drawable) -> set
    17:20:void set(android.widget.ImageView,android.net.Uri,android.graphics.drawable.Drawable,java.lang.String) -> set
com.mikepenz.materialdrawer.util.DrawerImageLoader -> com.mikepenz.materialdrawer.util.DrawerImageLoader:
    18:18:void <clinit>() -> <clinit>
    21:25:void <init>(com.mikepenz.materialdrawer.util.DrawerImageLoader$IDrawerImageLoader) -> <init>
    33:37:com.mikepenz.materialdrawer.util.DrawerImageLoader getInstance() -> getInstance
    53:60:boolean setImage(android.widget.ImageView,android.net.Uri,java.lang.String) -> setImage
com.mikepenz.materialdrawer.util.DrawerImageLoader$1 -> com.mikepenz.materialdrawer.util.DrawerImageLoader$1:
    34:34:void <init>() -> <init>
com.mikepenz.materialdrawer.util.DrawerUIUtils -> com.mikepenz.materialdrawer.util.DrawerUIUtils:
    43:44:boolean getBooleanStyleable(android.content.Context,int,boolean) -> getBooleanStyleable
    182:184:int getOptimalDrawerWidth(android.content.Context) -> getOptimalDrawerWidth
    195:195:android.graphics.drawable.Drawable getPlaceHolder(android.content.Context) -> getPlaceHolder
    136:136:android.content.res.ColorStateList getTextColorStateList(int,int) -> getTextColorStateList
    233:240:boolean isSystemBarOnBottom(android.content.Context) -> isSystemBarOnBottom
    205:207:void setDrawerVerticalPadding(android.view.View) -> setDrawerVerticalPadding
    217:224:void setDrawerVerticalPadding(android.view.View,int) -> setDrawerVerticalPadding
    56:126:void themeDrawerItem(android.content.Context,android.view.View,int,boolean) -> themeDrawerItem
com.mikepenz.materialdrawer.view.BezelImageView -> com.mikepenz.materialdrawer.view.BezelImageView:
    90:91:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    69:129:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    245:265:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    270:277:void drawableStateChanged() -> drawableStateChanged
    281:286:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    176:239:void onDraw(android.graphics.Canvas) -> onDraw
    133:138:void onSizeChanged(int,int,int,int) -> onSizeChanged
    159:171:boolean setFrame(int,int,int,int) -> setFrame
    319:320:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    309:310:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    314:315:void setImageResource(int) -> setImageResource
    324:329:void setImageURI(android.net.Uri) -> setImageURI
    301:304:void setSelectorColor(int) -> setSelectorColor
    290:290:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
com.mikepenz.materialdrawer.view.BezelImageView$CustomOutline -> com.mikepenz.materialdrawer.view.BezelImageView$CustomOutline:
    146:149:void <init>(com.mikepenz.materialdrawer.view.BezelImageView,int,int) -> <init>
    153:154:void getOutline(android.view.View,android.graphics.Outline) -> getOutline
com.mikepenz.materialize.Materialize -> com.mikepenz.materialize.Materialize:
    14:23:void <init>(com.mikepenz.materialize.MaterializeBuilder) -> <init>
com.mikepenz.materialize.MaterializeBuilder -> com.mikepenz.materialize.MaterializeBuilder:
    32:294:void <init>() -> <init>
    322:496:com.mikepenz.materialize.Materialize build() -> build
    54:56:com.mikepenz.materialize.MaterializeBuilder withActivity(android.app.Activity) -> withActivity
    289:290:com.mikepenz.materialize.MaterializeBuilder withContainer(android.view.ViewGroup) -> withContainer
    247:255:com.mikepenz.materialize.MaterializeBuilder withFullscreen(boolean) -> withFullscreen
    66:67:com.mikepenz.materialize.MaterializeBuilder withRootView(android.view.ViewGroup) -> withRootView
    270:276:com.mikepenz.materialize.MaterializeBuilder withSystemUIHidden(boolean) -> withSystemUIHidden
    227:233:com.mikepenz.materialize.MaterializeBuilder withTintedNavigationBar(boolean) -> withTintedNavigationBar
    173:174:com.mikepenz.materialize.MaterializeBuilder withTintedStatusBar(boolean) -> withTintedStatusBar
    188:190:com.mikepenz.materialize.MaterializeBuilder withTranslucentNavigationBarProgrammatically(boolean) -> withTranslucentNavigationBarProgrammatically
    132:133:com.mikepenz.materialize.MaterializeBuilder withTransparentStatusBar(boolean) -> withTransparentStatusBar
    94:95:com.mikepenz.materialize.MaterializeBuilder withUseScrimInsetsLayout(boolean) -> withUseScrimInsetsLayout
com.mikepenz.materialize.drawable.PressedEffectStateListDrawable -> com.mikepenz.materialize.drawable.PressedEffectStateListDrawable:
    20:29:void <init>(android.graphics.drawable.Drawable,int,int) -> <init>
    32:42:void <init>(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,int,int) -> <init>
    62:62:boolean isStateful() -> isStateful
    46:57:boolean onStateChange(int[]) -> onStateChange
com.mikepenz.materialize.holder.ColorHolder -> com.mikepenz.materialize.holder.ColorHolder:
    170:175:void applyToOr(com.mikepenz.materialize.holder.ColorHolder,android.widget.TextView,android.content.res.ColorStateList) -> applyToOr
    185:190:void applyToOrTransparent(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,android.graphics.drawable.GradientDrawable) -> applyToOrTransparent
    140:143:int color(com.mikepenz.materialize.holder.ColorHolder,android.content.Context,int,int) -> color
com.mikepenz.materialize.holder.DimenHolder -> com.mikepenz.materialize.holder.DimenHolder:
    12:18:void <init>() -> <init>
    63:70:int asPixel(android.content.Context) -> asPixel
    33:34:void setDp(int) -> setDp
com.mikepenz.materialize.holder.ImageHolder -> com.mikepenz.materialize.holder.ImageHolder:
    26:46:void <init>(int) -> <init>
    288:307:void applyMultiIconTo(android.graphics.drawable.Drawable,int,android.graphics.drawable.Drawable,int,boolean,android.widget.ImageView) -> applyMultiIconTo
    65:65:android.graphics.Bitmap getBitmap() -> getBitmap
    57:57:android.graphics.drawable.Drawable getIcon() -> getIcon
    73:73:int getIconRes() -> getIconRes
    49:49:android.net.Uri getUri() -> getUri
com.mikepenz.materialize.holder.StringHolder -> com.mikepenz.materialize.holder.StringHolder:
    13:17:void <init>(java.lang.CharSequence) -> <init>
    44:51:void applyTo(android.widget.TextView) -> applyTo
    79:82:void applyTo(com.mikepenz.materialize.holder.StringHolder,android.widget.TextView) -> applyTo
    54:64:boolean applyToOrHide(android.widget.TextView) -> applyToOrHide
    85:91:boolean applyToOrHide(com.mikepenz.materialize.holder.StringHolder,android.widget.TextView) -> applyToOrHide
    96:101:java.lang.String toString() -> toString
com.mikepenz.materialize.util.UIUtils -> com.mikepenz.materialize.util.UIUtils:
    175:178:float convertDpToPixel(float,android.content.Context) -> convertDpToPixel
    126:130:int getActionBarHeight(android.content.Context) -> getActionBarHeight
    242:245:android.graphics.drawable.StateListDrawable getIconStateList(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> getIconStateList
    111:116:int getNavigationBarHeight(android.content.Context) -> getNavigationBarHeight
    335:336:int getScreenWidth(android.content.Context) -> getScreenWidth
    323:324:android.graphics.drawable.Drawable getSelectableBackground(android.content.Context) -> getSelectableBackground
    309:312:int getSelectableBackgroundRes(android.content.Context) -> getSelectableBackgroundRes
    140:140:int getStatusBarHeight(android.content.Context) -> getStatusBarHeight
    151:163:int getStatusBarHeight(android.content.Context,boolean) -> getStatusBarHeight
    93:99:int getThemeAttributeDimensionSize(android.content.Context,int) -> getThemeAttributeDimensionSize
    40:44:int getThemeColor(android.content.Context,int) -> getThemeColor
    56:60:int getThemeColorFromAttrOrRes(android.content.Context,int,int) -> getThemeColorFromAttrOrRes
    72:73:void setBackground(android.view.View,android.graphics.drawable.Drawable) -> setBackground
    82:83:void setBackground(android.view.View,int) -> setBackground
    224:232:void setFlag(android.app.Activity,int,boolean) -> setFlag
    212:215:void setTranslucentNavigationFlag(android.app.Activity,boolean) -> setTranslucentNavigationFlag
    201:204:void setTranslucentStatusFlag(android.app.Activity,boolean) -> setTranslucentStatusFlag
com.mikepenz.materialize.view.ScrimInsetsFrameLayout -> com.mikepenz.materialize.view.ScrimInsetsFrameLayout:
    42:58:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    39:39:android.graphics.Rect access$000(com.mikepenz.materialize.view.ScrimInsetsFrameLayout) -> access$000
    39:39:android.graphics.Rect access$002(com.mikepenz.materialize.view.ScrimInsetsFrameLayout,android.graphics.Rect) -> access$002
    39:39:android.graphics.drawable.Drawable access$100(com.mikepenz.materialize.view.ScrimInsetsFrameLayout) -> access$100
    39:39:com.mikepenz.materialize.view.OnInsetsCallback access$200(com.mikepenz.materialize.view.ScrimInsetsFrameLayout) -> access$200
    96:137:void draw(android.graphics.Canvas) -> draw
    162:162:android.graphics.drawable.Drawable getInsetForeground() -> getInsetForeground
    216:216:com.mikepenz.materialize.view.OnInsetsCallback getOnInsetsCallback() -> getOnInsetsCallback
    157:157:android.view.ViewGroup getView() -> getView
    66:92:void init(android.content.Context,android.util.AttributeSet,int) -> init
    141:145:void onAttachedToWindow() -> onAttachedToWindow
    149:153:void onDetachedFromWindow() -> onDetachedFromWindow
    167:168:void setInsetForeground(android.graphics.drawable.Drawable) -> setInsetForeground
    172:173:void setInsetForeground(int) -> setInsetForeground
    211:212:void setOnInsetsCallback(com.mikepenz.materialize.view.OnInsetsCallback) -> setOnInsetsCallback
    200:201:void setSystemUIVisible(boolean) -> setSystemUIVisible
    192:193:void setTintNavigationBar(boolean) -> setTintNavigationBar
    182:183:void setTintStatusBar(boolean) -> setTintStatusBar
com.mikepenz.materialize.view.ScrimInsetsFrameLayout$1 -> com.mikepenz.materialize.view.ScrimInsetsFrameLayout$1:
    74:74:void <init>(com.mikepenz.materialize.view.ScrimInsetsFrameLayout) -> <init>
    77:89:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
com.mikepenz.materialize.view.ScrimInsetsRelativeLayout -> com.mikepenz.materialize.view.ScrimInsetsRelativeLayout:
    40:41:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    27:73:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    23:23:android.graphics.Rect access$000(com.mikepenz.materialize.view.ScrimInsetsRelativeLayout) -> access$000
    23:23:android.graphics.Rect access$002(com.mikepenz.materialize.view.ScrimInsetsRelativeLayout,android.graphics.Rect) -> access$002
    23:23:android.graphics.drawable.Drawable access$100(com.mikepenz.materialize.view.ScrimInsetsRelativeLayout) -> access$100
    23:23:com.mikepenz.materialize.view.OnInsetsCallback access$200(com.mikepenz.materialize.view.ScrimInsetsRelativeLayout) -> access$200
    77:117:void draw(android.graphics.Canvas) -> draw
    142:142:android.graphics.drawable.Drawable getInsetForeground() -> getInsetForeground
    196:196:com.mikepenz.materialize.view.OnInsetsCallback getOnInsetsCallback() -> getOnInsetsCallback
    137:137:android.view.ViewGroup getView() -> getView
    121:125:void onAttachedToWindow() -> onAttachedToWindow
    129:133:void onDetachedFromWindow() -> onDetachedFromWindow
    147:148:void setInsetForeground(android.graphics.drawable.Drawable) -> setInsetForeground
    152:153:void setInsetForeground(int) -> setInsetForeground
    191:192:void setOnInsetsCallback(com.mikepenz.materialize.view.OnInsetsCallback) -> setOnInsetsCallback
    180:181:void setSystemUIVisible(boolean) -> setSystemUIVisible
    172:173:void setTintNavigationBar(boolean) -> setTintNavigationBar
    162:163:void setTintStatusBar(boolean) -> setTintStatusBar
com.mikepenz.materialize.view.ScrimInsetsRelativeLayout$1 -> com.mikepenz.materialize.view.ScrimInsetsRelativeLayout$1:
    54:54:void <init>(com.mikepenz.materialize.view.ScrimInsetsRelativeLayout) -> <init>
    58:70:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
com.smarteist.autoimageslider.IndicatorView.IndicatorManager -> com.smarteist.autoimageslider.IndicatorView.IndicatorManager:
    20:24:void <init>(com.smarteist.autoimageslider.IndicatorView.IndicatorManager$Listener) -> <init>
    27:27:com.smarteist.autoimageslider.IndicatorView.animation.AnimationManager animate() -> animate
    35:35:com.smarteist.autoimageslider.IndicatorView.draw.DrawManager drawer() -> drawer
    31:31:com.smarteist.autoimageslider.IndicatorView.draw.data.Indicator indicator() -> indicator
    40:44:void onValueUpdated(com.smarteist.autoimageslider.IndicatorView.animation.data.Value) -> onValueUpdated
com.smarteist.autoimageslider.IndicatorView.PageIndicatorView -> com.smarteist.autoimageslider.IndicatorView.PageIndicatorView:
    46:48:void <init>(android.content.Context) -> <init>
    38:38:void access$000(com.smarteist.autoimageslider.IndicatorView.PageIndicatorView) -> access$000
    658:669:int adjustPosition(int) -> adjustPosition
    625:641:void findViewPager(android.view.ViewParent) -> findViewPager
    645:653:com.smarteist.autoimageslider.SliderPager findViewPager(android.view.ViewGroup,int) -> findViewPager
    326:326:long getAnimationDuration() -> getAnimationDuration
    160:160:int getCount() -> getCount
    223:223:int getPadding() -> getPadding
    197:197:int getRadius() -> getRadius
    240:240:float getScaleFactor() -> getScaleFactor
    287:287:int getSelectedColor() -> getSelectedColor
    402:402:int getSelection() -> getSelection
    276:276:int getStrokeWidth() -> getStrokeWidth
    298:298:int getUnselectedColor() -> getUnselectedColor
    476:478:void init(android.util.AttributeSet) -> init
    487:496:void initIndicatorManager(android.util.AttributeSet) -> initIndicatorManager
    606:617:boolean isRtl() -> isRtl
    621:621:boolean isViewMeasured() -> isViewMeasured
    146:147:void onAdapterChanged(com.smarteist.autoimageslider.SliderPager,androidx.viewpager.widget.PagerAdapter,androidx.viewpager.widget.PagerAdapter) -> onAdapterChanged
    68:70:void onAttachedToWindow() -> onAttachedToWindow
    74:76:void onDetachedFromWindow() -> onDetachedFromWindow
    112:113:void onDraw(android.graphics.Canvas) -> onDraw
    124:125:void onIndicatorUpdated() -> onIndicatorUpdated
    106:108:void onMeasure(int,int) -> onMeasure
    590:603:void onPageScroll(int,float) -> onPageScroll
    139:142:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    129:130:void onPageScrolled(int,float,int) -> onPageScrolled
    576:587:void onPageSelect(int) -> onPageSelect
    134:135:void onPageSelected(int) -> onPageSelected
    91:102:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    80:86:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    118:119:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    499:515:void registerSetObserver() -> registerSetObserver
    365:369:void releaseViewPager() -> releaseViewPager
    321:322:void setAnimationDuration(long) -> setAnimationDuration
    331:339:void setAnimationType(com.smarteist.autoimageslider.IndicatorView.animation.type.IndicatorAnimationType) -> setAnimationType
    303:309:void setAutoVisibility(boolean) -> setAutoVisibility
    472:473:void setClickListener(com.smarteist.autoimageslider.IndicatorView.draw.controller.DrawController$ClickListener) -> setClickListener
    151:156:void setCount(int) -> setCount
    165:172:void setDynamicCount(boolean) -> setDynamicCount
    343:345:void setInteractiveAnimation(boolean) -> setInteractiveAnimation
    313:317:void setOrientation(com.smarteist.autoimageslider.IndicatorView.draw.data.Orientation) -> setOrientation
    202:209:void setPadding(int) -> setPadding
    213:219:void setPadding(float) -> setPadding
    442:469:void setProgress(int,float) -> setProgress
    176:183:void setRadius(int) -> setRadius
    187:193:void setRadius(float) -> setRadius
    373:398:void setRtlMode(com.smarteist.autoimageslider.IndicatorView.draw.data.RtlMode) -> setRtlMode
    228:236:void setScaleFactor(float) -> setScaleFactor
    422:428:void setSelected(int) -> setSelected
    281:283:void setSelectedColor(int) -> setSelectedColor
    407:419:void setSelection(int) -> setSelection
    245:256:void setStrokeWidth(float) -> setStrokeWidth
    260:272:void setStrokeWidth(int) -> setStrokeWidth
    292:294:void setUnselectedColor(int) -> setUnselectedColor
    349:361:void setViewPager(com.smarteist.autoimageslider.SliderPager) -> setViewPager
    481:484:void setupId() -> setupId
    518:528:void unRegisterSetObserver() -> unRegisterSetObserver
    531:557:void updateState() -> updateState
    560:573:void updateVisibility() -> updateVisibility
com.smarteist.autoimageslider.IndicatorView.PageIndicatorView$1 -> com.smarteist.autoimageslider.IndicatorView.PageIndicatorView$1:
    503:503:void <init>(com.smarteist.autoimageslider.IndicatorView.PageIndicatorView) -> <init>
    506:507:void onChanged() -> onChanged
com.smarteist.autoimageslider.IndicatorView.PageIndicatorView$2 -> com.smarteist.autoimageslider.IndicatorView.PageIndicatorView$2:
    606:606:void <clinit>() -> <clinit>
com.smarteist.autoimageslider.IndicatorView.animation.AnimationManager -> com.smarteist.autoimageslider.IndicatorView.animation.AnimationManager:
    14:16:void <init>(com.smarteist.autoimageslider.IndicatorView.draw.data.Indicator,com.smarteist.autoimageslider.IndicatorView.animation.controller.ValueController$UpdateListener) -> <init>
    19:23:void basic() -> basic
    32:35:void end() -> end
    26:29:void interactive(float) -> interactive
com.smarteist.autoimageslider.IndicatorView.animation.controller.AnimationController -> com.smarteist.autoimageslider.IndicatorView.animation.controller.AnimationController:
    22:26:void <init>(com.smarteist.autoimageslider.IndicatorView.draw.data.Indicator,com.smarteist.autoimageslider.IndicatorView.animation.controller.ValueController$UpdateListener) -> <init>
    47:89:void animate() -> animate
    35:38:void basic() -> basic
    92:108:void colorAnimation() -> colorAnimation
    225:253:void dropAnimation() -> dropAnimation
    41:44:void end() -> end
    179:197:void fillAnimation() -> fillAnimation
    29:32:void interactive(float) -> interactive
    111:129:void scaleAnimation() -> scaleAnimation
    278:296:void scaleDownAnimation() -> scaleDownAnimation
    157:176:void slideAnimation() -> slideAnimation
    256:275:void swapAnimation() -> swapAnimation
    200:222:void thinWormAnimation() -> thinWormAnimation
    132:154:void wormAnimation() -> wormAnimation
com.smarteist.autoimageslider.IndicatorView.animation.controller.AnimationController$1 -> com.smarteist.autoimageslider.IndicatorView.animation.controller.AnimationController$1:
    48:48:void <clinit>() -> <clinit>
com.smarteist.autoimageslider.IndicatorView.animation.controller.ValueController -> com.smarteist.autoimageslider.IndicatorView.animation.controller.ValueController:
    27:29:void <init>(com.smarteist.autoimageslider.IndicatorView.animation.controller.ValueController$UpdateListener) -> <init>
    33:37:com.smarteist.autoimageslider.IndicatorView.animation.type.ColorAnimation color() -> color
    87:91:com.smarteist.autoimageslider.IndicatorView.animation.type.DropAnimation drop() -> drop
    69:73:com.smarteist.autoimageslider.IndicatorView.animation.type.FillAnimation fill() -> fill
    42:46:com.smarteist.autoimageslider.IndicatorView.animation.type.ScaleAnimation scale() -> scale
    105:109:com.smarteist.autoimageslider.IndicatorView.animation.type.ScaleDownAnimation scaleDown() -> scaleDown
    60:64:com.smarteist.autoimageslider.IndicatorView.animation.type.SlideAnimation slide() -> slide
    96:100:com.smarteist.autoimageslider.IndicatorView.animation.type.SwapAnimation swap() -> swap
    78:82:com.smarteist.autoimageslider.IndicatorView.animation.type.ThinWormAnimation thinWorm() -> thinWorm
    51:55:com.smarteist.autoimageslider.IndicatorView.animation.type.WormAnimation worm() -> worm
com.smarteist.autoimageslider.IndicatorView.animation.data.type.ColorAnimationValue -> com.smarteist.autoimageslider.IndicatorView.animation.data.type.ColorAnimationValue:
    5:5:void <init>() -> <init>
    11:11:int getColor() -> getColor
    19:19:int getColorReverse() -> getColorReverse
    15:16:void setColor(int) -> setColor
    23:24:void setColorReverse(int) -> setColorReverse
com.smarteist.autoimageslider.IndicatorView.animation.data.type.DropAnimationValue -> com.smarteist.autoimageslider.IndicatorView.animation.data.type.DropAnimationValue:
    6:6:void <init>() -> <init>
    21:21:int getHeight() -> getHeight
    29:29:int getRadius() -> getRadius
    13:13:int getWidth() -> getWidth
    25:26:void setHeight(int) -> setHeight
    33:34:void setRadius(int) -> setRadius
    17:18:void setWidth(int) -> setWidth
com.smarteist.autoimageslider.IndicatorView.animation.data.type.FillAnimationValue -> com.smarteist.autoimageslider.IndicatorView.animation.data.type.FillAnimationValue:
    5:5:void <init>() -> <init>
    14:14:int getRadius() -> getRadius
    22:22:int getRadiusReverse() -> getRadiusReverse
    30:30:int getStroke() -> getStroke
    38:38:int getStrokeReverse() -> getStrokeReverse
    18:19:void setRadius(int) -> setRadius
    26:27:void setRadiusReverse(int) -> setRadiusReverse
    34:35:void setStroke(int) -> setStroke
    42:43:void setStrokeReverse(int) -> setStrokeReverse
com.smarteist.autoimageslider.IndicatorView.animation.data.type.ScaleAnimationValue -> com.smarteist.autoimageslider.IndicatorView.animation.data.type.ScaleAnimationValue:
    5:5:void <init>() -> <init>
    11:11:int getRadius() -> getRadius
    19:19:int getRadiusReverse() -> getRadiusReverse
    15:16:void setRadius(int) -> setRadius
    23:24:void setRadiusReverse(int) -> setRadiusReverse
com.smarteist.autoimageslider.IndicatorView.animation.data.type.SlideAnimationValue -> com.smarteist.autoimageslider.IndicatorView.animation.data.type.SlideAnimationValue:
    5:5:void <init>() -> <init>
    10:10:int getCoordinate() -> getCoordinate
    14:15:void setCoordinate(int) -> setCoordinate
com.smarteist.autoimageslider.IndicatorView.animation.data.type.SwapAnimationValue -> com.smarteist.autoimageslider.IndicatorView.animation.data.type.SwapAnimationValue:
    5:5:void <init>() -> <init>
    11:11:int getCoordinate() -> getCoordinate
    19:19:int getCoordinateReverse() -> getCoordinateReverse
    15:16:void setCoordinate(int) -> setCoordinate
    23:24:void setCoordinateReverse(int) -> setCoordinateReverse
com.smarteist.autoimageslider.IndicatorView.animation.data.type.ThinWormAnimationValue -> com.smarteist.autoimageslider.IndicatorView.animation.data.type.ThinWormAnimationValue:
    5:5:void <init>() -> <init>
    10:10:int getHeight() -> getHeight
    14:15:void setHeight(int) -> setHeight
com.smarteist.autoimageslider.IndicatorView.animation.data.type.WormAnimationValue -> com.smarteist.autoimageslider.IndicatorView.animation.data.type.WormAnimationValue:
    5:5:void <init>() -> <init>
    19:19:int getRectEnd() -> getRectEnd
    11:11:int getRectStart() -> getRectStart
    23:24:void setRectEnd(int) -> setRectEnd
    15:16:void setRectStart(int) -> setRectStart
com.smarteist.autoimageslider.IndicatorView.animation.type.BaseAnimation -> com.smarteist.autoimageslider.IndicatorView.animation.type.BaseAnimation:
    12:20:void <init>(com.smarteist.autoimageslider.IndicatorView.animation.controller.ValueController$UpdateListener) -> <init>
    28:34:com.smarteist.autoimageslider.IndicatorView.animation.type.BaseAnimation duration(long) -> duration
    44:47:void end() -> end
    38:41:void start() -> start
com.smarteist.autoimageslider.IndicatorView.animation.type.ColorAnimation -> com.smarteist.autoimageslider.IndicatorView.animation.type.ColorAnimation:
    26:28:void <init>(com.smarteist.autoimageslider.IndicatorView.animation.controller.ValueController$UpdateListener) -> <init>
    12:12:void access$000(com.smarteist.autoimageslider.IndicatorView.animation.type.ColorAnimation,android.animation.ValueAnimator) -> access$000
    12:12:android.animation.Animator createAnimator() -> createAnimator
    33:43:android.animation.ValueAnimator createAnimator() -> createAnimator
    80:94:android.animation.PropertyValuesHolder createColorPropertyHolder(boolean) -> createColorPropertyHolder
    99:107:boolean hasChanges(int,int) -> hasChanges
    111:120:void onAnimateUpdated(android.animation.ValueAnimator) -> onAnimateUpdated
    12:12:com.smarteist.autoimageslider.IndicatorView.animation.type.BaseAnimation progress(float) -> progress
    48:56:com.smarteist.autoimageslider.IndicatorView.animation.type.ColorAnimation progress(float) -> progress
    61:72:com.smarteist.autoimageslider.IndicatorView.animation.type.ColorAnimation with(int,int) -> with
com.smarteist.autoimageslider.IndicatorView.animation.type.ColorAnimation$1 -> com.smarteist.autoimageslider.IndicatorView.animation.type.ColorAnimation$1:
    36:36:void <init>(com.smarteist.autoimageslider.IndicatorView.animation.type.ColorAnimation) -> <init>
    39:40:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.smarteist.autoimageslider.IndicatorView.animation.type.DropAnimation -> com.smarteist.autoimageslider.IndicatorView.animation.type.DropAnimation:
    24:26:void <init>(com.smarteist.autoimageslider.IndicatorView.animation.controller.ValueController$UpdateListener) -> <init>
    11:11:void access$000(com.smarteist.autoimageslider.IndicatorView.animation.type.DropAnimation,android.animation.ValueAnimator,com.smarteist.autoimageslider.IndicatorView.animation.type.DropAnimation$AnimationType) -> access$000
    11:11:android.animation.Animator createAnimator() -> createAnimator
    31:34:android.animation.AnimatorSet createAnimator() -> createAnimator
    111:121:android.animation.ValueAnimator createValueAnimation(int,int,long,com.smarteist.autoimageslider.IndicatorView.animation.type.DropAnimation$AnimationType) -> createValueAnimation
    74:75:com.smarteist.autoimageslider.IndicatorView.animation.type.DropAnimation duration(long) -> duration
    148:168:boolean hasChanges(int,int,int,int,int) -> hasChanges
    125:144:void onAnimatorUpdate(android.animation.ValueAnimator,com.smarteist.autoimageslider.IndicatorView.animation.type.DropAnimation$AnimationType) -> onAnimatorUpdate
    11:11:com.smarteist.autoimageslider.IndicatorView.animation.type.BaseAnimation progress(float) -> progress
    39:69:com.smarteist.autoimageslider.IndicatorView.animation.type.DropAnimation progress(float) -> progress
    80:107:com.smarteist.autoimageslider.IndicatorView.animation.type.DropAnimation with(int,int,int,int,int) -> with
com.smarteist.autoimageslider.IndicatorView.animation.type.DropAnimation$1 -> com.smarteist.autoimageslider.IndicatorView.animation.type.DropAnimation$1:
    114:114:void <init>(com.smarteist.autoimageslider.IndicatorView.animation.type.DropAnimation,com.smarteist.autoimageslider.IndicatorView.animation.type.DropAnimation$AnimationType) -> <init>
    117:118:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.smarteist.autoimageslider.IndicatorView.animation.type.DropAnimation$2 -> com.smarteist.autoimageslider.IndicatorView.animation.type.DropAnimation$2:
    127:127:void <clinit>() -> <clinit>
com.smarteist.autoimageslider.IndicatorView.animation.type.DropAnimation$AnimationType -> com.smarteist.autoimageslider.IndicatorView.animation.type.DropAnimation$AnimationType:
    19:19:void <clinit>() -> <clinit>
    19:19:void <init>(java.lang.String,int) -> <init>
    19:19:com.smarteist.autoimageslider.IndicatorView.animation.type.DropAnimation$AnimationType valueOf(java.lang.String) -> valueOf
    19:19:com.smarteist.autoimageslider.IndicatorView.animation.type.DropAnimation$AnimationType[] values() -> values
com.smarteist.autoimageslider.IndicatorView.animation.type.FillAnimation -> com.smarteist.autoimageslider.IndicatorView.animation.type.FillAnimation:
    26:28:void <init>(com.smarteist.autoimageslider.IndicatorView.animation.controller.ValueController$UpdateListener) -> <init>
    11:11:void access$000(com.smarteist.autoimageslider.IndicatorView.animation.type.FillAnimation,android.animation.ValueAnimator) -> access$000
    11:11:android.animation.Animator createAnimator() -> createAnimator
    33:43:android.animation.ValueAnimator createAnimator() -> createAnimator
    85:98:android.animation.PropertyValuesHolder createRadiusPropertyHolder(boolean) -> createRadiusPropertyHolder
    107:120:android.animation.PropertyValuesHolder createStrokePropertyHolder(boolean) -> createStrokePropertyHolder
    149:165:boolean hasChanges(int,int,int,int) -> hasChanges
    124:145:void onAnimateUpdated(android.animation.ValueAnimator) -> onAnimateUpdated
    48:76:com.smarteist.autoimageslider.IndicatorView.animation.type.FillAnimation with(int,int,int,int) -> with
com.smarteist.autoimageslider.IndicatorView.animation.type.FillAnimation$1 -> com.smarteist.autoimageslider.IndicatorView.animation.type.FillAnimation$1:
    36:36:void <init>(com.smarteist.autoimageslider.IndicatorView.animation.type.FillAnimation) -> <init>
    39:40:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.smarteist.autoimageslider.IndicatorView.animation.type.IndicatorAnimationType -> com.smarteist.autoimageslider.IndicatorView.animation.type.IndicatorAnimationType:
    3:3:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    3:3:com.smarteist.autoimageslider.IndicatorView.animation.type.IndicatorAnimationType valueOf(java.lang.String) -> valueOf
    3:3:com.smarteist.autoimageslider.IndicatorView.animation.type.IndicatorAnimationType[] values() -> values
com.smarteist.autoimageslider.IndicatorView.animation.type.ScaleAnimation -> com.smarteist.autoimageslider.IndicatorView.animation.type.ScaleAnimation:
    26:28:void <init>(com.smarteist.autoimageslider.IndicatorView.animation.controller.ValueController$UpdateListener) -> <init>
    11:11:void access$000(com.smarteist.autoimageslider.IndicatorView.animation.type.ScaleAnimation,android.animation.ValueAnimator) -> access$000
    11:11:android.animation.Animator createAnimator() -> createAnimator
    33:43:android.animation.ValueAnimator createAnimator() -> createAnimator
    92:105:android.animation.PropertyValuesHolder createScalePropertyHolder(boolean) -> createScalePropertyHolder
    110:126:boolean hasChanges(int,int,int,float) -> hasChanges
    69:84:void onAnimateUpdated(android.animation.ValueAnimator) -> onAnimateUpdated
    48:65:com.smarteist.autoimageslider.IndicatorView.animation.type.ScaleAnimation with(int,int,int,float) -> with
com.smarteist.autoimageslider.IndicatorView.animation.type.ScaleAnimation$1 -> com.smarteist.autoimageslider.IndicatorView.animation.type.ScaleAnimation$1:
    36:36:void <init>(com.smarteist.autoimageslider.IndicatorView.animation.type.ScaleAnimation) -> <init>
    39:40:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.smarteist.autoimageslider.IndicatorView.animation.type.ScaleDownAnimation -> com.smarteist.autoimageslider.IndicatorView.animation.type.ScaleDownAnimation:
    11:12:void <init>(com.smarteist.autoimageslider.IndicatorView.animation.controller.ValueController$UpdateListener) -> <init>
    21:34:android.animation.PropertyValuesHolder createScalePropertyHolder(boolean) -> createScalePropertyHolder
com.smarteist.autoimageslider.IndicatorView.animation.type.SlideAnimation -> com.smarteist.autoimageslider.IndicatorView.animation.type.SlideAnimation:
    17:23:void <init>(com.smarteist.autoimageslider.IndicatorView.animation.controller.ValueController$UpdateListener) -> <init>
    11:11:void access$000(com.smarteist.autoimageslider.IndicatorView.animation.type.SlideAnimation,android.animation.ValueAnimator) -> access$000
    11:11:android.animation.Animator createAnimator() -> createAnimator
    28:38:android.animation.ValueAnimator createAnimator() -> createAnimator
    69:72:android.animation.PropertyValuesHolder createSlidePropertyHolder() -> createSlidePropertyHolder
    86:94:boolean hasChanges(int,int) -> hasChanges
    76:82:void onAnimateUpdated(android.animation.ValueAnimator) -> onAnimateUpdated
    11:11:com.smarteist.autoimageslider.IndicatorView.animation.type.BaseAnimation progress(float) -> progress
    43:51:com.smarteist.autoimageslider.IndicatorView.animation.type.SlideAnimation progress(float) -> progress
    56:65:com.smarteist.autoimageslider.IndicatorView.animation.type.SlideAnimation with(int,int) -> with
com.smarteist.autoimageslider.IndicatorView.animation.type.SlideAnimation$1 -> com.smarteist.autoimageslider.IndicatorView.animation.type.SlideAnimation$1:
    31:31:void <init>(com.smarteist.autoimageslider.IndicatorView.animation.type.SlideAnimation) -> <init>
    34:35:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.smarteist.autoimageslider.IndicatorView.animation.type.SwapAnimation -> com.smarteist.autoimageslider.IndicatorView.animation.type.SwapAnimation:
    17:25:void <init>(com.smarteist.autoimageslider.IndicatorView.animation.controller.ValueController$UpdateListener) -> <init>
    11:11:void access$000(com.smarteist.autoimageslider.IndicatorView.animation.type.SwapAnimation,android.animation.ValueAnimator) -> access$000
    11:11:android.animation.Animator createAnimator() -> createAnimator
    30:40:android.animation.ValueAnimator createAnimator() -> createAnimator
    71:74:android.animation.PropertyValuesHolder createColorPropertyHolder(java.lang.String,int,int) -> createColorPropertyHolder
    91:99:boolean hasChanges(int,int) -> hasChanges
    78:87:void onAnimateUpdated(android.animation.ValueAnimator) -> onAnimateUpdated
    11:11:com.smarteist.autoimageslider.IndicatorView.animation.type.BaseAnimation progress(float) -> progress
    45:53:com.smarteist.autoimageslider.IndicatorView.animation.type.SwapAnimation progress(float) -> progress
    58:67:com.smarteist.autoimageslider.IndicatorView.animation.type.SwapAnimation with(int,int) -> with
com.smarteist.autoimageslider.IndicatorView.animation.type.SwapAnimation$1 -> com.smarteist.autoimageslider.IndicatorView.animation.type.SwapAnimation$1:
    33:33:void <init>(com.smarteist.autoimageslider.IndicatorView.animation.type.SwapAnimation) -> <init>
    36:37:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.smarteist.autoimageslider.IndicatorView.animation.type.ThinWormAnimation -> com.smarteist.autoimageslider.IndicatorView.animation.type.ThinWormAnimation:
    14:16:void <init>(com.smarteist.autoimageslider.IndicatorView.animation.controller.ValueController$UpdateListener) -> <init>
    9:9:void access$000(com.smarteist.autoimageslider.IndicatorView.animation.type.ThinWormAnimation,android.animation.ValueAnimator) -> access$000
    64:74:android.animation.ValueAnimator createHeightAnimator(int,int,long) -> createHeightAnimator
    9:9:com.smarteist.autoimageslider.IndicatorView.animation.type.WormAnimation duration(long) -> duration
    20:21:com.smarteist.autoimageslider.IndicatorView.animation.type.ThinWormAnimation duration(long) -> duration
    78:83:void onAnimateUpdated(android.animation.ValueAnimator) -> onAnimateUpdated
    9:9:com.smarteist.autoimageslider.IndicatorView.animation.type.BaseAnimation progress(float) -> progress
    9:9:com.smarteist.autoimageslider.IndicatorView.animation.type.WormAnimation progress(float) -> progress
    87:114:com.smarteist.autoimageslider.IndicatorView.animation.type.ThinWormAnimation progress(float) -> progress
    26:60:com.smarteist.autoimageslider.IndicatorView.animation.type.WormAnimation with(int,int,int,boolean) -> with
com.smarteist.autoimageslider.IndicatorView.animation.type.ThinWormAnimation$1 -> com.smarteist.autoimageslider.IndicatorView.animation.type.ThinWormAnimation$1:
    67:67:void <init>(com.smarteist.autoimageslider.IndicatorView.animation.type.ThinWormAnimation) -> <init>
    70:71:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.smarteist.autoimageslider.IndicatorView.animation.type.WormAnimation -> com.smarteist.autoimageslider.IndicatorView.animation.type.WormAnimation:
    25:27:void <init>(com.smarteist.autoimageslider.IndicatorView.animation.controller.ValueController$UpdateListener) -> <init>
    11:11:void access$000(com.smarteist.autoimageslider.IndicatorView.animation.type.WormAnimation,com.smarteist.autoimageslider.IndicatorView.animation.data.type.WormAnimationValue,android.animation.ValueAnimator,boolean) -> access$000
    11:11:android.animation.Animator createAnimator() -> createAnimator
    32:35:android.animation.AnimatorSet createAnimator() -> createAnimator
    165:180:com.smarteist.autoimageslider.IndicatorView.animation.type.WormAnimation$RectValues createRectValues(boolean) -> createRectValues
    100:110:android.animation.ValueAnimator createWormAnimator(int,int,long,boolean,com.smarteist.autoimageslider.IndicatorView.animation.data.type.WormAnimationValue) -> createWormAnimator
    40:41:com.smarteist.autoimageslider.IndicatorView.animation.type.WormAnimation duration(long) -> duration
    138:154:boolean hasChanges(int,int,int,boolean) -> hasChanges
    114:134:void onAnimateUpdated(com.smarteist.autoimageslider.IndicatorView.animation.data.type.WormAnimationValue,android.animation.ValueAnimator,boolean) -> onAnimateUpdated
    11:11:com.smarteist.autoimageslider.IndicatorView.animation.type.BaseAnimation progress(float) -> progress
    72:90:com.smarteist.autoimageslider.IndicatorView.animation.type.WormAnimation progress(float) -> progress
    45:67:com.smarteist.autoimageslider.IndicatorView.animation.type.WormAnimation with(int,int,int,boolean) -> with
com.smarteist.autoimageslider.IndicatorView.animation.type.WormAnimation$1 -> com.smarteist.autoimageslider.IndicatorView.animation.type.WormAnimation$1:
    103:103:void <init>(com.smarteist.autoimageslider.IndicatorView.animation.type.WormAnimation,com.smarteist.autoimageslider.IndicatorView.animation.data.type.WormAnimationValue,boolean) -> <init>
    106:107:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.smarteist.autoimageslider.IndicatorView.animation.type.WormAnimation$RectValues -> com.smarteist.autoimageslider.IndicatorView.animation.type.WormAnimation$RectValues:
    191:197:void <init>(com.smarteist.autoimageslider.IndicatorView.animation.type.WormAnimation,int,int,int,int) -> <init>
com.smarteist.autoimageslider.IndicatorView.draw.DrawManager -> com.smarteist.autoimageslider.IndicatorView.draw.DrawManager:
    23:28:void <init>() -> <init>
    52:53:void draw(android.graphics.Canvas) -> draw
    32:36:com.smarteist.autoimageslider.IndicatorView.draw.data.Indicator indicator() -> indicator
    60:61:void initAttributes(android.content.Context,android.util.AttributeSet) -> initAttributes
    56:56:android.util.Pair measureViewSize(int,int) -> measureViewSize
    40:41:void setClickListener(com.smarteist.autoimageslider.IndicatorView.draw.controller.DrawController$ClickListener) -> setClickListener
    44:45:void touch(android.view.MotionEvent) -> touch
    48:49:void updateValue(com.smarteist.autoimageslider.IndicatorView.animation.data.Value) -> updateValue
com.smarteist.autoimageslider.IndicatorView.draw.controller.AttributeController -> com.smarteist.autoimageslider.IndicatorView.draw.controller.AttributeController:
    21:23:void <init>(com.smarteist.autoimageslider.IndicatorView.draw.data.Indicator) -> <init>
    134:157:com.smarteist.autoimageslider.IndicatorView.animation.type.IndicatorAnimationType getAnimationType(int) -> getAnimationType
    161:170:com.smarteist.autoimageslider.IndicatorView.draw.data.RtlMode getRtlMode(int) -> getRtlMode
    26:32:void init(android.content.Context,android.util.AttributeSet) -> init
    71:87:void initAnimationAttribute(android.content.res.TypedArray) -> initAnimationAttribute
    63:68:void initColorAttribute(android.content.res.TypedArray) -> initColorAttribute
    35:59:void initCountAttribute(android.content.res.TypedArray) -> initCountAttribute
    90:131:void initSizeAttribute(android.content.res.TypedArray) -> initSizeAttribute
com.smarteist.autoimageslider.IndicatorView.draw.controller.DrawController -> com.smarteist.autoimageslider.IndicatorView.draw.controller.DrawController:
    25:28:void <init>(com.smarteist.autoimageslider.IndicatorView.draw.data.Indicator) -> <init>
    61:68:void draw(android.graphics.Canvas) -> draw
    76:91:void drawIndicator(android.graphics.Canvas,int,int,int) -> drawIndicator
    94:136:void drawWithAnimation(android.graphics.Canvas) -> drawWithAnimation
    52:58:void onIndicatorTouched(float,float) -> onIndicatorTouched
    35:36:void setClickListener(com.smarteist.autoimageslider.IndicatorView.draw.controller.DrawController$ClickListener) -> setClickListener
    39:49:void touch(android.view.MotionEvent) -> touch
    31:32:void updateValue(com.smarteist.autoimageslider.IndicatorView.animation.data.Value) -> updateValue
com.smarteist.autoimageslider.IndicatorView.draw.controller.DrawController$1 -> com.smarteist.autoimageslider.IndicatorView.draw.controller.DrawController$1:
    95:95:void <clinit>() -> <clinit>
com.smarteist.autoimageslider.IndicatorView.draw.controller.MeasureController -> com.smarteist.autoimageslider.IndicatorView.draw.controller.MeasureController:
    10:10:void <init>() -> <init>
    13:102:android.util.Pair measureViewSize(com.smarteist.autoimageslider.IndicatorView.draw.data.Indicator,int,int) -> measureViewSize
com.smarteist.autoimageslider.IndicatorView.draw.data.Indicator -> com.smarteist.autoimageslider.IndicatorView.draw.data.Indicator:
    7:43:void <init>() -> <init>
    170:170:long getAnimationDuration() -> getAnimationDuration
    223:226:com.smarteist.autoimageslider.IndicatorView.animation.type.IndicatorAnimationType getAnimationType() -> getAnimationType
    202:202:int getCount() -> getCount
    50:50:int getHeight() -> getHeight
    194:194:int getLastSelectedPosition() -> getLastSelectedPosition
    211:214:com.smarteist.autoimageslider.IndicatorView.draw.data.Orientation getOrientation() -> getOrientation
    74:74:int getPadding() -> getPadding
    106:106:int getPaddingBottom() -> getPaddingBottom
    82:82:int getPaddingLeft() -> getPaddingLeft
    98:98:int getPaddingRight() -> getPaddingRight
    90:90:int getPaddingTop() -> getPaddingTop
    66:66:int getRadius() -> getRadius
    235:238:com.smarteist.autoimageslider.IndicatorView.draw.data.RtlMode getRtlMode() -> getRtlMode
    122:122:float getScaleFactor() -> getScaleFactor
    138:138:int getSelectedColor() -> getSelectedColor
    178:178:int getSelectedPosition() -> getSelectedPosition
    186:186:int getSelectingPosition() -> getSelectingPosition
    114:114:int getStroke() -> getStroke
    130:130:int getUnselectedColor() -> getUnselectedColor
    246:246:int getViewPagerId() -> getViewPagerId
    58:58:int getWidth() -> getWidth
    154:154:boolean isAutoVisibility() -> isAutoVisibility
    162:162:boolean isDynamicCount() -> isDynamicCount
    146:146:boolean isInteractiveAnimation() -> isInteractiveAnimation
    174:175:void setAnimationDuration(long) -> setAnimationDuration
    230:231:void setAnimationType(com.smarteist.autoimageslider.IndicatorView.animation.type.IndicatorAnimationType) -> setAnimationType
    158:159:void setAutoVisibility(boolean) -> setAutoVisibility
    206:207:void setCount(int) -> setCount
    166:167:void setDynamicCount(boolean) -> setDynamicCount
    54:55:void setHeight(int) -> setHeight
    150:151:void setInteractiveAnimation(boolean) -> setInteractiveAnimation
    198:199:void setLastSelectedPosition(int) -> setLastSelectedPosition
    218:219:void setOrientation(com.smarteist.autoimageslider.IndicatorView.draw.data.Orientation) -> setOrientation
    78:79:void setPadding(int) -> setPadding
    110:111:void setPaddingBottom(int) -> setPaddingBottom
    86:87:void setPaddingLeft(int) -> setPaddingLeft
    102:103:void setPaddingRight(int) -> setPaddingRight
    94:95:void setPaddingTop(int) -> setPaddingTop
    70:71:void setRadius(int) -> setRadius
    242:243:void setRtlMode(com.smarteist.autoimageslider.IndicatorView.draw.data.RtlMode) -> setRtlMode
    126:127:void setScaleFactor(float) -> setScaleFactor
    142:143:void setSelectedColor(int) -> setSelectedColor
    182:183:void setSelectedPosition(int) -> setSelectedPosition
    190:191:void setSelectingPosition(int) -> setSelectingPosition
    118:119:void setStroke(int) -> setStroke
    134:135:void setUnselectedColor(int) -> setUnselectedColor
    250:251:void setViewPagerId(int) -> setViewPagerId
    62:63:void setWidth(int) -> setWidth
com.smarteist.autoimageslider.IndicatorView.draw.data.Orientation -> com.smarteist.autoimageslider.IndicatorView.draw.data.Orientation:
    3:3:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    3:3:com.smarteist.autoimageslider.IndicatorView.draw.data.Orientation valueOf(java.lang.String) -> valueOf
    3:3:com.smarteist.autoimageslider.IndicatorView.draw.data.Orientation[] values() -> values
com.smarteist.autoimageslider.IndicatorView.draw.data.PositionSavedState -> com.smarteist.autoimageslider.IndicatorView.draw.data.PositionSavedState:
    56:56:void <clinit>() -> <clinit>
    7:7:void <init>(android.os.Parcel,com.smarteist.autoimageslider.IndicatorView.draw.data.PositionSavedState$1) -> <init>
    14:15:void <init>(android.os.Parcelable) -> <init>
    18:22:void <init>(android.os.Parcel) -> <init>
    41:41:int getLastSelectedPosition() -> getLastSelectedPosition
    25:25:int getSelectedPosition() -> getSelectedPosition
    33:33:int getSelectingPosition() -> getSelectingPosition
    45:46:void setLastSelectedPosition(int) -> setLastSelectedPosition
    29:30:void setSelectedPosition(int) -> setSelectedPosition
    37:38:void setSelectingPosition(int) -> setSelectingPosition
    50:54:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.smarteist.autoimageslider.IndicatorView.draw.data.PositionSavedState$1 -> com.smarteist.autoimageslider.IndicatorView.draw.data.PositionSavedState$1:
    56:56:void <init>() -> <init>
    56:56:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    58:58:com.smarteist.autoimageslider.IndicatorView.draw.data.PositionSavedState createFromParcel(android.os.Parcel) -> createFromParcel
    56:56:java.lang.Object[] newArray(int) -> newArray
    62:62:com.smarteist.autoimageslider.IndicatorView.draw.data.PositionSavedState[] newArray(int) -> newArray
com.smarteist.autoimageslider.IndicatorView.draw.data.RtlMode -> com.smarteist.autoimageslider.IndicatorView.draw.data.RtlMode:
    3:3:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    3:3:com.smarteist.autoimageslider.IndicatorView.draw.data.RtlMode valueOf(java.lang.String) -> valueOf
    3:3:com.smarteist.autoimageslider.IndicatorView.draw.data.RtlMode[] values() -> values
com.smarteist.autoimageslider.IndicatorView.draw.drawer.Drawer -> com.smarteist.autoimageslider.IndicatorView.draw.drawer.Drawer:
    27:42:void <init>(com.smarteist.autoimageslider.IndicatorView.draw.data.Indicator) -> <init>
    51:54:void drawBasic(android.graphics.Canvas,boolean) -> drawBasic
    57:60:void drawColor(android.graphics.Canvas,com.smarteist.autoimageslider.IndicatorView.animation.data.Value) -> drawColor
    93:96:void drawDrop(android.graphics.Canvas,com.smarteist.autoimageslider.IndicatorView.animation.data.Value) -> drawDrop
    81:84:void drawFill(android.graphics.Canvas,com.smarteist.autoimageslider.IndicatorView.animation.data.Value) -> drawFill
    63:66:void drawScale(android.graphics.Canvas,com.smarteist.autoimageslider.IndicatorView.animation.data.Value) -> drawScale
    105:108:void drawScaleDown(android.graphics.Canvas,com.smarteist.autoimageslider.IndicatorView.animation.data.Value) -> drawScaleDown
    75:78:void drawSlide(android.graphics.Canvas,com.smarteist.autoimageslider.IndicatorView.animation.data.Value) -> drawSlide
    99:102:void drawSwap(android.graphics.Canvas,com.smarteist.autoimageslider.IndicatorView.animation.data.Value) -> drawSwap
    87:90:void drawThinWorm(android.graphics.Canvas,com.smarteist.autoimageslider.IndicatorView.animation.data.Value) -> drawThinWorm
    69:72:void drawWorm(android.graphics.Canvas,com.smarteist.autoimageslider.IndicatorView.animation.data.Value) -> drawWorm
    45:48:void setup(int,int,int) -> setup
com.smarteist.autoimageslider.IndicatorView.draw.drawer.type.BaseDrawer -> com.smarteist.autoimageslider.IndicatorView.draw.drawer.type.BaseDrawer:
    12:15:void <init>(android.graphics.Paint,com.smarteist.autoimageslider.IndicatorView.draw.data.Indicator) -> <init>
com.smarteist.autoimageslider.IndicatorView.draw.drawer.type.BasicDrawer -> com.smarteist.autoimageslider.IndicatorView.draw.drawer.type.BasicDrawer:
    14:20:void <init>(android.graphics.Paint,com.smarteist.autoimageslider.IndicatorView.draw.data.Indicator) -> <init>
    29:60:void draw(android.graphics.Canvas,int,boolean,int,int) -> draw
com.smarteist.autoimageslider.IndicatorView.draw.drawer.type.ColorDrawer -> com.smarteist.autoimageslider.IndicatorView.draw.drawer.type.ColorDrawer:
    13:14:void <init>(android.graphics.Paint,com.smarteist.autoimageslider.IndicatorView.draw.data.Indicator) -> <init>
    22:53:void draw(android.graphics.Canvas,com.smarteist.autoimageslider.IndicatorView.animation.data.Value,int,int,int) -> draw
com.smarteist.autoimageslider.IndicatorView.draw.drawer.type.DropDrawer -> com.smarteist.autoimageslider.IndicatorView.draw.drawer.type.DropDrawer:
    14:15:void <init>(android.graphics.Paint,com.smarteist.autoimageslider.IndicatorView.draw.data.Indicator) -> <init>
    23:41:void draw(android.graphics.Canvas,com.smarteist.autoimageslider.IndicatorView.animation.data.Value,int,int) -> draw
com.smarteist.autoimageslider.IndicatorView.draw.drawer.type.FillDrawer -> com.smarteist.autoimageslider.IndicatorView.draw.drawer.type.FillDrawer:
    15:20:void <init>(android.graphics.Paint,com.smarteist.autoimageslider.IndicatorView.draw.data.Indicator) -> <init>
    29:73:void draw(android.graphics.Canvas,com.smarteist.autoimageslider.IndicatorView.animation.data.Value,int,int,int) -> draw
com.smarteist.autoimageslider.IndicatorView.draw.drawer.type.ScaleDownDrawer -> com.smarteist.autoimageslider.IndicatorView.draw.drawer.type.ScaleDownDrawer:
    13:14:void <init>(android.graphics.Paint,com.smarteist.autoimageslider.IndicatorView.draw.data.Indicator) -> <init>
    23:58:void draw(android.graphics.Canvas,com.smarteist.autoimageslider.IndicatorView.animation.data.Value,int,int,int) -> draw
com.smarteist.autoimageslider.IndicatorView.draw.drawer.type.ScaleDrawer -> com.smarteist.autoimageslider.IndicatorView.draw.drawer.type.ScaleDrawer:
    13:14:void <init>(android.graphics.Paint,com.smarteist.autoimageslider.IndicatorView.draw.data.Indicator) -> <init>
    23:58:void draw(android.graphics.Canvas,com.smarteist.autoimageslider.IndicatorView.animation.data.Value,int,int,int) -> draw
com.smarteist.autoimageslider.IndicatorView.draw.drawer.type.SlideDrawer -> com.smarteist.autoimageslider.IndicatorView.draw.drawer.type.SlideDrawer:
    14:15:void <init>(android.graphics.Paint,com.smarteist.autoimageslider.IndicatorView.draw.data.Indicator) -> <init>
    23:42:void draw(android.graphics.Canvas,com.smarteist.autoimageslider.IndicatorView.animation.data.Value,int,int) -> draw
com.smarteist.autoimageslider.IndicatorView.draw.drawer.type.SwapDrawer -> com.smarteist.autoimageslider.IndicatorView.draw.drawer.type.SwapDrawer:
    14:15:void <init>(android.graphics.Paint,com.smarteist.autoimageslider.IndicatorView.draw.data.Indicator) -> <init>
    24:67:void draw(android.graphics.Canvas,com.smarteist.autoimageslider.IndicatorView.animation.data.Value,int,int,int) -> draw
com.smarteist.autoimageslider.IndicatorView.draw.drawer.type.ThinWormDrawer -> com.smarteist.autoimageslider.IndicatorView.draw.drawer.type.ThinWormDrawer:
    14:15:void <init>(android.graphics.Paint,com.smarteist.autoimageslider.IndicatorView.draw.data.Indicator) -> <init>
    23:54:void draw(android.graphics.Canvas,com.smarteist.autoimageslider.IndicatorView.animation.data.Value,int,int) -> draw
com.smarteist.autoimageslider.IndicatorView.draw.drawer.type.WormDrawer -> com.smarteist.autoimageslider.IndicatorView.draw.drawer.type.WormDrawer:
    17:19:void <init>(android.graphics.Paint,com.smarteist.autoimageslider.IndicatorView.draw.data.Indicator) -> <init>
    27:57:void draw(android.graphics.Canvas,com.smarteist.autoimageslider.IndicatorView.animation.data.Value,int,int) -> draw
com.smarteist.autoimageslider.IndicatorView.utils.CoordinatesUtils -> com.smarteist.autoimageslider.IndicatorView.utils.CoordinatesUtils:
    14:21:int getCoordinate(com.smarteist.autoimageslider.IndicatorView.draw.data.Indicator,int) -> getCoordinate
    79:102:int getFitPosition(com.smarteist.autoimageslider.IndicatorView.draw.data.Indicator,float,float) -> getFitPosition
    106:126:int getHorizontalCoordinate(com.smarteist.autoimageslider.IndicatorView.draw.data.Indicator,int) -> getHorizontalCoordinate
    60:75:int getPosition(com.smarteist.autoimageslider.IndicatorView.draw.data.Indicator,float,float) -> getPosition
    143:191:android.util.Pair getProgress(com.smarteist.autoimageslider.IndicatorView.draw.data.Indicator,int,float,boolean) -> getProgress
    130:139:int getVerticalCoordinate(com.smarteist.autoimageslider.IndicatorView.draw.data.Indicator) -> getVerticalCoordinate
    27:39:int getXCoordinate(com.smarteist.autoimageslider.IndicatorView.draw.data.Indicator,int) -> getXCoordinate
    43:55:int getYCoordinate(com.smarteist.autoimageslider.IndicatorView.draw.data.Indicator,int) -> getYCoordinate
com.smarteist.autoimageslider.IndicatorView.utils.DensityUtils -> com.smarteist.autoimageslider.IndicatorView.utils.DensityUtils:
    9:9:int dpToPx(int) -> dpToPx
com.smarteist.autoimageslider.IndicatorView.utils.IdUtils -> com.smarteist.autoimageslider.IndicatorView.utils.IdUtils:
    10:10:void <clinit>() -> <clinit>
    13:16:int generateViewId() -> generateViewId
com.smarteist.autoimageslider.InfiniteAdapter.InfinitePagerAdapter -> com.smarteist.autoimageslider.InfiniteAdapter.InfinitePagerAdapter:
    25:27:void <init>(com.smarteist.autoimageslider.SliderViewAdapter) -> <init>
    83:92:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    104:105:void finishUpdate(android.view.ViewGroup) -> finishUpdate
    35:40:int getCount() -> getCount
    149:149:int getItemPosition(java.lang.Object) -> getItemPosition
    60:63:int getMiddlePosition(int) -> getMiddlePosition
    129:129:float getPageWidth(int) -> getPageWidth
    30:30:androidx.viewpager.widget.PagerAdapter getRealAdapter() -> getRealAdapter
    48:50:int getRealCount() -> getRealCount
    153:156:int getRealPosition(int) -> getRealPosition
    70:77:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    109:109:boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    144:145:void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    114:115:void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    119:119:android.os.Parcelable saveState() -> saveState
    134:135:void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    96:97:void startUpdate(android.view.ViewGroup) -> startUpdate
    139:140:void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
com.smarteist.autoimageslider.SliderAnimations -> com.smarteist.autoimageslider.SliderAnimations:
    3:25:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    3:3:com.smarteist.autoimageslider.SliderAnimations valueOf(java.lang.String) -> valueOf
    3:3:com.smarteist.autoimageslider.SliderAnimations[] values() -> values
com.smarteist.autoimageslider.SliderPager -> com.smarteist.autoimageslider.SliderPager:
    72:201:void <clinit>() -> <clinit>
    105:343:void <init>(android.content.Context) -> <init>
    59:59:android.view.animation.Interpolator access$000() -> access$000
    2914:2949:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    996:1005:com.smarteist.autoimageslider.SliderPager$ItemInfo addNewItem(int,int) -> addNewItem
    552:556:void addOnAdapterChangeListener(com.smarteist.autoimageslider.SliderPager$OnAdapterChangeListener) -> addOnAdapterChangeListener
    697:701:void addOnPageChangeListener(com.smarteist.autoimageslider.SliderPager$OnPageChangeListener) -> addOnPageChangeListener
    2959:2968:void addTouchables(java.util.ArrayList) -> addTouchables
    1479:1502:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    2802:2864:boolean arrowScroll(int) -> arrowScroll
    1304:1387:void calculatePageOffsets(com.smarteist.autoimageslider.SliderPager$ItemInfo,int,com.smarteist.autoimageslider.SliderPager$ItemInfo) -> calculatePageOffsets
    2729:2747:boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    2702:2713:boolean canScrollHorizontally(int) -> canScrollHorizontally
    3039:3039:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1981:2015:void completeScroll(boolean) -> completeScroll
    1800:1822:void computeScroll() -> computeScroll
    1011:1077:void dataSetChanged() -> dataSetChanged
    2418:2433:int determineTargetPage(int,float,int,int) -> determineTargetPage
    2753:2753:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    1930:1944:void dispatchOnPageScrolled(int,float,int) -> dispatchOnPageScrolled
    1964:1978:void dispatchOnScrollStateChanged(int) -> dispatchOnScrollStateChanged
    3007:3024:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    915:917:float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    2438:2476:void draw(android.graphics.Canvas) -> draw
    903:908:void drawableStateChanged() -> drawableStateChanged
    2022:2028:void enableLayers(boolean) -> enableLayers
    2669:2676:void endDrag() -> endDrag
    2765:2791:boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    3029:3029:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    3034:3034:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    3044:3044:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    543:543:androidx.viewpager.widget.PagerAdapter getAdapter() -> getAdapter
    776:781:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    2868:2890:android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> getChildRectInPagerCoordinates
    571:571:int getClientWidth() -> getClientWidth
    601:604:int getCurrentItem() -> getCurrentItem
    804:804:int getOffscreenPageLimit() -> getOffscreenPageLimit
    860:860:int getPageMargin() -> getPageMargin
    1530:1536:com.smarteist.autoimageslider.SliderPager$ItemInfo infoForAnyChild(android.view.View) -> infoForAnyChild
    1519:1525:com.smarteist.autoimageslider.SliderPager$ItemInfo infoForChild(android.view.View) -> infoForChild
    2375:2413:com.smarteist.autoimageslider.SliderPager$ItemInfo infoForCurrentScrollPosition() -> infoForCurrentScrollPosition
    1540:1546:com.smarteist.autoimageslider.SliderPager$ItemInfo infoForPosition(int) -> infoForPosition
    351:425:void initSliderPager() -> initSliderPager
    1505:1506:boolean isDecorView(android.view.View) -> isDecorView
    2018:2018:boolean isGutterDrag(float,float) -> isGutterDrag
    1551:1553:void onAttachedToWindow() -> onAttachedToWindow
    429:435:void onDetachedFromWindow() -> onDetachedFromWindow
    2480:2520:void onDraw(android.graphics.Canvas) -> onDraw
    2038:2172:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1689:1796:void onLayout(boolean,int,int,int,int) -> onLayout
    1562:1649:void onMeasure(int,int) -> onMeasure
    1872:1927:void onPageScrolled(int,float,int) -> onPageScrolled
    2979:3000:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    1459:1475:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1448:1454:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    2654:2666:void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    1653:1659:void onSizeChanged(int,int,int,int) -> onSizeChanged
    2178:2301:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    2894:2898:boolean pageLeft() -> pageLeft
    2902:2906:boolean pageRight() -> pageRight
    1825:1854:boolean pageScrolled(int) -> pageScrolled
    2322:2367:boolean performDrag(float) -> performDrag
    1080:1081:void populate() -> populate
    1084:1267:void populate(int) -> populate
    1662:1685:void recomputeScrollPosition(int,int,int,int) -> recomputeScrollPosition
    526:534:void removeNonDecorViews() -> removeNonDecorViews
    710:713:void removeOnPageChangeListener(com.smarteist.autoimageslider.SliderPager$OnPageChangeListener) -> removeOnPageChangeListener
    1511:1516:void removeView(android.view.View) -> removeView
    2315:2319:void requestParentDisallowInterceptTouchEvent(boolean) -> requestParentDisallowInterceptTouchEvent
    2306:2311:boolean resetTouch() -> resetTouch
    651:671:void scrollToItem(int,boolean,int,boolean) -> scrollToItem
    456:507:void setAdapter(androidx.viewpager.widget.PagerAdapter) -> setAdapter
    517:523:void setAdapterViewPagerObserver(com.smarteist.autoimageslider.SliderPager$PagerObserver) -> setAdapterViewPagerObserver
    582:584:void setCurrentItem(int) -> setCurrentItem
    593:598:void setCurrentItem(int,boolean) -> setCurrentItem
    608:609:void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    612:647:void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    825:834:void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    683:684:void setOnPageChangeListener(com.smarteist.autoimageslider.SliderPager$OnPageChangeListener) -> setOnPageChangeListener
    845:852:void setPageMargin(int) -> setPageMargin
    869:873:void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    881:882:void setPageMarginDrawable(int) -> setPageMarginDrawable
    743:744:void setPageTransformer(boolean,com.smarteist.autoimageslider.SliderPager$PageTransformer) -> setPageTransformer
    761:772:void setPageTransformer(boolean,com.smarteist.autoimageslider.SliderPager$PageTransformer,int) -> setPageTransformer
    890:895:void setScrollDuration(int,android.view.animation.Interpolator) -> setScrollDuration
    898:899:void setScrollDuration(int) -> setScrollDuration
    438:448:void setScrollState(int) -> setScrollState
    2679:2691:void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    938:993:void smoothScrollTo(int,int,int) -> smoothScrollTo
    1270:1283:void sortChildDrawingOrder() -> sortChildDrawingOrder
    1286:1300:void triggerOnPageChangeEvent(int) -> triggerOnPageChangeEvent
    886:886:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
com.smarteist.autoimageslider.SliderPager$1 -> com.smarteist.autoimageslider.SliderPager$1:
    90:90:void <init>() -> <init>
    90:90:int compare(java.lang.Object,java.lang.Object) -> compare
    93:93:int compare(com.smarteist.autoimageslider.SliderPager$ItemInfo,com.smarteist.autoimageslider.SliderPager$ItemInfo) -> compare
com.smarteist.autoimageslider.SliderPager$2 -> com.smarteist.autoimageslider.SliderPager$2:
    97:97:void <init>() -> <init>
    100:101:float getInterpolation(float) -> getInterpolation
com.smarteist.autoimageslider.SliderPager$3 -> com.smarteist.autoimageslider.SliderPager$3:
    219:219:void <init>(com.smarteist.autoimageslider.SliderPager) -> <init>
    222:224:void run() -> run
com.smarteist.autoimageslider.SliderPager$4 -> com.smarteist.autoimageslider.SliderPager$4:
    378:379:void <init>(com.smarteist.autoimageslider.SliderPager) -> <init>
    385:421:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
com.smarteist.autoimageslider.SliderPager$ItemInfo -> com.smarteist.autoimageslider.SliderPager$ItemInfo:
    82:82:void <init>() -> <init>
com.smarteist.autoimageslider.SliderPager$LayoutParams -> com.smarteist.autoimageslider.SliderPager$LayoutParams:
    3159:3179:void <init>() -> <init>
    3159:3187:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
com.smarteist.autoimageslider.SliderPager$MyAccessibilityDelegate -> com.smarteist.autoimageslider.SliderPager$MyAccessibilityDelegate:
    3047:3047:void <init>(com.smarteist.autoimageslider.SliderPager) -> <init>
    3099:3099:boolean canScroll() -> canScroll
    3051:3059:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    3063:3072:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    3076:3095:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
com.smarteist.autoimageslider.SliderPager$OwnScroller -> com.smarteist.autoimageslider.SliderPager$OwnScroller:
    3122:3125:void <init>(com.smarteist.autoimageslider.SliderPager,android.content.Context,int) -> <init>
    3127:3130:void <init>(com.smarteist.autoimageslider.SliderPager,android.content.Context,int,android.view.animation.Interpolator) -> <init>
    3134:3135:void startScroll(int,int,int,int,int) -> startScroll
com.smarteist.autoimageslider.SliderPager$PagerObserver -> com.smarteist.autoimageslider.SliderPager$PagerObserver:
    3104:3105:void <init>(com.smarteist.autoimageslider.SliderPager) -> <init>
    3109:3110:void onChanged() -> onChanged
    3114:3115:void onInvalidated() -> onInvalidated
com.smarteist.autoimageslider.SliderPager$SavedState -> com.smarteist.autoimageslider.SliderPager$SavedState:
    1418:1418:void <clinit>() -> <clinit>
    1401:1402:void <init>(android.os.Parcelable) -> <init>
    1436:1443:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1413:1414:java.lang.String toString() -> toString
    1406:1409:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.smarteist.autoimageslider.SliderPager$SavedState$1 -> com.smarteist.autoimageslider.SliderPager$SavedState$1:
    1418:1418:void <init>() -> <init>
    1418:1418:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1418:1418:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1421:1421:com.smarteist.autoimageslider.SliderPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1426:1426:com.smarteist.autoimageslider.SliderPager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1418:1418:java.lang.Object[] newArray(int) -> newArray
    1431:1431:com.smarteist.autoimageslider.SliderPager$SavedState[] newArray(int) -> newArray
com.smarteist.autoimageslider.SliderPager$ViewPositionComparator -> com.smarteist.autoimageslider.SliderPager$ViewPositionComparator:
    3190:3190:void <init>() -> <init>
    3190:3190:int compare(java.lang.Object,java.lang.Object) -> compare
    3193:3198:int compare(android.view.View,android.view.View) -> compare
com.smarteist.autoimageslider.SliderView -> com.smarteist.autoimageslider.SliderView:
    63:87:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    528:532:int getAdapterItemsCount() -> getAdapterItemsCount
    573:573:int getAutoCycleDirection() -> getAutoCycleDirection
    438:441:int getCurrentPagePosition() -> getCurrentPagePosition
    580:580:int getIndicatorRadius() -> getIndicatorRadius
    623:623:int getIndicatorSelectedColor() -> getIndicatorSelectedColor
    634:634:int getIndicatorUnselectedColor() -> getIndicatorUnselectedColor
    446:446:com.smarteist.autoimageslider.IndicatorView.PageIndicatorView getPagerIndicator() -> getPagerIndicator
    298:298:int getScrollTimeInMillis() -> getScrollTimeInMillis
    287:287:int getScrollTimeInSec() -> getScrollTimeInSec
    260:260:androidx.viewpager.widget.PagerAdapter getSliderAdapter() -> getSliderAdapter
    253:253:com.smarteist.autoimageslider.SliderPager getSliderPager() -> getSliderPager
    165:177:void initIndicator() -> initIndicator
    267:267:boolean isAutoCycle() -> isAutoCycle
    731:731:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    719:719:void onPageScrolled(int,float,int) -> onPageScrolled
    723:726:void onPageSelected(int) -> onPageSelected
    383:396:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    646:653:void run() -> run
    271:272:void setAutoCycle(boolean) -> setAutoCycle
    563:564:void setAutoCycleDirection(int) -> setAutoCycleDirection
    210:211:void setCurrentPageListener(com.smarteist.autoimageslider.SliderView$OnSliderPageListener) -> setCurrentPageListener
    430:431:void setCurrentPagePosition(int) -> setCurrentPagePosition
    404:405:void setCustomSliderTransformAnimation(com.smarteist.autoimageslider.SliderPager$PageTransformer) -> setCustomSliderTransformAnimation
    509:510:void setIndicatorAnimation(com.smarteist.autoimageslider.IndicatorView.animation.type.IndicatorAnimationType) -> setIndicatorAnimation
    465:466:void setIndicatorAnimationDuration(long) -> setIndicatorAnimationDuration
    455:459:void setIndicatorEnabled(boolean) -> setIndicatorEnabled
    472:475:void setIndicatorGravity(int) -> setIndicatorGravity
    601:604:void setIndicatorMargin(int) -> setIndicatorMargin
    607:610:void setIndicatorMarginCustom(int,int,int,int) -> setIndicatorMarginCustom
    493:496:void setIndicatorMargins(int,int,int,int) -> setIndicatorMargins
    502:503:void setIndicatorOrientation(com.smarteist.autoimageslider.IndicatorView.draw.data.Orientation) -> setIndicatorOrientation
    481:482:void setIndicatorPadding(int) -> setIndicatorPadding
    594:595:void setIndicatorRadius(int) -> setIndicatorRadius
    587:588:void setIndicatorRtlMode(com.smarteist.autoimageslider.IndicatorView.draw.data.RtlMode) -> setIndicatorRtlMode
    616:617:void setIndicatorSelectedColor(int) -> setIndicatorSelectedColor
    627:628:void setIndicatorUnselectedColor(int) -> setIndicatorUnselectedColor
    516:521:void setIndicatorVisibility(boolean) -> setIndicatorVisibility
    244:247:void setInfiniteAdapterEnabled(boolean) -> setInfiniteAdapterEnabled
    280:281:void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    203:204:void setOnIndicatorClickListener(com.smarteist.autoimageslider.IndicatorView.draw.controller.DrawController$ClickListener) -> setOnIndicatorClickListener
    450:452:void setPageIndicatorView(com.smarteist.autoimageslider.IndicatorView.PageIndicatorView) -> setPageIndicatorView
    302:303:void setScrollTimeInMillis(int) -> setScrollTimeInMillis
    294:295:void setScrollTimeInSec(int) -> setScrollTimeInSec
    218:226:void setSliderAdapter(com.smarteist.autoimageslider.SliderViewAdapter) -> setSliderAdapter
    233:240:void setSliderAdapter(com.smarteist.autoimageslider.SliderViewAdapter,boolean) -> setSliderAdapter
    411:412:void setSliderAnimationDuration(int) -> setSliderAnimationDuration
    310:379:void setSliderTransformAnimation(com.smarteist.autoimageslider.SliderAnimations) -> setSliderTransformAnimation
    103:158:void setUpAttributes(android.content.Context,android.util.AttributeSet) -> setUpAttributes
    187:197:void setupSlideView(android.content.Context) -> setupSlideView
    657:678:void slideToNextPosition() -> slideToNextPosition
    541:545:void startAutoCycle() -> startAutoCycle
    552:553:void stopAutoCycle() -> stopAutoCycle
com.smarteist.autoimageslider.SliderView$1 -> com.smarteist.autoimageslider.SliderView$1:
    388:388:void <init>(com.smarteist.autoimageslider.SliderView) -> <init>
    391:392:void run() -> run
com.smarteist.autoimageslider.SliderView$2 -> com.smarteist.autoimageslider.SliderView$2:
    310:310:void <clinit>() -> <clinit>
com.smarteist.autoimageslider.SliderViewAdapter -> com.smarteist.autoimageslider.SliderViewAdapter:
    13:26:void <init>() -> <init>
    83:84:void dataSetChangedListener(com.smarteist.autoimageslider.SliderViewAdapter$DataSetListener) -> dataSetChangedListener
    44:46:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    55:55:int getItemPosition(java.lang.Object) -> getItemPosition
    31:39:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    50:50:boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
com.smarteist.autoimageslider.SliderViewAdapter$ViewHolder -> com.smarteist.autoimageslider.SliderViewAdapter$ViewHolder:
    21:23:void <init>(android.view.View) -> <init>
com.smarteist.autoimageslider.Transformations.AntiClockSpinTransformation -> com.smarteist.autoimageslider.Transformations.AntiClockSpinTransformation:
    7:7:void <init>() -> <init>
    11:44:void transformPage(android.view.View,float) -> transformPage
com.smarteist.autoimageslider.Transformations.Clock_SpinTransformation -> com.smarteist.autoimageslider.Transformations.Clock_SpinTransformation:
    7:7:void <init>() -> <init>
    11:44:void transformPage(android.view.View,float) -> transformPage
com.smarteist.autoimageslider.Transformations.CubeInDepthTransformation -> com.smarteist.autoimageslider.Transformations.CubeInDepthTransformation:
    6:6:void <init>() -> <init>
    9:40:void transformPage(android.view.View,float) -> transformPage
com.smarteist.autoimageslider.Transformations.CubeInRotationTransformation -> com.smarteist.autoimageslider.Transformations.CubeInRotationTransformation:
    7:7:void <init>() -> <init>
    11:38:void transformPage(android.view.View,float) -> transformPage
com.smarteist.autoimageslider.Transformations.CubeInScalingTransformation -> com.smarteist.autoimageslider.Transformations.CubeInScalingTransformation:
    7:7:void <init>() -> <init>
    10:47:void transformPage(android.view.View,float) -> transformPage
com.smarteist.autoimageslider.Transformations.CubeOutDepthTransformation -> com.smarteist.autoimageslider.Transformations.CubeOutDepthTransformation:
    6:6:void <init>() -> <init>
    10:43:void transformPage(android.view.View,float) -> transformPage
com.smarteist.autoimageslider.Transformations.CubeOutRotationTransformation -> com.smarteist.autoimageslider.Transformations.CubeOutRotationTransformation:
    6:6:void <init>() -> <init>
    10:32:void transformPage(android.view.View,float) -> transformPage
com.smarteist.autoimageslider.Transformations.CubeOutScalingTransformation -> com.smarteist.autoimageslider.Transformations.CubeOutScalingTransformation:
    6:6:void <init>() -> <init>
    10:43:void transformPage(android.view.View,float) -> transformPage
com.smarteist.autoimageslider.Transformations.DepthTransformation -> com.smarteist.autoimageslider.Transformations.DepthTransformation:
    6:6:void <init>() -> <init>
    10:36:void transformPage(android.view.View,float) -> transformPage
com.smarteist.autoimageslider.Transformations.FadeTransformation -> com.smarteist.autoimageslider.Transformations.FadeTransformation:
    6:6:void <init>() -> <init>
    10:31:void transformPage(android.view.View,float) -> transformPage
com.smarteist.autoimageslider.Transformations.FanTransformation -> com.smarteist.autoimageslider.Transformations.FanTransformation:
    6:6:void <init>() -> <init>
    10:36:void transformPage(android.view.View,float) -> transformPage
com.smarteist.autoimageslider.Transformations.FidgetSpinTransformation -> com.smarteist.autoimageslider.Transformations.FidgetSpinTransformation:
    6:6:void <init>() -> <init>
    10:43:void transformPage(android.view.View,float) -> transformPage
com.smarteist.autoimageslider.Transformations.GateTransformation -> com.smarteist.autoimageslider.Transformations.GateTransformation:
    7:9:void <init>() -> <init>
    13:40:void transformPage(android.view.View,float) -> transformPage
com.smarteist.autoimageslider.Transformations.HingeTransformation -> com.smarteist.autoimageslider.Transformations.HingeTransformation:
    6:6:void <init>() -> <init>
    10:37:void transformPage(android.view.View,float) -> transformPage
com.smarteist.autoimageslider.Transformations.HorizontalFlipTransformation -> com.smarteist.autoimageslider.Transformations.HorizontalFlipTransformation:
    7:7:void <init>() -> <init>
    11:47:void transformPage(android.view.View,float) -> transformPage
com.smarteist.autoimageslider.Transformations.PopTransformation -> com.smarteist.autoimageslider.Transformations.PopTransformation:
    6:6:void <init>() -> <init>
    10:21:void transformPage(android.view.View,float) -> transformPage
com.smarteist.autoimageslider.Transformations.SimpleTransformation -> com.smarteist.autoimageslider.Transformations.SimpleTransformation:
    6:6:void <init>() -> <init>
    10:10:void transformPage(android.view.View,float) -> transformPage
com.smarteist.autoimageslider.Transformations.SpinnerTransformation -> com.smarteist.autoimageslider.Transformations.SpinnerTransformation:
    6:6:void <init>() -> <init>
    10:43:void transformPage(android.view.View,float) -> transformPage
com.smarteist.autoimageslider.Transformations.TossTransformation -> com.smarteist.autoimageslider.Transformations.TossTransformation:
    6:6:void <init>() -> <init>
    10:49:void transformPage(android.view.View,float) -> transformPage
com.smarteist.autoimageslider.Transformations.VerticalFlipTransformation -> com.smarteist.autoimageslider.Transformations.VerticalFlipTransformation:
    6:6:void <init>() -> <init>
    10:43:void transformPage(android.view.View,float) -> transformPage
com.smarteist.autoimageslider.Transformations.VerticalShutTransformation -> com.smarteist.autoimageslider.Transformations.VerticalShutTransformation:
    6:6:void <init>() -> <init>
    10:44:void transformPage(android.view.View,float) -> transformPage
com.smarteist.autoimageslider.Transformations.ZoomOutTransformation -> com.smarteist.autoimageslider.Transformations.ZoomOutTransformation:
    6:6:void <init>() -> <init>
    14:33:void transformPage(android.view.View,float) -> transformPage
im.delight.android.webview.AdvancedWebView -> im.delight.android.webview.AdvancedWebView:
    79:79:void <clinit>() -> <clinit>
    83:105:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1221:1222:java.lang.String decodeBase64(java.lang.String) -> decodeBase64
    1189:1217:java.lang.String getFileUploadPromptLabel() -> getFileUploadPromptLabel
    1175:1178:java.lang.String getLanguageIso3() -> getLanguageIso3
    353:353:java.util.List getPermittedHostnames() -> getPermittedHostnames
    1170:1170:boolean hasError() -> hasError
    427:1052:void init(android.content.Context) -> init
    1115:1155:boolean isPermittedUrl(java.lang.String) -> isPermittedUrl
    1056:1064:void loadUrl(java.lang.String,java.util.Map) -> loadUrl
    1068:1074:void loadUrl(java.lang.String) -> loadUrl
    243:247:void onPause() -> onPause
    234:238:void onResume() -> onResume
    1227:1254:void openFileInput(android.webkit.ValueCallback,android.webkit.ValueCallback,boolean) -> openFileInput
    376:380:void setAllowAccessFromFileUrls(android.webkit.WebSettings,boolean) -> setAllowAccessFromFileUrls
    384:385:void setCookiesEnabled(boolean) -> setCookiesEnabled
    407:422:void setDesktopMode(boolean) -> setDesktopMode
    172:183:void setGeolocationDatabasePath() -> setGeolocationDatabasePath
    159:166:void setGeolocationEnabled(boolean) -> setGeolocationEnabled
    1166:1167:void setLastError() -> setLastError
    113:114:void setListener(android.app.Activity,im.delight.android.webview.AdvancedWebView$Listener) -> setListener
    117:125:void setListener(android.app.Activity,im.delight.android.webview.AdvancedWebView$Listener,int) -> setListener
    143:145:void setListener(im.delight.android.webview.AdvancedWebView$Listener,int) -> setListener
    395:396:void setMixedContentAllowed(boolean) -> setMixedContentAllowed
    401:404:void setMixedContentAllowed(android.webkit.WebSettings,boolean) -> setMixedContentAllowed
    389:392:void setThirdPartyCookiesEnabled(boolean) -> setThirdPartyCookiesEnabled
    186:187:void setUploadableFileTypes(java.lang.String) -> setUploadableFileTypes
    154:155:void setWebChromeClient(android.webkit.WebChromeClient) -> setWebChromeClient
    149:150:void setWebViewClient(android.webkit.WebViewClient) -> setWebViewClient
im.delight.android.webview.AdvancedWebView$1 -> im.delight.android.webview.AdvancedWebView$1:
    466:466:void <init>(im.delight.android.webview.AdvancedWebView) -> <init>
    631:637:void doUpdateVisitedHistory(android.webkit.WebView,java.lang.String,boolean) -> doUpdateVisitedHistory
    621:627:void onFormResubmission(android.webkit.WebView,android.os.Message,android.os.Message) -> onFormResubmission
    579:585:void onLoadResource(android.webkit.WebView,java.lang.String) -> onLoadResource
    483:492:void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    470:479:void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    652:660:void onReceivedClientCertRequest(android.webkit.WebView,android.webkit.ClientCertRequest) -> onReceivedClientCertRequest
    496:505:void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    664:670:void onReceivedHttpAuthRequest(android.webkit.WebView,android.webkit.HttpAuthHandler,java.lang.String,java.lang.String) -> onReceivedHttpAuthRequest
    718:726:void onReceivedLoginRequest(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String) -> onReceivedLoginRequest
    641:647:void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
    707:713:void onScaleChanged(android.webkit.WebView,float,float) -> onScaleChanged
    684:690:void onUnhandledKeyEvent(android.webkit.WebView,android.view.KeyEvent) -> onUnhandledKeyEvent
    590:595:android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,java.lang.String) -> shouldInterceptRequest
    606:611:android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,android.webkit.WebResourceRequest) -> shouldInterceptRequest
    674:678:boolean shouldOverrideKeyEvent(android.webkit.WebView,android.view.KeyEvent) -> shouldOverrideKeyEvent
    509:574:boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
im.delight.android.webview.AdvancedWebView$2 -> im.delight.android.webview.AdvancedWebView$2:
    730:730:void <init>(im.delight.android.webview.AdvancedWebView) -> <init>
    990:994:android.graphics.Bitmap getDefaultVideoPoster() -> getDefaultVideoPoster
    1000:1004:android.view.View getVideoLoadingProgressView() -> getVideoLoadingProgressView
    1010:1016:void getVisitedHistory(android.webkit.ValueCallback) -> getVisitedHistory
    859:865:void onCloseWindow(android.webkit.WebView) -> onCloseWindow
    970:976:void onConsoleMessage(java.lang.String,int,java.lang.String) -> onConsoleMessage
    980:984:boolean onConsoleMessage(android.webkit.ConsoleMessage) -> onConsoleMessage
    839:843:boolean onCreateWindow(android.webkit.WebView,boolean,boolean,android.os.Message) -> onCreateWindow
    1020:1026:void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage$QuotaUpdater) -> onExceededDatabaseQuota
    924:930:void onGeolocationPermissionsHidePrompt() -> onGeolocationPermissionsHidePrompt
    909:920:void onGeolocationPermissionsShowPrompt(java.lang.String,android.webkit.GeolocationPermissions$Callback) -> onGeolocationPermissionsShowPrompt
    829:835:void onHideCustomView() -> onHideCustomView
    869:873:boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsAlert
    899:903:boolean onJsBeforeUnload(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsBeforeUnload
    879:883:boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsConfirm
    889:893:boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> onJsPrompt
    960:964:boolean onJsTimeout() -> onJsTimeout
    935:943:void onPermissionRequest(android.webkit.PermissionRequest) -> onPermissionRequest
    948:956:void onPermissionRequestCanceled(android.webkit.PermissionRequest) -> onPermissionRequestCanceled
    766:772:void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
    1030:1036:void onReachedMaxAppCacheSize(long,long,android.webkit.WebStorage$QuotaUpdater) -> onReachedMaxAppCacheSize
    786:792:void onReceivedIcon(android.webkit.WebView,android.graphics.Bitmap) -> onReceivedIcon
    776:782:void onReceivedTitle(android.webkit.WebView,java.lang.String) -> onReceivedTitle
    796:802:void onReceivedTouchIconUrl(android.webkit.WebView,java.lang.String,boolean) -> onReceivedTouchIconUrl
    849:855:void onRequestFocus(android.webkit.WebView) -> onRequestFocus
    806:812:void onShowCustomView(android.view.View,android.webkit.WebChromeClient$CustomViewCallback) -> onShowCustomView
    817:825:void onShowCustomView(android.view.View,int,android.webkit.WebChromeClient$CustomViewCallback) -> onShowCustomView
    752:757:boolean onShowFileChooser(android.webkit.WebView,android.webkit.ValueCallback,android.webkit.WebChromeClient$FileChooserParams) -> onShowFileChooser
im.delight.android.webview.AdvancedWebView$3 -> im.delight.android.webview.AdvancedWebView$3:
    1040:1040:void <init>(im.delight.android.webview.AdvancedWebView) -> <init>
    1044:1049:void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long) -> onDownloadStart
lib.kingja.switchbutton.SwitchMultiButton -> lib.kingja.switchbutton.SwitchMultiButton:
    81:82:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    45:88:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    314:317:void checkAttrs() -> checkAttrs
    261:270:void drawLeftPath(android.graphics.Canvas,float,float,float) -> drawLeftPath
    281:290:void drawRightPath(android.graphics.Canvas,float,float,float) -> drawRightPath
    161:161:int getDefaultHeight() -> getDefaultHeight
    168:176:int getDefaultWidth() -> getDefaultWidth
    188:204:int getExpectSize(int,int) -> getExpectSize
    381:381:int getSelectedTab() -> getSelectedTab
    97:114:void initAttrs(android.content.Context,android.util.AttributeSet) -> initAttrs
    121:147:void initPaint() -> initPaint
    359:359:boolean isEnabled() -> isEnabled
    209:250:void onDraw(android.graphics.Canvas) -> onDraw
    151:155:void onMeasure(int,int) -> onMeasure
    438:451:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    424:433:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    303:308:void onSizeChanged(int,int,int,int) -> onSizeChanged
    327:345:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    350:355:void setEnabled(boolean) -> setEnabled
